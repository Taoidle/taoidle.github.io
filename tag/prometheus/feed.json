{
    "version": "https://jsonfeed.org/version/1",
    "title": "null • All posts by \"prometheus\" tag",
    "description": "(づ●─●)づ让我看看再学点什么好",
    "home_page_url": "https://www.taoidle.com",
    "items": [
        {
            "id": "https://www.taoidle.com/2025/02/15/Prometheus%20+%20Grafana%20%E7%9B%91%E6%8E%A7%EF%BC%9APVE%E3%80%81TrueNAS%20%E5%92%8C%E6%A0%91%E8%8E%93%E6%B4%BE%E6%8E%A5%E5%85%A5%E6%8C%87%E5%8D%97/",
            "url": "https://www.taoidle.com/2025/02/15/Prometheus%20+%20Grafana%20%E7%9B%91%E6%8E%A7%EF%BC%9APVE%E3%80%81TrueNAS%20%E5%92%8C%E6%A0%91%E8%8E%93%E6%B4%BE%E6%8E%A5%E5%85%A5%E6%8C%87%E5%8D%97/",
            "title": "Prometheus + Grafana 监控：PVE、TrueNAS 和树莓派接入指南",
            "date_published": "2025-02-15T12:50:17.000Z",
            "content_html": "<p>在现代 IT 环境中，监控系统是确保基础设施稳定运行的核心工具。Prometheus 和 Grafana 是目前最受欢迎的开源监控解决方案之一，凭借其强大的功能和灵活性，广泛应用于各种场景。</p>\n<hr />\n<h1 id=\"引言\"><a class=\"anchor\" href=\"#引言\">#</a> 引言</h1>\n<p>随着业务的扩展和技术的进步，服务器、虚拟机和物联网设备的数量不断增加。为了确保这些系统的稳定性和性能，实时监控变得至关重要。Prometheus 是一个强大的开源监控和报警工具，而 Grafana 则是一个功能丰富的数据可视化平台。两者的结合能够为用户提供全面的监控解决方案。</p>\n<p>本文的目标是帮助你完成以下任务：</p>\n<ul>\n<li>\n<p>安装并配置 Prometheus 和 Grafana（包括使用 Docker 部署）。</p>\n</li>\n<li>\n<p>将 PVE、TrueNAS 和树莓派接入到 Prometheus 监控系统中。</p>\n</li>\n<li>\n<p>在 Grafana 中创建直观的仪表盘，展示各个设备和系统的性能数据。</p>\n</li>\n</ul>\n<hr />\n<h1 id=\"使用-docker-部署-prometheus-和-grafana\"><a class=\"anchor\" href=\"#使用-docker-部署-prometheus-和-grafana\">#</a> 使用 Docker 部署 Prometheus 和 Grafana</h1>\n<h2 id=\"什么是-docker\"><a class=\"anchor\" href=\"#什么是-docker\">#</a> 什么是 Docker？</h2>\n<p>Docker 是一个开源的容器化平台，允许你将应用程序及其依赖打包到一个容器中，从而实现跨平台的快速部署和一致性。</p>\n<h2 id=\"安装-docker\"><a class=\"anchor\" href=\"#安装-docker\">#</a> 安装 Docker</h2>\n<p>在 Linux 系统上，你可以使用以下命令安装 Docker：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 安装 Docker</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> -y docker.io</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 验证 Docker 是否安装成功</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">docker</span> --version</pre></td></tr></table></figure><h2 id=\"使用-docker-部署-grafana\"><a class=\"anchor\" href=\"#使用-docker-部署-grafana\">#</a> 使用 Docker 部署 Grafana</h2>\n<p>Grafana 可以通过 Docker 快速部署。以下是部署命令：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 创建存储目录</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">mkdir</span> -p /opt/grafana-storage</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">mkdir</span> -p /opt/grafana-conf</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 运行 Grafana 容器</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">docker</span> run -d <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  -p <span class=\"token number\">3000</span>:3000 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  --name<span class=\"token operator\">=</span>grafana <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  --restart<span class=\"token operator\">=</span>always <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  -v /opt/grafana-storage:/var/lib/grafana <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  -v /opt/grafana-conf:/etc/grafana <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  grafana/grafana</pre></td></tr></table></figure><ul>\n<li>\n<p><code>-d</code> ：后台运行容器。</p>\n</li>\n<li>\n<p><code>-p 3000:3000</code> ：将容器的 3000 端口映射到宿主机的 3000 端口。</p>\n</li>\n<li>\n<p><code>--name=grafana</code> ：为容器指定名称。</p>\n</li>\n<li>\n<p><code>--restart=always</code> ：设置容器在重启后自动启动。</p>\n</li>\n<li>\n<p><code>-v /opt/grafana-storage:/var/lib/grafana</code> ：将 Grafana 的数据存储目录挂载到宿主机。</p>\n</li>\n<li>\n<p><code>-v /opt/grafana-conf:/etc/grafana</code> ：将 Grafana 的配置文件目录挂载到宿主机。</p>\n</li>\n</ul>\n<h2 id=\"使用-docker-部署-prometheus\"><a class=\"anchor\" href=\"#使用-docker-部署-prometheus\">#</a> 使用 Docker 部署 Prometheus</h2>\n<p>Prometheus 也可以通过 Docker 快速部署。以下是部署命令：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 创建存储目录</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">mkdir</span> -p /opt/prometheus/data</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 创建 Prometheus 配置文件</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">nano</span> /opt/prometheus/prometheus.yml</pre></td></tr></table></figure><p>在  <code>prometheus.yml</code>  中添加以下内容：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">global</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">scrape_interval</span><span class=\"token punctuation\">:</span> 30s</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">scrape_configs</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">job_name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'prometheus'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">static_configs</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">targets</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'localhost:9090'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">job_name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'pve'</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">static_configs</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">targets</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'your-pve-server:9411'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">job_name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'truenas'</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token key atrule\">static_configs</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">targets</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'your-truenas-server:9412'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">job_name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'raspberry-pi'</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token key atrule\">static_configs</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">targets</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'your-raspberry-pi-ip:9100'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">job_name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'cadvisor'</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token key atrule\">static_configs</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">targets</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'your-raspberry-pi-ip:8080'</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>保存并退出。</p>\n<p>运行 Prometheus 容器：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 运行 Prometheus 容器</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">docker</span> run -d <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  -p <span class=\"token number\">9090</span>:9090 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  --name<span class=\"token operator\">=</span>prometheus <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  --restart<span class=\"token operator\">=</span>always <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  -v /opt/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  -v /opt/prometheus/data:/prometheus <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  prom/prometheus</pre></td></tr></table></figure><ul>\n<li>\n<p><code>-d</code> ：后台运行容器。</p>\n</li>\n<li>\n<p><code>-p 9090:9090</code> ：将容器的 9090 端口映射到宿主机的 9090 端口。</p>\n</li>\n<li>\n<p><code>--name=prometheus</code> ：为容器指定名称。</p>\n</li>\n<li>\n<p><code>--restart=always</code> ：设置容器在重启后自动启动。</p>\n</li>\n<li>\n<p><code>-v /opt/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml</code> ：将 Prometheus 的配置文件挂载到容器中。</p>\n</li>\n<li>\n<p><code>-v /opt/prometheus/data:/prometheus</code> ：将 Prometheus 的数据存储目录挂载到宿主机。</p>\n</li>\n</ul>\n<h2 id=\"验证-docker-容器\"><a class=\"anchor\" href=\"#验证-docker-容器\">#</a> 验证 Docker 容器</h2>\n<p>验证 Prometheus 和 Grafana 容器是否运行正常：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">docker</span> <span class=\"token function\">ps</span></pre></td></tr></table></figure><p>访问 Grafana：</p>\n<ul>\n<li>打开浏览器，访问  <code>http://your-grafana-ip:3000</code> ，默认用户名和密码为  <code>admin</code> 。</li>\n</ul>\n<p>访问 Prometheus：</p>\n<ul>\n<li>打开浏览器，访问  <code>http://your-prometheus-ip:9090</code> 。</li>\n</ul>\n<hr />\n<h1 id=\"将-pve-接入-prometheus\"><a class=\"anchor\" href=\"#将-pve-接入-prometheus\">#</a> 将 PVE 接入 Prometheus</h1>\n<h2 id=\"安装-prometheus-pve-exporter\"><a class=\"anchor\" href=\"#安装-prometheus-pve-exporter\">#</a> 安装 Prometheus PVE Exporter</h2>\n<p>Prometheus PVE Exporter 是一个用于监控 Proxmox VE（PVE）的 Prometheus Exporter，可以通过  <code>pip3</code>  安装。</p>\n<h3 id=\"安装步骤\"><a class=\"anchor\" href=\"#安装步骤\">#</a> 安装步骤</h3>\n<ol>\n<li>\n<p><strong>更新软件包并安装 Python 3 环境</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">apt</span> update <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">apt</span> upgrade -y</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">apt</span> <span class=\"token function\">install</span> python3 python3-pip -y</pre></td></tr></table></figure></li>\n<li>\n<p><strong>安装 prometheus-pve-exporter</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip3 <span class=\"token function\">install</span> prometheus-pve-exporter</pre></td></tr></table></figure><p>安装成功后，文件会存储在  <code>/usr/local/bin/pve_exporter</code> 。</p>\n</li>\n<li>\n<p><strong>创建 PVE 监控用户</strong></p>\n<ul>\n<li>\n<p>在 PVE 的 Web 界面中，创建一个用户专用于 Prometheus 监控，用户名为  <code>monitoring</code> ，领域选择  <code>Proxmox VE authentication server</code> ，并设置密码。</p>\n</li>\n<li>\n<p>为用户设置权限：数据中心 -&gt; 权限 -&gt; 添加 -&gt; 用户权限，路径选择  <code>/</code> ，用户选择刚才创建的，权限选择  <code>PVEAuditor</code> 。</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>创建配置文件</strong></p>\n<p>使用您熟悉的编辑器创建配置文件  <code>/etc/prometheus-pve-exporter/pve.yml</code> ：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">default</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> monitoring@pve</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> 你刚才设置的密码</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">verify_ssl</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr></table></figure></li>\n<li>\n<p><strong>创建 systemd 服务</strong></p>\n<p>创建 systemd 服务文件  <code>/etc/systemd/system/prometheus-pve-exporter.service</code> ：</p>\n</li>\n</ol>\n<figure class=\"highlight ini\"><figcaption data-lang=\"ini\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">Unit</span><span class=\"token punctuation\">]</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token key attr-name\">Description</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">Proxmox Exporter</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key attr-name\">After</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">network.target</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">Service</span><span class=\"token punctuation\">]</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key attr-name\">ExecStart</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">/usr/local/bin/pve_exporter --config.file /etc/prometheus-pve-exporter/pve.yml --web.listen-address=:9221</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key attr-name\">Restart</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">always</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">Install</span><span class=\"token punctuation\">]</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key attr-name\">WantedBy</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">multi-user.target</span></pre></td></tr></table></figure><pre><code>保存并关闭文件，然后执行以下命令启动服务：\n</code></pre>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>systemctl daemon-reload</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>systemctl start prometheus-pve-exporter</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>systemctl <span class=\"token builtin class-name\">enable</span> prometheus-pve-exporter</pre></td></tr></table></figure><ol start=\"6\">\n<li>\n<p><strong>验证 Exporter 是否运行</strong></p>\n<p>通过以下命令检查服务状态：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>systemctl status prometheus-pve-exporter</pre></td></tr></table></figure><p>如果正常运行，您可以通过浏览器访问  <code>http://&lt;PVE_SERVER_IP&gt;:9221/pve</code>  查看数据。</p>\n</li>\n</ol>\n<h2 id=\"在-prometheus-中配置-pve-监控\"><a class=\"anchor\" href=\"#在-prometheus-中配置-pve-监控\">#</a> 在 Prometheus 中配置 PVE 监控</h2>\n<ol>\n<li>\n<p><strong>编辑 Prometheus 配置文件</strong>： 编辑 Prometheus 的配置文件  <code>/etc/prometheus/prometheus.yml</code> ：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">nano</span> /etc/prometheus/prometheus.yml</pre></td></tr></table></figure></li>\n<li>\n<p><strong>添加 PVE 监控配置</strong>： 在文件末尾添加以下内容（替换  <code>your-pve-ip</code>  为实际的 PVE 服务器 IP 地址）：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">job_name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'pve'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">metrics_path</span><span class=\"token punctuation\">:</span> /pve</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">static_configs</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">targets</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'your-pve-ip:9221'</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure></li>\n<li>\n<p><strong>重启 Prometheus</strong>：</p>\n<p>bash 复制</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> systemctl restart prometheus</pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"访问-prometheus-pve-exporter\"><a class=\"anchor\" href=\"#访问-prometheus-pve-exporter\">#</a> 访问 Prometheus PVE Exporter</h2>\n<p>访问 Prometheus PVE Exporter 的 Web 界面：</p>\n<ul>\n<li>\n<p>打开浏览器，访问  <code>http://your-pve-ip:9221</code> 。</p>\n</li>\n<li>\n<p>在页面中，你可以通过  <code>/pve?target=your-pve-ip</code>  查看监控数据。</p>\n</li>\n</ul>\n<hr />\n<h1 id=\"将-truenas-接入-prometheus\"><a class=\"anchor\" href=\"#将-truenas-接入-prometheus\">#</a> 将 TrueNAS 接入 Prometheus</h1>\n<p>注：参考项目 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1N1cHBvcnRlcmluby90cnVlbmFzLWdyYXBoaXRlLXRvLXByb21ldGhldXM=\">truenas-graphite-to-prometheus</span></p>\n<h2 id=\"在-truenas-中运行-exporter\"><a class=\"anchor\" href=\"#在-truenas-中运行-exporter\">#</a> 在 TrueNAS 中运行 Exporter</h2>\n<p>TrueNAS 没有官方的 Prometheus Exporter，但可以使用自定义应用来实现。以下是具体步骤：</p>\n<ol>\n<li>\n<p><strong>创建自定义应用</strong></p>\n<ul>\n<li>\n<p>在 TrueNAS 中，打开  <code>Apps</code> （应用）选项卡。</p>\n</li>\n<li>\n<p>点击  <code>Discover Apps</code> （发现应用），然后选择  <code>Custom App</code> （自定义应用）。</p>\n</li>\n<li>\n<p>按照提示填写应用名称，使用默认版本。</p>\n</li>\n<li>\n<p>在镜像设置中，使用以下镜像：</p>\n<ul>\n<li>\n<p>镜像名称： <code>ghcr.io/supporterino/truenas-graphite-to-prometheus</code></p>\n</li>\n<li>\n<p>镜像标签： <code>latest</code></p>\n</li>\n</ul>\n</li>\n<li>\n<p>镜像策略可以保持默认设置。</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>配置端口转发</strong></p>\n<ul>\n<li>\n<p>需要转发两个端口，一个用于 Graphite，另一个用于 Prometheus。</p>\n</li>\n<li>\n<p>Graphite 的容器端口为  <code>9109</code> ，节点端口可以使用相同端口或指定其他可用端口，协议为  <code>TCP</code> 。</p>\n</li>\n<li>\n<p>Prometheus 的容器端口为  <code>9108</code> ，同样使用  <code>TCP</code>  协议。</p>\n</li>\n<li>\n<p>配置示例如下：</p>\n<ul>\n<li>\n<p>Graphite： <code>9109</code> （TCP）</p>\n</li>\n<li>\n<p>Prometheus： <code>9108</code> （TCP）</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>设置资源限制</strong></p>\n<ul>\n<li>Exporter 非常轻量级，因此通常不需要设置资源限制。</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"在-prometheus-中配置-truenas-监控\"><a class=\"anchor\" href=\"#在-prometheus-中配置-truenas-监控\">#</a> 在 Prometheus 中配置 TrueNAS 监控</h2>\n<ol>\n<li>\n<p><strong>编辑 Prometheus 配置文件</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">nano</span> /etc/prometheus/prometheus.yml</pre></td></tr></table></figure></li>\n<li>\n<p><strong>添加 TrueNAS 监控配置</strong></p>\n<p>在文件末尾添加以下内容（替换  <code>your-truenas-server</code>  为实际的 TrueNAS 服务器地址）：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">job_name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'truenas'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">static_configs</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">targets</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'your-truenas-server:9108'</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure></li>\n<li>\n<p><strong>重启 Prometheus</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> systemctl restart prometheus</pre></td></tr></table></figure></li>\n</ol>\n<hr />\n<h1 id=\"将-raspberry-pi-接入-prometheus\"><a class=\"anchor\" href=\"#将-raspberry-pi-接入-prometheus\">#</a> 将 Raspberry Pi 接入 Prometheus</h1>\n<h2 id=\"使用-docker-部署-node_exporter-和-cadvisor\"><a class=\"anchor\" href=\"#使用-docker-部署-node_exporter-和-cadvisor\">#</a> 使用 Docker 部署  <code>node_exporter</code>  和  <code>cadvisor</code></h2>\n<h3 id=\"树莓派安装-docker\"><a class=\"anchor\" href=\"#树莓派安装-docker\">#</a> 树莓派安装 Docker</h3>\n<p>在树莓派上安装 Docker 可以通过以下步骤完成：</p>\n<ol>\n<li>\n<p><strong>更新软件包</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> upgrade -y</pre></td></tr></table></figure></li>\n<li>\n<p><strong>安装 Docker</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> -y docker.io</pre></td></tr></table></figure></li>\n<li>\n<p><strong>验证 Docker 安装</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">docker</span> --version</pre></td></tr></table></figure></li>\n<li>\n<p><strong>将当前用户添加到 docker 组</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">usermod</span> -aG <span class=\"token function\">docker</span> pi</pre></td></tr></table></figure><p>使更改生效：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>newgrp <span class=\"token function\">docker</span></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"使用-docker-部署-node_exporter\"><a class=\"anchor\" href=\"#使用-docker-部署-node_exporter\">#</a> 使用 Docker 部署  <code>node_exporter</code></h3>\n<p>运行  <code>node_exporter</code>  容器：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 运行 node_exporter 容器</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">docker</span> run -d <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  -p <span class=\"token number\">9100</span>:9100 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  --name<span class=\"token operator\">=</span>node_exporter <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  --restart<span class=\"token operator\">=</span>always <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  -v /proc:/host/proc:ro <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  -v /sys:/host/sys:ro <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  -v /:/rootfs:ro <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  prom/node-exporter <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  --path.procfs /host/proc <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  --path.sysfs /host/sys <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  --collector.filesystem.ignored-mount-points <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token string\">\"^/host/(sys|proc|dev|etc|var/lib/docker/containers|var/lib/docker/)\"</span></pre></td></tr></table></figure><ul>\n<li>\n<p><code>-d</code> ：后台运行容器。</p>\n</li>\n<li>\n<p><code>-p 9100:9100</code> ：将容器的 9100 端口映射到宿主机的 9100 端口。</p>\n</li>\n<li>\n<p><code>--name=node_exporter</code> ：为容器指定名称。</p>\n</li>\n<li>\n<p><code>--restart=always</code> ：设置容器在重启后自动启动。</p>\n</li>\n<li>\n<p><code>-v /proc:/host/proc:ro</code> ：将宿主机的  <code>/proc</code>  挂载到容器中。</p>\n</li>\n<li>\n<p><code>-v /sys:/host/sys:ro</code> ：将宿主机的  <code>/sys</code>  挂载到容器中。</p>\n</li>\n<li>\n<p><code>-v /:/rootfs:ro</code> ：将宿主机的根文件系统挂载到容器中。</p>\n</li>\n</ul>\n<h3 id=\"使用-docker-部署-cadvisor\"><a class=\"anchor\" href=\"#使用-docker-部署-cadvisor\">#</a> 使用 Docker 部署  <code>cadvisor</code></h3>\n<p>运行  <code>cadvisor</code>  容器：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 运行 cadvisor 容器</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">docker</span> run --restart<span class=\"token operator\">=</span>always <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  --volume<span class=\"token operator\">=</span>/:/rootfs:ro <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  --volume<span class=\"token operator\">=</span>/var/run:/var/run:ro <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  --volume<span class=\"token operator\">=</span>/sys:/sys:ro <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  --volume<span class=\"token operator\">=</span>/var/lib/docker/:/var/lib/docker:ro <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  --volume<span class=\"token operator\">=</span>/dev/disk/:/dev/disk:ro <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  --publish<span class=\"token operator\">=</span><span class=\"token number\">8080</span>:8080 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  --detach<span class=\"token operator\">=</span>true <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  --name<span class=\"token operator\">=</span>cadvisor <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  --privileged <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  --device<span class=\"token operator\">=</span>/dev/kmsg <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  gcr.io/cadvisor/cadvisor:v0.49.2 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  --housekeeping_interval<span class=\"token operator\">=</span>15s <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  --docker_only<span class=\"token operator\">=</span>true <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  --store_container_labels<span class=\"token operator\">=</span>false</pre></td></tr></table></figure><ul>\n<li>\n<p><code>--restart=always</code> ：设置容器在重启后自动启动。</p>\n</li>\n<li>\n<p><code>--volume=/:/rootfs:ro</code> ：将宿主机的根文件系统挂载到容器中。</p>\n</li>\n<li>\n<p><code>--volume=/var/run:/var/run:ro</code> ：将宿主机的  <code>/var/run</code>  挂载到容器中。</p>\n</li>\n<li>\n<p><code>--volume=/sys:/sys:ro</code> ：将宿主机的  <code>/sys</code>  挂载到容器中。</p>\n</li>\n<li>\n<p><code>--volume=/var/lib/docker/:/var/lib/docker:ro</code> ：将宿主机的 Docker 数据目录挂载到容器中。</p>\n</li>\n<li>\n<p><code>--volume=/dev/disk/:/dev/disk:ro</code> ：将宿主机的磁盘设备挂载到容器中。</p>\n</li>\n<li>\n<p><code>--publish=8080:8080</code> ：将容器的 8080 端口映射到宿主机的 8080 端口。</p>\n</li>\n<li>\n<p><code>--detach=true</code> ：后台运行容器。</p>\n</li>\n<li>\n<p><code>--name=cadvisor</code> ：为容器指定名称。</p>\n</li>\n<li>\n<p><code>--privileged</code> ：赋予容器特权模式。</p>\n</li>\n<li>\n<p><code>--device=/dev/kmsg</code> ：将宿主机的  <code>/dev/kmsg</code>  设备挂载到容器中。</p>\n</li>\n</ul>\n<h3 id=\"在-prometheus-中配置树莓派监控\"><a class=\"anchor\" href=\"#在-prometheus-中配置树莓派监控\">#</a> 在 Prometheus 中配置树莓派监控</h3>\n<p>在  <code>prometheus.yml</code>  中添加以下内容：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">job_name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'raspberry-pi-node-exporter'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token key atrule\">static_configs</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">targets</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'your-raspberry-pi-ip:9100'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">job_name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'raspberry-pi-cadvisor'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">static_configs</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">targets</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'your-raspberry-pi-ip:8080'</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>重启 Prometheus：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> systemctl restart prometheus</pre></td></tr></table></figure><hr />\n<h1 id=\"在-grafana-中创建-dashboard\"><a class=\"anchor\" href=\"#在-grafana-中创建-dashboard\">#</a> 在 Grafana 中创建 Dashboard</h1>\n<h2 id=\"添加-prometheus-数据源\"><a class=\"anchor\" href=\"#添加-prometheus-数据源\">#</a> 添加 Prometheus 数据源</h2>\n<p>在 Grafana 中，导航到  <code>Configuration</code>  &gt;  <code>Data Sources</code> ，添加一个 Prometheus 数据源。</p>\n<ol>\n<li>\n<p>点击  <code>Add data source</code> 。</p>\n</li>\n<li>\n<p>选择  <code>Prometheus</code> 。</p>\n</li>\n<li>\n<p>在  <code>HTTP</code>  选项卡中，输入 Prometheus 的地址（如  <code>http://localhost:9090</code> ）。</p>\n</li>\n<li>\n<p>点击  <code>Save &amp; Test</code> ，确保连接成功。</p>\n</li>\n</ol>\n<h2 id=\"创建监控图表\"><a class=\"anchor\" href=\"#创建监控图表\">#</a> 创建监控图表</h2>\n<p>进入  <code>Dashboard</code> ，点击  <code>Add Panel</code> ，选择  <code>import</code></p>\n<ul>\n<li>raspberry 仪表盘： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ncmFmYW5hLmNvbS9ncmFmYW5hL2Rhc2hib2FyZHMvMTUxMjAtcmFzcGJlcnJ5LXBpLWRvY2tlci1tb25pdG9yaW5nLw==\">raspberry-pi-docker-monitoring</span></li>\n<li>pve 仪表盘：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ncmFmYW5hLmNvbS9ncmFmYW5hL2Rhc2hib2FyZHMvMTAzNDctcHJveG1veC12aWEtcHJvbWV0aGV1cy8=\">proxmox-via-prometheus</span></li>\n<li>truenas 仪表盘：在上面提到的项目 <code>truenas-graphite-to-prometheus</code>  的 Dashboard 目录中</li>\n</ul>\n",
            "tags": [
                "prometheus",
                "grafana",
                "docker",
                "pve",
                "truenas",
                "raspberry pi"
            ]
        }
    ]
}