{
    "version": "https://jsonfeed.org/version/1",
    "title": "Taoidle • All posts by \"cdn\" tag",
    "description": "秋深し、情けは人の、為ならず",
    "home_page_url": "https://www.taoidle.com",
    "items": [
        {
            "id": "https://www.taoidle.com/2022/11/02/%E5%8D%9A%E5%AE%A2%E5%8F%8A%E7%9B%B8%E5%85%B3%E6%9C%8D%E5%8A%A1/",
            "url": "https://www.taoidle.com/2022/11/02/%E5%8D%9A%E5%AE%A2%E5%8F%8A%E7%9B%B8%E5%85%B3%E6%9C%8D%E5%8A%A1/",
            "title": "博客及相关服务",
            "date_published": "2022-11-02T06:21:50.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>本文对我博客架构及相关服务的记录和补充。</p>\n<h2 id=\"正文\"><a class=\"anchor\" href=\"#正文\">#</a> 正文</h2>\n<p><s>众所周知</s>，我早期为 Wordpress 用户，用 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21hc2hpcm96eC9zYWt1cmE=\">Sakura</span> 主题，后期使用了基于 Sakara 重构的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21pcmFpLW1hbW9yaS9TYWt1cmFpcm8=\">Sakurairo</span>；同期，由 sakura 的随机封面功能，网上没看到比较符合我 xp 的，所以自己搓了个随即图服务。在 Wordpress 时期，我的博客和随即图服务在同一台服务器上，然后套了个 cdn。</p>\n<p>迁移到 hexo 主要原因是<s> Wordpress 太慢了</s> <span class=\"spoiler bulr\" title=\"你知道得太多了\">学生优惠无了</span>。</p>\n<p>于是现在变成了这样：</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/about_blog&amp;services(1).png\" alt=\"\" /></p>\n<p>本地写完 push 到 github 仓库 source 分支，触发 github action 进行构建，构建完分别 deploy 到 github 仓库的 master 分支和腾讯云存储桶。</p>\n<p>在访问的时，先通过阿里云 dns 做分流，国内流量走到腾讯云上，国外流量走到 github page。</p>\n<p>图片资源同理，通过阿里云 dns 做分流，国内走又拍云（通过又拍云联盟白嫖免费额度）。</p>\n<p>至于原本的图片 API 则拆成两个，国内使用<a href=\"https://www.taoidle.com/2022/07/10/%E8%85%BE%E8%AE%AF%E4%BA%91%E5%87%BD%E6%95%B0%E9%9A%8F%E6%9C%BA%E5%9B%BEapi%E5%AE%9E%E7%8E%B0\">腾讯云 SCF</a>，国外使用<a href=\"https://www.taoidle.com/2022/05/24/%E4%BD%BF%E7%94%A8cloudflare%E5%92%8Cjsdelivr%E5%81%9A%E4%B8%80%E4%B8%AA%E9%9A%8F%E6%9C%BA%E5%9B%BEapi/\"> cloudflare worker</a>。图片 API 变成了这样：</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/about_blog&amp;services(2).png\" alt=\"\" /></p>\n",
            "tags": [
                "cloudflare",
                "github",
                "cdn",
                "tencent cloud",
                "leancloud",
                "upyun"
            ]
        },
        {
            "id": "https://www.taoidle.com/2022/07/10/%E8%85%BE%E8%AE%AF%E4%BA%91%E5%87%BD%E6%95%B0%E9%9A%8F%E6%9C%BA%E5%9B%BEapi%E5%AE%9E%E7%8E%B0/",
            "url": "https://www.taoidle.com/2022/07/10/%E8%85%BE%E8%AE%AF%E4%BA%91%E5%87%BD%E6%95%B0%E9%9A%8F%E6%9C%BA%E5%9B%BEapi%E5%AE%9E%E7%8E%B0/",
            "title": "腾讯云函数随机图api实现",
            "date_published": "2022-07-10T11:11:32.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>为了提高博客在国内的访问速度，于是决定做一个部署在国内的随机图 api。然后看了一下，又拍云可以白嫖免费的 cdn 和存储桶，leancloud 白嫖数据存储，腾讯云函数备案资源包 5 年一百多四舍五入不要钱，最终约等于白嫖麻了，舒服～</p>\n<p>注：虽然但是，leancloud 数据存储 api 每天只能请求 3 万次，对于我这种小博客来说，问题不大。</p>\n<h2 id=\"正文\"><a class=\"anchor\" href=\"#正文\">#</a> 正文</h2>\n<h3 id=\"思路\"><a class=\"anchor\" href=\"#思路\">#</a> 思路</h3>\n<p>简单来说，为了偷懒，和之前在 cloudflare worker 上的实现没区别，语言换成了 javasript，框架换成 express，数据存储换成 leancloud。</p>\n<p>至于为什么之前的项目用的是 typescript 而这个变成了 javascript，主要原因 leancloud 的包在 typescript 和 webpack 一起用的时候会出莫名其妙的问题（其实是 webpack 出问题），赶时间不想排查原因。</p>\n<h4 id=\"随机图接口\"><a class=\"anchor\" href=\"#随机图接口\">#</a> 随机图接口</h4>\n<p>leancloud 结构化数据中存储了一个 class 叫 Api_Data，class 中的 object 有 api_key 和 api_value 两个属性，其中有一个 api_key 属性值为 KV_INDEX 的 object 其属性 api_value 中存储了如下结构的数据，用于查找和索引：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"KV_INDEX\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"total_num\"</span><span class=\"token operator\">:</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"map_total\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"map_num\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token string\">\"MAP_1_NUM\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token string\">\"MAP_2_NUM\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token string\">\"MAP_3_NUM\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token property\">\"map_list\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token string\">\"MAP_KEY_1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token string\">\"MAP_KEY_2\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token string\">\"MAP_KEY_3\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>存储了若干个表，表如下</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"MAP_KEY_1\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"pic_1_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_1_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"pic_2_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_2_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"pic_3_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_3_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"pic_99_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_99_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">\"pic_100_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_100_path\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"MAP_KEY_2\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"pic_101_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_101_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"pic_102_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_102_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"pic_103_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_103_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"pic_199_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_199_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">\"pic_200_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_200_path\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"MAP_KEY_3\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"pic_201_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_201_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"pic_202_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_202_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"pic_203_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_203_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"pic_299_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_299_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">\"pic_300_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_300_path\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>于是每次随机一张图会产生两次 read 操作，一次从索引中拿到 map_key, 一次从 map 中取数据</p>\n<h4 id=\"数据更新接口\"><a class=\"anchor\" href=\"#数据更新接口\">#</a> 数据更新接口</h4>\n<p>接受数据如下</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"pic_1_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_1_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"pic_2_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_2_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"pic_3_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_3_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"pic_99_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_99_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"pic_100_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_100_path\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>更新数据时步骤如下</p>\n<ol>\n<li>\n<p>从 kv 中取索引，在从索引中获取到表中的 key</p>\n</li>\n<li>\n<p>判断更新数据的 key 在表中时候存在，不存在则将该项添加到待更新表</p>\n</li>\n<li>\n<p>全部待更新数据添加到待更新表后，更新索引数据，最后把所有更新的数据写入到 kv 中</p>\n</li>\n</ol>\n<h3 id=\"步骤\"><a class=\"anchor\" href=\"#步骤\">#</a> 步骤</h3>\n<ol>\n<li>\n<p>在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudXB5dW4uY29t\">又拍云</span> 创建存储桶，绑定自定义域名，把资源上传到又拍云的存储桶中。在<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudXB5dW4uY29tL2xlYWd1ZQ==\">又拍云联盟</span>加入开发者帮助计划，申请免费的云存储空间和 CDN 流量。</p>\n</li>\n<li>\n<p>在 leancloud 国内版创建一个应用。</p>\n</li>\n<li>\n<p>把 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1Rhb2lkbGUvUmFuZFBpY1NDRg==\">RandPiSCF</span> 部署到腾讯云函数。</p>\n<p>注意，需要配置一下环境变量 (在 leancloud 你创建的应用 -&gt; 设置 -&gt; 应用凭证)：</p>\n<ul>\n<li>\n<p>LEANCLOUD_APP_ID leancloud 中的 AppID</p>\n</li>\n<li>\n<p>LEANCLOUD_APP_KEY leancloud 中的 AppKey</p>\n</li>\n<li>\n<p>LEANCLOUD_APP_MASTER_KEY leancloud 中的 MasterKey</p>\n</li>\n<li>\n<p>LEANCLOUD_APP_SERVER_URL leancoud 中 REST API 服务器地址或者域名绑定中的 api 域名</p>\n</li>\n<li>\n<p>PAGE_ITEM 数据存储中的分表</p>\n</li>\n</ul>\n</li>\n<li>\n<p>随便写个脚本把图片信息丢上去完事 <span class=\"spoiler\" title=\"你知道得太多了\">本来这里是有个 rust 写的程序的，用于将图片转为 webp 然后把 hash 值和路径丢到 worker 和 scf 上，但是由于目前比较忙，有空再写</span></p>\n</li>\n</ol>\n<h2 id=\"结束语\"><a class=\"anchor\" href=\"#结束语\">#</a> 结束语</h2>\n<p>其实就是前文 <a href=\"https://www.taoidle.com/2022/05/24/%E4%BD%BF%E7%94%A8cloudflare%E5%92%8Cjsdelivr%E5%81%9A%E4%B8%80%E4%B8%AA%E9%9A%8F%E6%9C%BA%E5%9B%BEapi/\">使用 cloudflare 和 jsdelivr 做一个随机图 api</a> 的腾讯云函数偷懒实现版本，并没有对使用的资源做任何优化。后续有空优化一下，反正目前对我来说够用。</p>\n",
            "tags": [
                "nodejs",
                "cdn",
                "tencent cloud",
                "leancloud",
                "upyun",
                "scf",
                "javascript"
            ]
        },
        {
            "id": "https://www.taoidle.com/2022/05/24/%E4%BD%BF%E7%94%A8cloudflare%E5%92%8Cjsdelivr%E5%81%9A%E4%B8%80%E4%B8%AA%E9%9A%8F%E6%9C%BA%E5%9B%BEapi/",
            "url": "https://www.taoidle.com/2022/05/24/%E4%BD%BF%E7%94%A8cloudflare%E5%92%8Cjsdelivr%E5%81%9A%E4%B8%80%E4%B8%AA%E9%9A%8F%E6%9C%BA%E5%9B%BEapi/",
            "title": "使用cloudflare和jsdelivr做一个随机图api",
            "date_published": "2022-05-24T08:34:24.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>博客最近进行迁移，原本使用 wordpress，现迁移至 hexo。从原来的腾讯云轻量应用服务器迁移到 cloudflare page。既然如此，那原本部署在腾讯云上使用 python 搭建的随即图 api 也没必要存在了。做随机图 api 的初衷只是因为想要自己喜欢的图。</p>\n<p>注：博主的图片只有不到 30 张，小样本使用，数量较少。</p>\n<h2 id=\"正文\"><a class=\"anchor\" href=\"#正文\">#</a> 正文</h2>\n<h3 id=\"思路\"><a class=\"anchor\" href=\"#思路\">#</a> 思路</h3>\n<p><s>比较简单，cloudflare kv 有 1G 空间，把 hash 和图片对应的路径存进 kv 里，然后 worker 从 kv 里随机取一个出来跳转到 jsdelivr 就行了</s></p>\n<h4 id=\"随机图接口\"><a class=\"anchor\" href=\"#随机图接口\">#</a> 随机图接口</h4>\n<p>由于 cloudflare kv 的免费额度限制，write、delete、list 每天只有 1000 次，而 read 有 10 万次， 所以尽可能将 kv 操作使用 read 来实现。</p>\n<p>kv 中存储了一个 index 数据，用来查找数据，如下：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"KV_INDEX\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"total_num\"</span><span class=\"token operator\">:</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"map_total\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"map_num\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token string\">\"MAP_1_NUM\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token string\">\"MAP_2_NUM\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token string\">\"MAP_3_NUM\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token property\">\"map_list\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token string\">\"MAP_KEY_1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token string\">\"MAP_KEY_2\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token string\">\"MAP_KEY_3\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>存储了若干个表，表如下</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"MAP_KEY_1\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"pic_1_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_1_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"pic_2_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_2_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"pic_3_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_3_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"pic_99_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_99_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">\"pic_100_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_100_path\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"MAP_KEY_2\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"pic_101_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_101_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"pic_102_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_102_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"pic_103_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_103_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"pic_199_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_199_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">\"pic_200_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_200_path\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"MAP_KEY_3\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"pic_201_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_201_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"pic_202_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_202_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"pic_203_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_203_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"pic_299_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_299_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">\"pic_300_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_300_path\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>于是每次随机一张图会产生两次 read 操作，一次从索引中拿到 map_key, 一次从 map 中取数据</p>\n<h4 id=\"数据更新接口\"><a class=\"anchor\" href=\"#数据更新接口\">#</a> 数据更新接口</h4>\n<p>接受数据如下</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"pic_1_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_1_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"pic_2_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_2_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"pic_3_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_3_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"pic_99_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_99_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"pic_100_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_100_path\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>更新数据时步骤如下</p>\n<ol>\n<li>\n<p>从 kv 中取索引，在从索引中获取到表中的 key</p>\n</li>\n<li>\n<p>判断更新数据的 key 在表中时候存在，不存在则将该项添加到待更新表</p>\n</li>\n<li>\n<p>全部待更新数据添加到待更新表后，更新索引数据，最后把所有更新的数据写入到 kv 中</p>\n</li>\n</ol>\n<h3 id=\"资源消耗\"><a class=\"anchor\" href=\"#资源消耗\">#</a> 资源消耗</h3>\n<h4 id=\"随机图接口-2\"><a class=\"anchor\" href=\"#随机图接口-2\">#</a> 随机图接口</h4>\n<p>于是每次随机一张图会产生两次 read 操作，一次从索引中拿到 map_key, 一次从 map 中取数据，以每天 cloudflare kv 每天 10 万次免费的 read，一天可以请求随机图接口 5 万次</p>\n<h4 id=\"数据更新接口-2\"><a class=\"anchor\" href=\"#数据更新接口-2\">#</a> 数据更新接口</h4>\n<p>假设 kv 中每个表存储 1000 条数据，kv 中已有一个表存储 100 条数据，更新的数据有 2000 条，更新时会读取索引值一次，读取已存在的所有表（这里为一次），更新的信息为 已经存在的表 1 增加了 900 条数据，创建表 2 及表 2 1000 条数据，创建表 3 及表 3 100 条数据，索引值更新。此时会对 kv 做 4 次写入，总共是 2 次读取，4 次写入。</p>\n<h3 id=\"步骤\"><a class=\"anchor\" href=\"#步骤\">#</a> 步骤</h3>\n<ol>\n<li>\n<p>在 github 上创建一个空仓库用于存放图片，然后将自己喜欢的图片提交到该仓库即可，然后就可以在 jsdelivr 上取到该仓库的文件</p>\n<pre><code class=\"language-console\">https://cdn.assets.taoidle.com/gh/github用户名/仓库名@分支\n</code></pre>\n</li>\n<li>\n<p>克隆 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1Rhb2lkbGUvUmFuZFBpY1dvcmtlcg==\">RandPicWorker</span> 这个项目，在项目根目录下执行 yarn 打好依赖。然后使用以下命令登录 cloudflare</p>\n<pre><code class=\"language-console\">yarn run wrangler login\n</code></pre>\n</li>\n<li>\n<p>在 cloudflare 上创建一个 kv namespace</p>\n</li>\n<li>\n<p>填写项目里 wrangler.toml 文件缺少的信息</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/Snipaste_2022-05-25_22-30-06.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>执行 package.json scripts 里的 publish 命令</p>\n</li>\n<li>\n<p>随便写个脚本把图片信息丢上去完事 <span class=\"spoiler\" title=\"你知道得太多了\">本来这里是有个 rust 写的程序的，用于将图片转为 webp 然后把 hash 值和路径丢到 worker 上，但是由于目前比较忙，有空再写</span></p>\n</li>\n</ol>\n<h2 id=\"结束语\"><a class=\"anchor\" href=\"#结束语\">#</a> 结束语</h2>\n<p>代码过于简单没啥好说的，好久没写博客了上来水一篇</p>\n<hr />\n<p>端午假期稍微更新了一下</p>\n",
            "tags": [
                "nodejs",
                "cloudflare",
                "cloudflare worker",
                "github",
                "cdn",
                "typescript"
            ]
        }
    ]
}