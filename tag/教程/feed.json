{
    "version": "https://jsonfeed.org/version/1",
    "title": "Taoidle • All posts by \"教程\" tag",
    "description": "",
    "home_page_url": "https://www.taoidle.com",
    "items": [
        {
            "id": "https://www.taoidle.com/2020/09/02/python%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86-%E7%9B%B8%E6%9C%BA%E6%A0%87%E5%AE%9A%E3%80%81%E7%95%B8%E5%8F%98%E7%9F%AB%E6%AD%A3/",
            "url": "https://www.taoidle.com/2020/09/02/python%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86-%E7%9B%B8%E6%9C%BA%E6%A0%87%E5%AE%9A%E3%80%81%E7%95%B8%E5%8F%98%E7%9F%AB%E6%AD%A3/",
            "title": "Python图像处理 —— 相机标定、畸变矫正",
            "date_published": "2020-09-02T09:12:15.000Z",
            "content_html": "<h2 id=\"实验数据\"><a class=\"markdownIt-Anchor\" href=\"#实验数据\">#</a> 实验数据</h2>\n<ul>\n<li>标定图（黑白棋盘图）若干（不少于 10 张拍摄不同角度的图片，焦距不变）</li>\n</ul>\n<h2 id=\"过程\"><a class=\"markdownIt-Anchor\" href=\"#过程\">#</a> 过程</h2>\n<ul>\n<li>每张图片提取角点信息</li>\n<li>每张图片提取亚像素角点信息</li>\n<li>相机标定</li>\n<li>畸变矫正</li>\n</ul>\n<h2 id=\"内参数矩阵-畸变系数\"><a class=\"markdownIt-Anchor\" href=\"#内参数矩阵-畸变系数\">#</a> 内参数矩阵、畸变系数</h2>\n<ul>\n<li>这里保存为 json 文件</li>\n</ul>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"mtx\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token number\">3096.855023641478</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token number\">1029.4641305618723</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token number\">3091.0248015384295</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token number\">333.24889640636945</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token number\">1.0</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token property\">\"dist\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token number\">-0.102230276138444</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token number\">-6.080581251041141</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token number\">0.013564529498038387</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token number\">-0.0027957254737596593</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token number\">39.277124343630284</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"矫正前图像\"><a class=\"markdownIt-Anchor\" href=\"#矫正前图像\">#</a> 矫正前图像</h2>\n<p><img data-src=\"/assets/images/wp_editor_md_46c192be1a69cf0a3d0a1e2d6e95eafb.jpg\" alt=\"\"></p>\n<h2 id=\"矫正后图像\"><a class=\"markdownIt-Anchor\" href=\"#矫正后图像\">#</a> 矫正后图像</h2>\n<p><img data-src=\"/assets/images/wp_editor_md_f77ee67a039c3902f6253c5f1cab1f8a.jpg\" alt=\"\"></p>\n<h2 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h2>\n<ul>\n<li>包括图片矫正、视频矫正</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> cv2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> glob</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> json</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CameraCalibration</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">calibration_init</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> pic_path<span class=\"token punctuation\">,</span> save_parameters<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\"># 亚像素角点的参数</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        criteria <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>TERM_CRITERIA_EPS <span class=\"token operator\">+</span> cv2<span class=\"token punctuation\">.</span>TERM_CRITERIA_MAX_ITER<span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.001</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\"># 标定板角点的位置</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        objp <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>width <span class=\"token operator\">*</span> height<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>float32<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        objp<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>mgrid<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>width<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>height<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>T<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\"># 存储点</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        obj_points<span class=\"token punctuation\">,</span> img_points <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        images <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">.</span>glob<span class=\"token punctuation\">(</span>pic_path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> images<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            gray <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2GRAY<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token comment\"># 棋盘格角点</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            ret<span class=\"token punctuation\">,</span> corners <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>findChessboardCorners<span class=\"token punctuation\">(</span>gray<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token comment\"># 存储角点</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token keyword\">if</span> ret<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                cv2<span class=\"token punctuation\">.</span>cornerSubPix<span class=\"token punctuation\">(</span>gray<span class=\"token punctuation\">,</span> corners<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> criteria<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                obj_points<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>objp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                img_points<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>corners<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token comment\"># 标定</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        ret<span class=\"token punctuation\">,</span> mtx<span class=\"token punctuation\">,</span> dist<span class=\"token punctuation\">,</span> rvecs<span class=\"token punctuation\">,</span> tvecs <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>calibrateCamera<span class=\"token punctuation\">(</span>obj_points<span class=\"token punctuation\">,</span> img_points<span class=\"token punctuation\">,</span> gray<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">if</span> save_parameters<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            self<span class=\"token punctuation\">.</span>__parameters_init<span class=\"token punctuation\">(</span>mtx<span class=\"token punctuation\">,</span> dist<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ret:\"</span><span class=\"token punctuation\">,</span> ret<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mtx:\\n\"</span><span class=\"token punctuation\">,</span> mtx<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 内参数矩阵</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dist:\\n\"</span><span class=\"token punctuation\">,</span> dist<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 畸变系数   distortion cofficients = (k_1,k_2,p_1,p_2,k_3)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rvecs:\\n\"</span><span class=\"token punctuation\">,</span> rvecs<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 旋转向量  # 外参数</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tvecs:\\n\"</span><span class=\"token punctuation\">,</span> tvecs<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 平移向量  # 外参数</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__parameters_init</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> mtx<span class=\"token punctuation\">,</span> dist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        parameters_path <span class=\"token operator\">=</span> <span class=\"token string\">'./parameters.json'</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span>parameters_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            os<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">(</span><span class=\"token string\">r'touch %s'</span> <span class=\"token operator\">%</span> parameters_path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            self<span class=\"token punctuation\">.</span>__write_parameters<span class=\"token punctuation\">(</span>mtx<span class=\"token punctuation\">,</span> dist<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            self<span class=\"token punctuation\">.</span>__write_parameters<span class=\"token punctuation\">(</span>mtx<span class=\"token punctuation\">,</span> dist<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@staticmethod</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__write_parameters</span><span class=\"token punctuation\">(</span>mtx<span class=\"token punctuation\">,</span> dist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./parameters.json\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            content <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"mtx\"</span><span class=\"token punctuation\">:</span> mtx<span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"dist\"</span><span class=\"token punctuation\">:</span> dist<span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">,</span> ensure_ascii<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        f<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CameraCorrect</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        self<span class=\"token punctuation\">.</span>__correct_init<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token comment\"># 畸变参数初始化</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__correct_init</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> parameters_file_path<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"./parameters.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span>parameters_file_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>parameters_file_path<span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                json_data <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>                self<span class=\"token punctuation\">.</span>mtx <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>json_data<span class=\"token punctuation\">[</span><span class=\"token string\">\"mtx\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>                self<span class=\"token punctuation\">.</span>dist <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>json_data<span class=\"token punctuation\">[</span><span class=\"token string\">\"dist\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token comment\"># 图片畸变校准</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">correct_pic</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> origin_path<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> target_path<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"./\"</span><span class=\"token punctuation\">,</span> file_name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"cor_pic\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                    file_format<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span>origin_path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        pic_height<span class=\"token punctuation\">,</span> pic_width <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        file_format <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>__calibration_pic_format<span class=\"token punctuation\">(</span>file_format<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        cv2<span class=\"token punctuation\">.</span>imwrite<span class=\"token punctuation\">(</span>target_path <span class=\"token operator\">+</span> file_name <span class=\"token operator\">+</span> <span class=\"token string\">\".\"</span> <span class=\"token operator\">+</span> file_format<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                    self<span class=\"token punctuation\">.</span>__distortion_correction<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> pic_width<span class=\"token punctuation\">,</span> pic_height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token comment\"># 视频畸变校准 (直接输出视频)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">correct_vid2vid</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> origin_path<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> target_path<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"./\"</span><span class=\"token punctuation\">,</span> file_name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"cor_vid\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>                        file_format<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"mp4\"</span><span class=\"token punctuation\">,</span> file_coding<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"mp4v\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        cap <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span>origin_path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token comment\"># 获取视频参数</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        fps<span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">,</span> vid_width<span class=\"token punctuation\">,</span> vid_height <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>__get_capture_attribute<span class=\"token punctuation\">(</span>cap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token comment\"># 格式编码校对</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>__calibration_format_coding<span class=\"token punctuation\">(</span>file_format<span class=\"token punctuation\">,</span> file_coding<span class=\"token punctuation\">)</span> <span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>            file_format<span class=\"token punctuation\">,</span> file_coding <span class=\"token operator\">=</span> <span class=\"token string\">\"mp4\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"mp4v\"</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        out <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoWriter<span class=\"token punctuation\">(</span>target_path <span class=\"token operator\">+</span> file_name <span class=\"token operator\">+</span> <span class=\"token string\">\".\"</span> <span class=\"token operator\">+</span> file_format<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>                              cv2<span class=\"token punctuation\">.</span>VideoWriter_fourcc<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>self<span class=\"token punctuation\">.</span>__get_vid_coding<span class=\"token punctuation\">(</span>file_coding<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> fps<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>                              <span class=\"token punctuation\">(</span>vid_width<span class=\"token punctuation\">,</span> vid_height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>            ret<span class=\"token punctuation\">,</span> img <span class=\"token operator\">=</span> cap<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>            <span class=\"token keyword\">if</span> ret<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>                img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>vid_width<span class=\"token punctuation\">,</span> vid_height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>                dst <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>__distortion_correction<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> vid_width<span class=\"token punctuation\">,</span> vid_height<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>                out<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>dst<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        cap<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>        out<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token comment\"># 视频畸变校准 (校准抽取所有帧)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">correct_vid2pic</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> origin_path<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> target_path<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"./\"</span><span class=\"token punctuation\">,</span> file_name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"cor_pic\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>                        file_format<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        file_format <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>__calibration_pic_format<span class=\"token punctuation\">(</span>file_format<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>        cap <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span>origin_path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>        fps<span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">,</span> vid_width<span class=\"token punctuation\">,</span> vid_height <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>__get_capture_attribute<span class=\"token punctuation\">(</span>cap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>            ret<span class=\"token punctuation\">,</span> img <span class=\"token operator\">=</span> cap<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>            <span class=\"token keyword\">if</span> ret<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>                img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>vid_width<span class=\"token punctuation\">,</span> vid_height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>                cv2<span class=\"token punctuation\">.</span>imwrite<span class=\"token punctuation\">(</span>target_path <span class=\"token operator\">+</span> file_name <span class=\"token operator\">+</span> <span class=\"token string\">\"_\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\".\"</span> <span class=\"token operator\">+</span> file_format<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>                            self<span class=\"token punctuation\">.</span>__distortion_correction<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> vid_width<span class=\"token punctuation\">,</span> vid_height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>        cap<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>        cv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>    <span class=\"token comment\"># 获取视频参数</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@staticmethod</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__get_capture_attribute</span><span class=\"token punctuation\">(</span>vid<span class=\"token punctuation\">:</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>        fps <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>vid<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FPS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 视频帧率</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>        count <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>vid<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_COUNT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 视频帧数</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>        width <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>vid<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_WIDTH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 视频宽度 vid.shape [1]</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>        height <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>vid<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_HEIGHT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 视频高度 vid.shape [0]</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>        <span class=\"token keyword\">return</span> fps<span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height</pre></td></tr><tr><td data-num=\"130\"></td><td><pre></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    <span class=\"token comment\"># 图片格式校对</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@staticmethod</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__calibration_pic_format</span><span class=\"token punctuation\">(</span>file_format<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>        <span class=\"token keyword\">if</span> file_format <span class=\"token operator\">==</span> <span class=\"token string\">\"jpg\"</span> <span class=\"token keyword\">or</span> file_format <span class=\"token operator\">==</span> <span class=\"token string\">\"png\"</span> <span class=\"token keyword\">or</span> file_format <span class=\"token operator\">==</span> <span class=\"token string\">\"bmp\"</span> <span class=\"token keyword\">or</span> file_format <span class=\"token operator\">==</span> <span class=\"token string\">\"tiff\"</span> <span class=\"token keyword\">or</span> file_format <span class=\"token operator\">==</span> <span class=\"token string\">\"tif\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>            <span class=\"token keyword\">return</span> file_format</pre></td></tr><tr><td data-num=\"136\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token string\">\"png\"</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>    <span class=\"token comment\"># 视频格式编码校对</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@staticmethod</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__calibration_format_coding</span><span class=\"token punctuation\">(</span>file_format<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> file_coding<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>        file_format<span class=\"token punctuation\">,</span> file_coding <span class=\"token operator\">=</span> file_format<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> file_coding<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>        <span class=\"token keyword\">if</span> file_format <span class=\"token operator\">==</span> <span class=\"token string\">\"mp4\"</span> <span class=\"token keyword\">and</span> file_coding <span class=\"token operator\">==</span> <span class=\"token string\">\"mp4v\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>        <span class=\"token keyword\">elif</span> file_format <span class=\"token operator\">==</span> <span class=\"token string\">\"avi\"</span> <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span>file_coding <span class=\"token operator\">==</span> <span class=\"token string\">\"yuv\"</span> <span class=\"token keyword\">or</span> file_coding <span class=\"token operator\">==</span> <span class=\"token string\">\"mpeg-1\"</span> <span class=\"token keyword\">or</span> file_coding <span class=\"token operator\">==</span> <span class=\"token string\">\"mpeg-4\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>        <span class=\"token keyword\">elif</span> file_format <span class=\"token operator\">==</span> <span class=\"token string\">\"ogv\"</span> <span class=\"token keyword\">and</span> file_coding <span class=\"token operator\">==</span> <span class=\"token string\">\"ogg vorbis\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>        <span class=\"token keyword\">elif</span> file_format <span class=\"token operator\">==</span> <span class=\"token string\">\"flv\"</span> <span class=\"token keyword\">and</span> file_coding <span class=\"token operator\">==</span> <span class=\"token string\">\"flash\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>    <span class=\"token comment\"># 获取编码参数</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@staticmethod</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__get_vid_coding</span><span class=\"token punctuation\">(</span>file_coding<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>        file_coding <span class=\"token operator\">=</span> file_coding<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>        <span class=\"token keyword\">if</span> file_coding <span class=\"token operator\">==</span> <span class=\"token string\">\"mp4v\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token string\">'mp4v'</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>        <span class=\"token keyword\">elif</span> file_coding <span class=\"token operator\">==</span> <span class=\"token string\">\"yuv\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token string\">'I420'</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>        <span class=\"token keyword\">elif</span> file_coding <span class=\"token operator\">==</span> <span class=\"token string\">\"mpeg-1\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token string\">'PIMI'</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>        <span class=\"token keyword\">elif</span> file_coding <span class=\"token operator\">==</span> <span class=\"token string\">\"mp4g-4\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token string\">'XVID'</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>        <span class=\"token keyword\">elif</span> file_coding <span class=\"token operator\">==</span> <span class=\"token string\">\"ogg vorbis\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token string\">'THEO'</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>        <span class=\"token keyword\">elif</span> file_coding <span class=\"token operator\">==</span> <span class=\"token string\">\"flash\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token string\">'FLV1'</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token string\">'mp4v'</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>    <span class=\"token comment\"># 畸变矫正</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__distortion_correction</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">,</span> origin_width<span class=\"token punctuation\">,</span> origin_height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>        <span class=\"token comment\"># 去畸变</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>        new_camera_mtx<span class=\"token punctuation\">,</span> roi <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>getOptimalNewCameraMatrix<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>mtx<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>dist<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>origin_width<span class=\"token punctuation\">,</span> origin_height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>                                                            <span class=\"token punctuation\">(</span>origin_width<span class=\"token punctuation\">,</span> origin_height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>        dst <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>undistort<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>mtx<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>dist<span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> new_camera_mtx<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>        <span class=\"token comment\"># 根据 ROI 区域裁剪图片</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>        x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height <span class=\"token operator\">=</span> roi</pre></td></tr><tr><td data-num=\"181\"></td><td><pre>        dst <span class=\"token operator\">=</span> dst<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">:</span>y <span class=\"token operator\">+</span> height<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">:</span>x <span class=\"token operator\">+</span> width<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>        dst <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span>dst<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>origin_width<span class=\"token punctuation\">,</span> origin_height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>        <span class=\"token keyword\">return</span> dst</pre></td></tr><tr><td data-num=\"184\"></td><td><pre></pre></td></tr><tr><td data-num=\"185\"></td><td><pre></pre></td></tr><tr><td data-num=\"186\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>    cal <span class=\"token operator\">=</span> CameraCalibration<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>    cal<span class=\"token punctuation\">.</span>calibration_init<span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"./pic/*.jpg\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>    cor <span class=\"token operator\">=</span> CameraCorrect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>    cor<span class=\"token punctuation\">.</span>correct_pic<span class=\"token punctuation\">(</span><span class=\"token string\">\"./pic/cm_flag_5.jpg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"./output_pic/\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>    cor<span class=\"token punctuation\">.</span>correct_vid2vid<span class=\"token punctuation\">(</span><span class=\"token string\">\"./vid/vid_demo_1.mp4\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"./output_vid/\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>    cor<span class=\"token punctuation\">.</span>correct_vid2pic<span class=\"token punctuation\">(</span><span class=\"token string\">\"./vid/vid_demo_1.mp4\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"./output_vid/\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "opencv",
                "python",
                "图像处理",
                "教程",
                "原创教程"
            ]
        },
        {
            "id": "https://www.taoidle.com/2020/07/02/python%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86-%E7%A9%BA%E5%9F%9F%E4%BF%A1%E6%81%AF%E9%9A%90%E8%97%8F%EF%BC%88lsb%E6%9B%BF%E6%8D%A2%EF%BC%89/",
            "url": "https://www.taoidle.com/2020/07/02/python%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86-%E7%A9%BA%E5%9F%9F%E4%BF%A1%E6%81%AF%E9%9A%90%E8%97%8F%EF%BC%88lsb%E6%9B%BF%E6%8D%A2%EF%BC%89/",
            "title": "Python图像处理 —— 空域信息隐藏（LSB替换）",
            "date_published": "2020-07-02T06:40:04.000Z",
            "content_html": "<h2 id=\"算法描述\"><a class=\"markdownIt-Anchor\" href=\"#算法描述\">#</a> 算法描述</h2>\n<ul>\n<li>LSB 即最低有效位，全称为 Leastsignificant Bit，LSB 隐写技术即就是通过修改 RGB 颜色分量的最低位二进制，进行信息的储存。</li>\n</ul>\n<h2 id=\"算法实现\"><a class=\"markdownIt-Anchor\" href=\"#算法实现\">#</a> 算法实现</h2>\n<ul>\n<li>LSB 规律须知：奇数二进制最低有效位为 1，偶数为 0</li>\n<li>嵌入过程：先将嵌入信息转换为二进制流，逐个像素进行替换</li>\n<li>提取过程：先对像素进行提取，再将二进制流转为文本</li>\n</ul>\n<h2 id=\"算法缺点\"><a class=\"markdownIt-Anchor\" href=\"#算法缺点\">#</a> 算法缺点</h2>\n<ol>\n<li>不可逆</li>\n<li>脆弱、不鲁棒</li>\n</ol>\n<h2 id=\"python代码\"><a class=\"markdownIt-Anchor\" href=\"#python代码\">#</a> Python 代码</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> cv2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> width<span class=\"token operator\">=</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    bin_str <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'0b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>zfill<span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> bin_str</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    s <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>np<span class=\"token punctuation\">.</span>uint8<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    bin_str <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span>b <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token string\">'0b'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>zfill<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> b <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token builtin\">str</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token string\">'0b'</span> <span class=\"token operator\">+</span> bin_str<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>int8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">lsb_embed</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token comment\"># 获取通道数 F</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> channel <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>shape</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        s <span class=\"token operator\">=</span> encode<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            x <span class=\"token operator\">=</span> i <span class=\"token operator\">//</span> width</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            y <span class=\"token operator\">=</span> i <span class=\"token operator\">%</span> width</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            channel <span class=\"token operator\">=</span> i <span class=\"token operator\">//</span> <span class=\"token punctuation\">(</span>height <span class=\"token operator\">*</span> width<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            value <span class=\"token operator\">=</span> img<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> channel<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">%</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">%</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                img<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> channel<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value <span class=\"token operator\">-</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">%</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                img<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> channel<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        width<span class=\"token punctuation\">,</span> height <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>shape</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        s <span class=\"token operator\">=</span> encode<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            x <span class=\"token operator\">=</span> i <span class=\"token operator\">//</span> width</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            y <span class=\"token operator\">=</span> i <span class=\"token operator\">%</span> width</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            value <span class=\"token operator\">=</span> img<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">%</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">%</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                img<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value <span class=\"token operator\">-</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">%</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                img<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">return</span> img<span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">lsb_extract</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token comment\"># 获取通道数 F</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> channel <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>shape</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        s <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            x <span class=\"token operator\">=</span> i <span class=\"token operator\">//</span> width</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            y <span class=\"token operator\">=</span> i <span class=\"token operator\">%</span> width</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            channel <span class=\"token operator\">=</span> i <span class=\"token operator\">//</span> <span class=\"token punctuation\">(</span>height <span class=\"token operator\">*</span> width<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            value <span class=\"token operator\">=</span> img<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> channel<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token keyword\">if</span> value <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                s <span class=\"token operator\">+=</span> <span class=\"token string\">'0'</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                s <span class=\"token operator\">+=</span> <span class=\"token string\">'1'</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        width<span class=\"token punctuation\">,</span> height <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>shape</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        s <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            x <span class=\"token operator\">=</span> i <span class=\"token operator\">//</span> width</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>            y <span class=\"token operator\">=</span> i <span class=\"token operator\">%</span> width</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            value <span class=\"token operator\">=</span> img<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            <span class=\"token keyword\">if</span> value <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>                s <span class=\"token operator\">+=</span> <span class=\"token string\">'0'</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>                s <span class=\"token operator\">+=</span> <span class=\"token string\">'1'</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token keyword\">return</span> decode<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token comment\"># 嵌入</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    msg <span class=\"token operator\">=</span> <span class=\"token string\">\"hello world\"</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    pic_origin <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">'lenna.bmp'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    pic_embed<span class=\"token punctuation\">,</span> msg_len <span class=\"token operator\">=</span> lsb_embed<span class=\"token punctuation\">(</span>pic_origin<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    cv2<span class=\"token punctuation\">.</span>imwrite<span class=\"token punctuation\">(</span><span class=\"token string\">'pic_embed.bmp'</span><span class=\"token punctuation\">,</span> pic_embed<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token comment\"># 提取</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    pic_embed <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">'pic_embed.bmp'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    msg_extract <span class=\"token operator\">=</span> lsb_extract<span class=\"token punctuation\">(</span>pic_embed<span class=\"token punctuation\">,</span> msg_len<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>msg_extract<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"算法改进\"><a class=\"markdownIt-Anchor\" href=\"#算法改进\">#</a> 算法改进</h2>\n<ol>\n<li>提取时无需输入信息长度 思路：将长度信息保存在图片某位置，在提取时先提取长度信息，再提取嵌入信息</li>\n<li>随机位置嵌入 思路：生成随机数即可，将随机数种子保存，用于保存信息的位置范围排除，其它位置范围里生成随机数</li>\n</ol>\n",
            "tags": [
                "opencv",
                "python",
                "图像处理",
                "教程",
                "原创教程"
            ]
        },
        {
            "id": "https://www.taoidle.com/2020/05/03/python%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86-dct%E5%8F%98%E6%8D%A2%EF%BC%881%EF%BC%89/",
            "url": "https://www.taoidle.com/2020/05/03/python%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86-dct%E5%8F%98%E6%8D%A2%EF%BC%881%EF%BC%89/",
            "title": "Python图像处理 —— DCT变换",
            "date_published": "2020-05-02T16:06:38.000Z",
            "content_html": "<h1 id=\"图像的dct变换\"><a class=\"markdownIt-Anchor\" href=\"#图像的dct变换\">#</a> 图像的 DCT 变换</h1>\n<h2 id=\"python实现\"><a class=\"markdownIt-Anchor\" href=\"#python实现\">#</a> python 实现</h2>\n<p>这里去除了图像的低频部分，进行 dct 变换后得到图像的骨架</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> cv2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 读取图像</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">'../res/img/baboon.bmp'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 灰度化</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2GRAY<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 显示原图</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 获取图像宽高</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>height<span class=\"token punctuation\">,</span> width <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>shape</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 对图像进行 dct 变换</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>img_dct <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>dct<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>float32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 去除部分低频信息</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>img_dct<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 进行反 dct 变换</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>img_idct <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>idct<span class=\"token punctuation\">(</span>img_dct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>uint8<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># 显示图像</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'img_dct'</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>img_dct<span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>uint8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'img_idct'</span><span class=\"token punctuation\">,</span> img_idct<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/assets/images/wp_editor_md_f47ba882139a0929c17e72e8d408a598.jpg\" alt=\"\"> <img data-src=\"/assets/images/wp_editor_md_4d2787e275882434e47a8ac40c2d711a.jpg\" alt=\"\"> <img data-src=\"/assets/images/wp_editor_md_927e11e4879955a3bf4fdebb01ff5b73.jpg\" alt=\"\"></p>\n<h2 id=\"cv-tool小工具中的操作\"><a class=\"markdownIt-Anchor\" href=\"#cv-tool小工具中的操作\">#</a> CV Tool 小工具中的操作</h2>\n<h3 id=\"灰度图dct\"><a class=\"markdownIt-Anchor\" href=\"#灰度图dct\">#</a> 灰度图 DCT</h3>\n<p>读取图像 <img data-src=\"/assets/images/wp_editor_md_79f735a75273ec5494159dfe4170b128.jpg\" alt=\"\"> 进行灰度化 <img data-src=\"/assets/images/wp_editor_md_12d55d2288111f59e2fe8f7937987e5c.jpg\" alt=\"\"> 选定 DCT 去除的信息，进行 DCT 变换 <img data-src=\"/assets/images/wp_editor_md_f26670cf8f60a325901e9e8217616207.jpg\" alt=\"\"> 得到效果图 <img data-src=\"/assets/images/wp_editor_md_3b7437fbd0e276fcc1b281a85fd0a5da.jpg\" alt=\"\"></p>\n<h3 id=\"彩色图像dct变换\"><a class=\"markdownIt-Anchor\" href=\"#彩色图像dct变换\">#</a> 彩色图像 DCT 变换</h3>\n<p>打开图像 <img data-src=\"/assets/images/wp_editor_md_cd0232d0bcdb5fa3abe9279e639b63ee.jpg\" alt=\"\"> 选定 DCT 去除的信息，进行 DCT 变换 <img data-src=\"/assets/images/wp_editor_md_392cc8c9f36cf5dadbb8fe641951f85e.jpg\" alt=\"\"> 得到效果图 <img data-src=\"/assets/images/wp_editor_md_44c76d239bee25c7f0dfcaa3e9352451.jpg\" alt=\"\"></p>\n",
            "tags": [
                "opencv",
                "pyqt5",
                "python",
                "图像处理",
                "教程"
            ]
        },
        {
            "id": "https://www.taoidle.com/2020/04/22/git%E6%95%99%E7%A8%8B-git%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/",
            "url": "https://www.taoidle.com/2020/04/22/git%E6%95%99%E7%A8%8B-git%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/",
            "title": "Git教程 —— Git的基本操作",
            "date_published": "2020-04-22T04:00:08.000Z",
            "content_html": "<h2 id=\"创建版本库\"><a class=\"markdownIt-Anchor\" href=\"#创建版本库\">#</a> 创建版本库</h2>\n<p>在前边的例子中，我们已经创建过的版本库，这里我们来回顾一下，首先我们找了一个合适的地方创建了一个空目录，然后我们使用 git init 命令让该目录变成 git 仓库，这里我们看到 git 输出信息 Initalized empty Git repository，这是告诉我们这是一个空仓库。 注意，细心的你可能发现在 git_demo 目录下有一个.git 目录（该文件是隐藏的，需要在查看中勾选隐藏的项目选项） .git 目录是 git 用来管理版本库的，如果乱改该目录下的文件 git 仓库会被破坏。</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>命令：git init</pre></td></tr></table></figure><p><img data-src=\"/assets/images/4aef82c398791fa.png\" alt=\"\"> <img data-src=\"/assets/images/e9079bfaf294f0e.png\" alt=\"\"></p>\n<h3 id=\"文件提交\"><a class=\"markdownIt-Anchor\" href=\"#文件提交\">#</a> 文件提交</h3>\n<p>文件提交是将暂存区中所有的内容添加到分支中，在上面的例子中我们使用命令 git commit -m “create 1.c” 将暂存区的文件提交到分支 master，这里我们使用了参数 -m 参数后引号的内容是此次提交的标注。然后我们用 git status 查看状态，此时工作区内容已经干净了，暂存区的文件已经提交到了分支上，所以 git 告诉我们 working tree clean，并且我们用 git log 命令查看 git 的日志信息，在日志信息中明确记录了我们有过一次提交记录，此记录中注明了”create 1.c”。</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>命令：git commit</pre></td></tr></table></figure><p><img data-src=\"/assets/images/121c09c74678b10.png\" alt=\"\"></p>\n<h3 id=\"版本回退\"><a class=\"markdownIt-Anchor\" href=\"#版本回退\">#</a> 版本回退</h3>\n<p>到目前位置，我们的 git 上只提交了一个版本，现在我们对文件进行修改，我们用编辑器在 1.c 中写一个 hello world 程序然后保存退出，然后我们用 git status 查看状态，这里 git 输出信息文件处于 modified 状态，表示文件仅被修改，但没有做其它任何操作。接着我们将文件添加到暂存区并提交，然后再 git status 和 git log 看一下。 <img data-src=\"/assets/images/8d2cae96cabc9ca.png\" alt=\"\"> <img data-src=\"/assets/images/b1299c0dbb11d65.png\" alt=\"\"> <img data-src=\"/assets/images/4e592c7c30e6a94.png\" alt=\"\"> 此时我们可以看到 git log 的输出信息上出现了两次 commit 这就是我们提交的两次版本，第一次我们创建了 1.c 文件然后提交，第二次我们在 1.c 中写入了一个 hello world 程序提交。我们不妨对 1.c 文件做第三次修改，我们封装一个函数专门用来输出 hello world，然后提交。 <img data-src=\"/assets/images/2c7fee8816f8b8f.png\" alt=\"\"> <img data-src=\"/assets/images/c83237fb552a084.png\" alt=\"\"> 这时，我们 master 分支上已经有三次提交记录了，我们看到这里我们的 1.c 有三个版本，分别为”create 1.c” “write hello world demo” “ add func_p”。那么如果我们不想要这个封装好的函数，要从”add func_p” 这个版本直接回到上一个版本”write hello world demo” 应该怎么做呢？别急，我们先看看 git log 给我们输出的信息都是什么。 首先我们看到日志的第一行</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>commit 8abb13d8fd51b4bd6f6b9aaedac4add3ed368de8</pre></td></tr></table></figure><p>这是 commit id 即版本号，当然你这串数字肯定和我的不一样，这一串数字是哈希值。 然后我们看第二行 Author ,Author 是提交者的信息即我们安装 Git 后最先设置的 Username <span class=\"exturl\" data-url=\"bWFpbHRvOmVtYWlsQGV4YW1wbGUuY29t\">email@example.com</span> 接着我们看第三行 Date , 很明显了，这一行就是提交的时间 最后我们看到了 add func_p 这就是我们在提交的时候标注的信息 当然，聪明的你一定想说那关键信息不就是版本号和提交标注吗？你直接给我输出这两个不就可以了吗，输出这么大堆东西看着头都大了。这肯定是可以的，我们在 git log 后加个参数–pretty=oneline 试一下 <img data-src=\"/assets/images/49012411684ba30.png\" alt=\"\"> 你看，加上参数之后 git 就只给我们输出版本号和标注了。了解了这些之后，我们回归正题，如何将版本退回到”wirte hello world demo” 在我们前面的学习中我们知道 git 里有个指针 HEAD 指向当前版本，我想你肯定猜到了，我们只需要让该指针指向上一个版本就可以了。那我们来学一个新命令 git reset --hard HEAD^ 这个命令是将 HEAD 指针指向上一个版本，那如果是指向上上个版本就是 git reset --hard HEAD^^。我们先来试一下，在命令行中输入这个命令 <img data-src=\"/assets/images/fb52be0f128a23d.png\" alt=\"\"> 这是 git 输出信息 HEAD 指针已经指向了 write hello world demo 这个版本，为了验证是不是真的退回了上一个版本，我们 cat 1.c 一下看看 <img data-src=\"/assets/images/b05ed2e618d23cf.png\" alt=\"\"> 从输出结果我们看到已经成功退回上一版，这时候你就有一个疑问了，要是以后版本多了比如出现了上千的版本那一直 HEAD^<sup>(若干个</sup>) 岂不是非常麻烦，这不必担心，如果是退回非常多个版本比如 20 个，那其实并不需要打 20 个 ^，我们可以这么写 HEAD~20，而且还有另一个办法，在前面我们说到了 commit id ，那我们是不是也可以通过 commit id 来退回版本呢？答案是肯定的，我们试试用 commit id 来退回到最初的版本。我们先 git log 看一下，我们看到 git log 的输出信息只剩下两个版本了，刚刚退回前的”add func_p” 版本已经不见了。我们找到”create 1.c” 版本，将 commit 后边的 id 号复制后填写到 git reset --hard id。在图中你看到我并没有填写整一串 id，这是因为 git 会自动帮我们找，所以我们填写前边几位就行了，当然也不能只填写一两位，在版本多了情况下 git 可能会找到多个版本，这时就无法确定是哪一个了。 <img data-src=\"/assets/images/f65d43654ec665e.png\" alt=\"\"> 这个时候我们再来看一下 git log 发现只剩下一个版本了，但是这个时候你后悔了，你想回到”add func_p” 版本，那怎么办呢？还有办法吗？ <img data-src=\"/assets/images/92048a292d8d286.png\" alt=\"\"> 当然办法还是有的，在你还没有关闭命令行的情况下你只需要往前翻，找到之前”add func_p” 的 commit id 就可以了，就像下边这样。我们找到了”add func_p” 的 commit id 并且跳了回去，此时我们不仅直接跳回了”add func_p” 版，而且顺带把中间版本也找回来了。 <img data-src=\"/assets/images/e58c5e029225fe6.png\" alt=\"\"> 那如果说你在下班前退回了某个版本，然后关了笔记本电脑，回到家的时候你后悔了那怎么办？还有办法吗？在 git 中当然有办法了，git 给我们提供了一个命令叫 git reflog</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>命令: <span class=\"token function\">git</span> reflog</pre></td></tr></table></figure><p>这个命令记录了你每次命令。我们先退回到最初版，然后用 git reflog 看看信息。 <img data-src=\"/assets/images/665e04f99e70483.png\" alt=\"\"> 在退回最初版后我们在 git reflog 中依然能够找到”add func_p” 版本的 commit id：8abb13d，那我们就 git reset --hard id 回到”add func_p” 版本：git reset --hard 8abb13d 然后 git log 看一下，成功回到”add func_p” 版本。 <img data-src=\"/assets/images/203af278603416a.png\" alt=\"\"></p>\n<h3 id=\"撤销修改\"><a class=\"markdownIt-Anchor\" href=\"#撤销修改\">#</a> 撤销修改</h3>\n<p>你在写完 1.c 后给这个 hello world 程序加了一行注释，正准备 add 的时候你觉得这行注释完全没有必要存在，这个时候你想撤销刚刚的修改应该怎么做呢？我们只需要对 1.c checkout ，怎么写这行命令呢？我们在命令行输入</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>命令：git checkout -- <span class=\"token number\">1</span>.c</pre></td></tr></table></figure><p>注意，这里要用两个 - 如果少了一个 - 的话表示的是切换到一个叫 1.c 的分支。 <img data-src=\"/assets/images/e6beb1dae77c36e.png\" alt=\"\"> <img data-src=\"/assets/images/d1459e26da56b7f.png\" alt=\"\"> 我们看到这里刚刚添加的注释已经被撤销了。那如果说这个文件已经 add 到了暂存区，但是还没 commit，这个时候你想撤销之前添加的注释，首先我们应该把暂存区的修改退回到工作区，然后在撤销刚刚对 1.c 的修改。具体怎么做，我们用命令 git reset HEAD 1.c 将 1.c 从暂存区中重新放回工作区，然后再 git checkout – 1.c 撤销工作区中 1.c 的修改。 <img data-src=\"/assets/images/aff330497bacdaf.png\" alt=\"\"> 在图中我们看到 git reset HEAD 1.c 之后暂存区中的 1.c 已经重新放回了工作区，而工作区的 1.c 是改动过的。这时我们在对 1.c 进行 git checkout – 1.c 操作，撤销对 1.c 的修改，我们看看结果。 <img data-src=\"/assets/images/7f6563dd39ec7e0.png\" alt=\"\"> 我们看到 1.c 中的注释已经成功撤销了。</p>\n<h3 id=\"删除文件\"><a class=\"markdownIt-Anchor\" href=\"#删除文件\">#</a> 删除文件</h3>\n<p>某一天，你手滑把 1.c 给删了，那 git 是知道你把文件删了的，此时工作区和版本库是不一致，我们使用 git status 命令，git 会告诉你 1.c 被删除了 <img data-src=\"/assets/images/a6a0ba72ae4863b.png\" alt=\"\"> 这时你想恢复文件，因为在版本库中 1.c 文件还是存在的，你只需要执行命令</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>命令：git checkout -- <span class=\"token number\">1</span>.c</pre></td></tr></table></figure><p>将版本库中版本恢复到工作区就可以了。是不是这样呢？我们执行一下命令，执行 git checkout – 1.c 命令后 1.c 文件确实恢复了。 <img data-src=\"/assets/images/a8ea5564ea97dd6.png\" alt=\"\"> 如果说你不是手滑删错了而是确实想把 1.c 文件删掉，那你在工作区删除 1.c 后你需要执行命令</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>命令：git <span class=\"token function\">rm</span> <span class=\"token number\">1</span>.c</pre></td></tr></table></figure><p>然后 commit 才能将 1.c 从版本库中删除。</p>\n",
            "tags": [
                "教程",
                "git"
            ]
        },
        {
            "id": "https://www.taoidle.com/2020/03/16/git%E6%95%99%E7%A8%8B-%E7%89%88%E6%9C%AC%E5%BA%93%E3%80%81%E5%B7%A5%E4%BD%9C%E5%8C%BA%E5%92%8C%E6%9A%82%E5%AD%98%E5%8C%BA/",
            "url": "https://www.taoidle.com/2020/03/16/git%E6%95%99%E7%A8%8B-%E7%89%88%E6%9C%AC%E5%BA%93%E3%80%81%E5%B7%A5%E4%BD%9C%E5%8C%BA%E5%92%8C%E6%9A%82%E5%AD%98%E5%8C%BA/",
            "title": "Git教程 —— 版本库、工作区和暂存区",
            "date_published": "2020-03-16T02:17:41.000Z",
            "content_html": "<h2 id=\"git的基本工作流程\"><a class=\"markdownIt-Anchor\" href=\"#git的基本工作流程\">#</a> Git 的基本工作流程</h2>\n<ol>\n<li>创建 Git 工作目录和版本库</li>\n<li>添加修改删除文件</li>\n<li>git add 命令将文件修改添加到暂存区</li>\n<li>git commit 命令将暂存区所有内容提交到当前分支（创建版本库时 git 自动创建一个 master 分支）</li>\n</ol>\n<h2 id=\"版本库\"><a class=\"markdownIt-Anchor\" href=\"#版本库\">#</a> 版本库</h2>\n<p>版本库又名仓库，英文名 repository，可简单理解为一个文件目录，目录里所有的文件都受 Git 管理。Git 会记录该目录下文件的修改删除，这些记录在将来需要恢复某个记录文件时起到至关重要的作用。</p>\n<h2 id=\"文件添加\"><a class=\"markdownIt-Anchor\" href=\"#文件添加\">#</a> 文件添加</h2>\n<p>文件添加指的是将文件添加到暂存区，这里我们回顾一下前面的例子，在前边的例子中，我们使用了 git add 1.c 命令将我们的文件 1.c 添加到了暂存区，然后我们使用了 git status 命令来查看项目状态，这里 git 给我们输出的信息在分支 master 中没有任何提交记录，但是 1.c 文已经添加到了暂存区。 命令：git add filename <img data-src=\"/assets/images/edb84957b223d6a.jpeg\" alt=\"\"> <img data-src=\"/assets/images/034069cb3a181ff.jpeg\" alt=\"\"></p>\n<h2 id=\"暂存区\"><a class=\"markdownIt-Anchor\" href=\"#暂存区\">#</a> 暂存区</h2>\n<p>英文名 stage 或 index，一般在.git 目录下的 index 文件中，所以暂存区有时也被称为索引（index）。</p>\n<h2 id=\"工作区\"><a class=\"markdownIt-Anchor\" href=\"#工作区\">#</a> 工作区</h2>\n<p>就是你在电脑里能看到的目录。</p>\n<h2 id=\"一个简单的示例\"><a class=\"markdownIt-Anchor\" href=\"#一个简单的示例\">#</a> 一个简单的示例</h2>\n<p>我们通过一个简单的示例来理解上面几个概念。 首先，我们打开 Git Bash，在桌面上创建一个目录文件叫 git_demo，然后进入 git_demo 目录。这个时候 git_demo 就是我们的工作目录。此时我们的 Git 自动帮我们创建了第一个分支 master 以及一个指向 master 的指针 HEAD。 <img data-src=\"/assets/images/e9a350a6a586253.jpeg\" alt=\"\"> <img data-src=\"/assets/images/3702b46d7173cbf.jpeg\" alt=\"\"> 接着，我们输入 git init 命令，在 git_demo 目录下创建版本库，此时你会发现在 git_demo 目录下多了一个隐藏文件夹 .git , 该文件夹就是我们的版本库。 <img data-src=\"/assets/images/63d96c143a063ca.jpeg\" alt=\"\"> <img data-src=\"/assets/images/1c84c81e4ca26e5.jpeg\" alt=\"\"> <img data-src=\"/assets/images/572ecd978d78681.jpeg\" alt=\"\"> 然后，我们使用 touch 1.c 命令在工作区里创建一个.c 文件，并用 git add 1.c 将文件添加到暂存区。我们使用命令 git status 查看文件状态，git log 查看 git 日志，看到文件尚未被提交，在 git 日志中 master 分支没有任何提交记录，得知我们添加的 1.c 文件仍在暂存区。 <img data-src=\"/assets/images/e437e7368ffb667.jpeg\" alt=\"\"> <img data-src=\"/assets/images/d6ebcb7047443eb.jpeg\" alt=\"\"> <img data-src=\"/assets/images/bf1a70e8ce730db.jpeg\" alt=\"\"> 最后，我们使用 git commit 命令将暂存区内容提交到分支 master 中。这里 git commit -m “create 1.c” 中”” 中内容为此次提交的说明。我们用 git status 和 git log 看一下提交之后文件处于什么状态。通过 git status 我们看到当我们一旦提交后没有做任何修改，那么工作区就是干净的。在 git log 中我们的 master 分支上出现了第一次提交记录，该提交记录的说明是 create 1.c。 <img data-src=\"/assets/images/8f1c4bdc7d73fe6.jpeg\" alt=\"\"> <img data-src=\"/assets/images/1f5f2e6a346d0e0.jpeg\" alt=\"\"> 到这里，我们的版本库暂存区和工作区的内容就讲完了，但是我们不妨继续做实验加深对 git 的理解。接下来我们对 1.c 进行修改，比如我们写个 hello world 程序，然后我们用 git add 1.c 把它添加到暂存区，然后我们继续对 1.c 程序进行修改，比如写一行注释，最后我们 git commit 一下把东西提交。 此时我们使用 git status 查看状态发现我们对 1.c 的第二次修改并没有被提交，而且使用 git diff HEAD – 1.c 命令查看文件不同时 git 明确的给我们指出来这多了一行 //hello world，这是为什么呢？这里我们需要清楚一个概念，在 git 的管理中，git 对于版本的控制实质上是对修改进行追踪。什么意思呢？你对文件的增删改对 git 来说都只是修改，git 并不会追踪文件的本身。我们回到刚刚的实验，最初我们在 1.c 中写了一个 hello world 程序，然后我们把 1.c 添加到了暂存区，这里实际上并不是把 1.c 文件添加到了暂存区，而是将 1.c 文件的修改提交到了暂存区，然后我们后面对 1.c 写了一行注释，这个改动并没有被添加，所以 commit 后版本库和工作区是不一致的。 <img data-src=\"/assets/images/46086c6030d0a2f.jpeg\" alt=\"\"> <img data-src=\"/assets/images/1846795b60e6210.jpeg\" alt=\"\"> <img data-src=\"/assets/images/ac72b20e5bce2da.jpeg\" alt=\"\"></p>\n",
            "tags": [
                "教程",
                "git"
            ]
        },
        {
            "id": "https://www.taoidle.com/2020/02/24/git%E6%95%99%E7%A8%8B-git%E7%AE%80%E4%BB%8B/",
            "url": "https://www.taoidle.com/2020/02/24/git%E6%95%99%E7%A8%8B-git%E7%AE%80%E4%BB%8B/",
            "title": "Git教程 —— Git简介",
            "date_published": "2020-02-24T07:54:12.000Z",
            "content_html": "<h2 id=\"一-git简介\"><a class=\"markdownIt-Anchor\" href=\"#一-git简介\">#</a> <strong>一、Git 简介</strong></h2>\n<p><strong>1、Git 是什么</strong> Git (读音为 /gɪt/。) 是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。 [1] Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。（百度百科） <strong>（1）集中式版本控制系统</strong> 集中式版本控制系统的版本库集中存放在中央服务器的，干活的时候首先从中央服务器中获取最新的版本，然后干完活后在推送给中央服务器，本地没有版本库的修改记录。所以集中式版本控制器在没有联网的情况下是不能工作的。 <img data-src=\"/assets/images/1587996764-%E5%9B%BE%E7%89%871.png\" alt=\"\"> <strong>（2）分布式版本控制系统</strong> 分布式版本控制系统中没有中央服务器，在自己的电脑上是有版本库的，在你工作时不需要联网。但是分布式版本控制系统中需要有一台电脑充当中央服务器，以便于不同电脑修改的交换。 <img data-src=\"/assets/images/1587996849-%E5%9B%BE%E7%89%872.png\" alt=\"\"> <strong>2、为什么要使用版本控制系统？</strong> 编写文档、代码等文件的你一定有过这样的经历，对每次重要的修改都保存了一份新的文件 <img data-src=\"/assets/images/1587997204-%E5%9B%BE%E7%89%873.png\" alt=\"\"> 这种做法相当简陋而且缺点非常明显，如果是多人协作的时候文档的命名不一定能反映出修改的内容，而且对存储空间的利用相当的不合理。这对生产需求来说是相当致命的，所以我们有了版本控制管理器。 版本控制器记录每次文件的改动，使用起来类似于如下效果</p>\n<p>版本</p>\n<p>文件名</p>\n<p>用户</p>\n<p>修改日期</p>\n<p>说明</p>\n<p>1</p>\n<p>linux.doc</p>\n<p>老王</p>\n<p>2020.1.5 8.54</p>\n<p>linux 教程最初版</p>\n<p>2</p>\n<p>linux.doc</p>\n<p>老王</p>\n<p>2020.1.6 14.43</p>\n<p>增加了文件权限相关内容</p>\n<p>3</p>\n<p>linux.doc</p>\n<p>张三</p>\n<p>2020.1.7 11.27</p>\n<p>删除了硬件基础中老旧的硬件型号</p>\n<p>4</p>\n<p>linux.doc</p>\n<p>李四</p>\n<p>2020.1.8 18.36</p>\n<p>对硬件基础中主板相关部分增加了新型号</p>\n<p>5</p>\n<p>linux.doc</p>\n<p>老王</p>\n<p>2020.1.9 16.09</p>\n<p>增加了常用命令内容</p>\n<p>这样你既可以方便的管理一个文件的多个版本，也可以跟同事协同工作，是不是非常方便？于是你开始使用 Git 进行版本管理，开启了新世界的大门。 <strong>3、安装 Git</strong> <strong>（1）Linux 安装 Git</strong></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Debian/Ubuntu: <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> <span class=\"token function\">git</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Fedora/Red Hat/CentOS: <span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> git-core</pre></td></tr></table></figure><p>其它版本 linux 从 Git 官网下载源码后解压，然后通过 ./config , make , sudo make install 安装，这里不在赘述。 **  (2) Windows 安装 Git** 从<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQtc2NtLmNvbS8=\"> Git 官网</span>下载安装包进行安装，安装之后找到 Git Bash　打开后弹出命令行窗口即安装成功。 **  (3) MacOS 安装 Git** 1、安装 homebrew，brew 安装 Git。下边给出安装命令，在终端中输入</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>homebrew：/usr/bin/ruby -e <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">curl</span> -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install<span class=\"token variable\">)</span></span>\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>git: brew <span class=\"token function\">install</span> <span class=\"token function\">git</span></pre></td></tr></table></figure><p>2、在 APP Store 中下载 Xcode，Xcode 自带 git 在完成安装之后我们要对 git 进行进一步的设置，打开 Git Bash，在命令行中输入以下命令：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> config --global user.name “username” username为你的用户名</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">git</span> config --global user.email “email@example.com” email@example.com为你的邮箱地址</pre></td></tr></table></figure><p>注意：global 参数是全局设置，表示该电脑上所有的 git 仓库都使用此用户名和邮箱地址</p>\n",
            "tags": [
                "教程",
                "git"
            ]
        }
    ]
}