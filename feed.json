{
    "version": "https://jsonfeed.org/version/1",
    "title": "null",
    "description": "(づ●─●)づ让我看看再学点什么好",
    "home_page_url": "https://www.taoidle.com",
    "items": [
        {
            "id": "https://www.taoidle.com/2024/11/20/Yubikey&Canokey%20PIV%20%E9%85%8D%E7%BD%AE/",
            "url": "https://www.taoidle.com/2024/11/20/Yubikey&Canokey%20PIV%20%E9%85%8D%E7%BD%AE/",
            "title": "Yubikey&Canokey PIV 配置",
            "date_published": "2024-11-20T03:40:23.000Z",
            "content_html": "<h1 id=\"准备\"><a class=\"anchor\" href=\"#准备\">#</a> 准备</h1>\n<ul>\n<li>Yubikey &amp; Canokey</li>\n<li><a href=\"%5BReleases%5D(https://developers.yubico.com/yubico-piv-tool/Releases/)\">yubico-piv-tool</a> &amp; <a href=\"%5BReleases%5D(https://developers.yubico.com/yubikey-manager/Releases/)\">ykman</a></li>\n<li><a href=\"%5BReleases%5D(https://github.com/buptczq/WinCryptSSHAgent)\">WinCryptSSHAgent</a>  (Windows Only)</li>\n</ul>\n<h1 id=\"生成私钥及证书\"><a class=\"anchor\" href=\"#生成私钥及证书\">#</a> 生成私钥及证书</h1>\n<h2 id=\"ca-私钥和证书\"><a class=\"anchor\" href=\"#ca-私钥和证书\">#</a> CA 私钥和证书</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>openssl genpkey -algorithm RSA -out ca_private_key.pem -pkeyopt rsa_keygen_bits:2048</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>openssl req -new -x509 -key ca_private_key.pem -out ca_cert.pem -days <span class=\"token number\">3650</span> -subj <span class=\"token string\">\"/C=CN/ST=Guangdong/L=Guangzhou/O=XXX/OU=XXX/CN=taoidle\"</span></pre></td></tr></table></figure><h2 id=\"rsa-私钥和csr\"><a class=\"anchor\" href=\"#rsa-私钥和csr\">#</a> RSA 私钥和 CSR</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>openssl genpkey -algorithm RSA -out rsa_private_key.pem -pkeyopt rsa_keygen_bits:2048</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>openssl req -new -key rsa_private_key.pem -out csr.pem -subj <span class=\"token string\">\"/C=CN/ST=Guangdong/L=Guangzhou/O=XXX/OU=XXX/CN=taoidle\"</span></pre></td></tr></table></figure><h2 id=\"使用ca签发csr\"><a class=\"anchor\" href=\"#使用ca签发csr\">#</a> 使用 CA 签发 CSR</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>openssl x509 -req -in csr.pem -CA ca_cert.pem -CAkey ca_private_key.pem -CAcreateserial -out signed_cert.pem -days <span class=\"token number\">3650</span></pre></td></tr></table></figure><h2 id=\"证书验证\"><a class=\"anchor\" href=\"#证书验证\">#</a> 证书验证</h2>\n<h3 id=\"csr验证\"><a class=\"anchor\" href=\"#csr验证\">#</a> CSR 验证</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>openssl req -in csr.pem -noout -text</pre></td></tr></table></figure><h3 id=\"验证生成证书\"><a class=\"anchor\" href=\"#验证生成证书\">#</a> 验证生成证书</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>openssl x509 -in signed_cert.pem -noout -text</pre></td></tr></table></figure><h3 id=\"证书链验证\"><a class=\"anchor\" href=\"#证书链验证\">#</a> 证书链验证</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>openssl verify -CAfile ca_cert.pem signed_cert.pem</pre></td></tr></table></figure><h3 id=\"自签证书链验证\"><a class=\"anchor\" href=\"#自签证书链验证\">#</a> 自签证书链验证</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>openssl verify -CAfile signed_cert.pem signed_cert.pem</pre></td></tr></table></figure><ul>\n<li><code>ca_private_key.pem</code> ：CA 私钥。</li>\n<li><code>ca_cert.pem</code> ：自签名 CA 证书。</li>\n<li><code>rsa_private_key.pem</code> ： RSA 私钥。</li>\n<li><code>csr.pem</code> ：证书签名请求。</li>\n<li><code>signed_cert.pem</code> ：CA 签发的证书。</li>\n</ul>\n<h1 id=\"yubikey-piv\"><a class=\"anchor\" href=\"#yubikey-piv\">#</a> Yubikey PIV</h1>\n<h2 id=\"yubico-piv-tool\"><a class=\"anchor\" href=\"#yubico-piv-tool\">#</a> yubico-piv-tool</h2>\n<h3 id=\"导入私钥\"><a class=\"anchor\" href=\"#导入私钥\">#</a> 导入私钥</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yubico-piv-tool -a import-key -s 9a -i rsa_private_key.pem</pre></td></tr></table></figure><h3 id=\"导入证书\"><a class=\"anchor\" href=\"#导入证书\">#</a> 导入证书</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yubico-piv-tool -a import-key -s 9a -i signed_cert.pem</pre></td></tr></table></figure><h2 id=\"ykman\"><a class=\"anchor\" href=\"#ykman\">#</a> ykman</h2>\n<ul>\n<li>把 rsa_private_key.pem、signed_cert.pem cat 出来，对应到私钥、证书，输入后留空一行然后 ctrl+c 取消后输入 pin</li>\n</ul>\n<h3 id=\"导入私钥-2\"><a class=\"anchor\" href=\"#导入私钥-2\">#</a> 导入私钥</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ykman piv keys <span class=\"token function\">import</span> 9a -</pre></td></tr></table></figure><h3 id=\"导入证书-2\"><a class=\"anchor\" href=\"#导入证书-2\">#</a> 导入证书</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ykman piv certificates <span class=\"token function\">import</span> 9a -</pre></td></tr></table></figure><h1 id=\"canokey-piv\"><a class=\"anchor\" href=\"#canokey-piv\">#</a> Canokey PIV</h1>\n<h2 id=\"yubico-piv-tool-2\"><a class=\"anchor\" href=\"#yubico-piv-tool-2\">#</a> yubico-piv-tool</h2>\n<h3 id=\"导入私钥-3\"><a class=\"anchor\" href=\"#导入私钥-3\">#</a> 导入私钥</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yubico-piv-tool -r canokey -a import-key -s 9a -i rsa_private_key.pem</pre></td></tr></table></figure><h3 id=\"导入证书-3\"><a class=\"anchor\" href=\"#导入证书-3\">#</a> 导入证书</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yubico-piv-tool -r canokey -a import-key -s 9a -i signed_cert.pem</pre></td></tr></table></figure><h2 id=\"ykman-2\"><a class=\"anchor\" href=\"#ykman-2\">#</a> ykman</h2>\n<ul>\n<li>把 rsa_private_key.pem、signed_cert.pem cat 出来，对应到私钥、证书，输入后留空一行然后 ctrl+c 取消后输入 pin</li>\n</ul>\n<h3 id=\"导入私钥-4\"><a class=\"anchor\" href=\"#导入私钥-4\">#</a> 导入私钥</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ykman -r canokey piv keys <span class=\"token function\">import</span> 9a -</pre></td></tr></table></figure><h3 id=\"导入证书-4\"><a class=\"anchor\" href=\"#导入证书-4\">#</a> 导入证书</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ykman -r canokey piv certificates <span class=\"token function\">import</span> 9a -</pre></td></tr></table></figure><h1 id=\"ssh自动登录\"><a class=\"anchor\" href=\"#ssh自动登录\">#</a> SSH 自动登录</h1>\n<h2 id=\"windows\"><a class=\"anchor\" href=\"#windows\">#</a> Windows</h2>\n<p>下载 WinCryptSSHAgent，启动后右键托盘图标 ， <code>show public key</code> 。将公钥放到服务器.ssh/authorized_keys</p>\n",
            "tags": [
                "yubikey",
                "canokeys"
            ]
        },
        {
            "id": "https://www.taoidle.com/2023/09/02/%E5%B7%A5%E4%B8%9A%E8%A7%86%E8%A7%89%E8%A1%8C%E4%B8%9A%E5%8F%91%E5%B1%95%E7%8E%B0%E7%8A%B6%E6%A6%82%E5%86%B5/",
            "url": "https://www.taoidle.com/2023/09/02/%E5%B7%A5%E4%B8%9A%E8%A7%86%E8%A7%89%E8%A1%8C%E4%B8%9A%E5%8F%91%E5%B1%95%E7%8E%B0%E7%8A%B6%E6%A6%82%E5%86%B5/",
            "title": "工业视觉行业发展现状概况",
            "date_published": "2023-09-02T06:11:32.000Z",
            "content_html": "<p>资料来源：国家统计局，中国通信院，中国电子信息产业发展研究院，华西证券研究所，国元证券，天风证券，华鑫证券，国海证券，中移智库，图漾科技，奥普特，GGI，CCID，euresys</p>\n<h2 id=\"行业发展环境\"><a class=\"anchor\" href=\"#行业发展环境\">#</a> 行业发展环境</h2>\n<p>中国机器视觉市场规模 2021 年约 138 亿，2022 年约 169 亿，2023 年预计达到 225 亿。2019 至今 CAGP 约 25%。</p>\n<p>其中以 2D 机器视觉为主，当前市场规模约为 3D 视觉的 8~10 倍。</p>\n<p>工业是目前中国奇迹视觉行业最大的应用领域，占比约 80%，其中电子、半导体、新能源、汽车约占整个行业的 65%，这也是目前最值得关注的四大赛道。</p>\n<p>消费电子元器件尺寸较小，检测要求较高，适合用机器视觉系统检测。是机器视觉主要应用行业。应用场景举例：电子零件、设备检测、CIS 高精密点胶与自动检测、电子产品表面缺陷检测、手机盖板玻璃检测等</p>\n<p>汽车制造领域，机器视觉主要用于车身装配检测，面板印刷质量检测、字符检测、零件尺寸的紧密检测、工业表面缺陷检测、自由曲面检测、间隙检测等几乎所有系统和不见的制造流程。随着质量官管控、智能化趋势对检测要求的提高，机器视觉需求也会继续提高。3D 视觉是汽车制造行业的趋势。场景举例：冷凝器外观检测、汽车电磁阀滤芯检测、汽车曲轴连杆检测等</p>\n<p>新能源方面，除了锂电，光伏也是重点发展对象。</p>\n<h2 id=\"工业机器视觉产业链\"><a class=\"anchor\" href=\"#工业机器视觉产业链\">#</a> 工业机器视觉产业链</h2>\n<p>上游：工业机器视觉产业链上游包括光源、工业镜头、工业相机、图像采集卡和软件及算法平台，其中工业镜头、相机、采集卡等核心零部件与算法软件是机器视觉价值最高的部分，其成本占据工业视觉产品总成本的 80%。</p>\n<p>中游：二次开发的系统集成和软件服务商，主要根据上游产品以及下游需求进行集成整合，越来越多上游企业向中游业务扩展延伸，形成自有的完整解决方案。</p>\n<p>下游：机器视觉下游的应用领域广泛，涉及到多种制造业及服务行业，主要应用于消费电子、汽车制造、半导体、新能源、医疗制药等行业。</p>\n<h2 id=\"工业视觉厂商销售模式\"><a class=\"anchor\" href=\"#工业视觉厂商销售模式\">#</a> 工业视觉厂商销售模式</h2>\n<p>主要有 3 种销售模式，其中较多的是和集成商合作，将产品给集成商做系统集成，因此成为集成商需求的核心厂商是工业视觉厂商努力的方向。</p>\n<h2 id=\"机器视觉解决方案\"><a class=\"anchor\" href=\"#机器视觉解决方案\">#</a> 机器视觉解决方案</h2>\n<p>场景应用可分为：</p>\n<ul>\n<li>识别：基于目标物进行甄别，包括外形、颜色、条码等。</li>\n<li>测量：把获取的图像像素信息标定成常用的度量衡单位，然后在图像中精确地计算出目标物体的几何尺寸。</li>\n<li>定位：获得目标物体的位置，可以是二维或者是三位的位置信息。定位的精度和速度是定位功能的主要指标。在识别出物体的基础上精确给出物体的坐标和角度信息，自动判断物体位置。</li>\n<li>检测：外观检测，其内涵种类繁多。如产品装配后的完整性检测、外观缺陷检测等。</li>\n</ul>\n<p>应用较多的场景为视觉检测与视觉定位。</p>\n<h2 id=\"工业领域典型应用场景\"><a class=\"anchor\" href=\"#工业领域典型应用场景\">#</a> 工业领域典型应用场景</h2>\n<h3 id=\"自动化产线质检\"><a class=\"anchor\" href=\"#自动化产线质检\">#</a> 自动化产线质检</h3>\n<p>目前人工质检面临质量、成本、特殊场景应对等问题。</p>\n<ol>\n<li>质量：人类视觉对灰度的分辨能力较差，在空间分辨能力上效果也不好，难以分辨微小目标，且存在视觉疲劳及心理波动。</li>\n<li>成本：产品复杂度逐渐增加，产线工人数量增多，人员流动性高，培训和用工成本高。</li>\n<li>效率：人工质检的检测时间是 s 级，而机器视觉快门时间和计算时间都可以达到 us 级。</li>\n</ol>\n<p>工业领域质检主要涉及产品外观缺陷、尺寸、平整度、距离、校准、焊接、质量、弯曲度等检测。典型自动化产线上的工业视觉检测由视觉检测系统（成像、光源、图像采集处理）、运动控制系统、显示单元组成。</p>\n<h3 id=\"工业机器人视觉引导与检测\"><a class=\"anchor\" href=\"#工业机器人视觉引导与检测\">#</a> 工业机器人视觉引导与检测</h3>\n<p>视觉引导是指通过成像系统对工件进行定位和识别，引导机器人进行抓取，用于无序分拣，上下料，焊接等。</p>\n<p>典型机器人工业视觉引导组装系统有三部分组成：工业相机、工控机（图像处理软件）、机械手。工业相机获取图像信息，传送到工控机上的图像处理软件，进行动态定位和识别，获取要抓取物品空间位置信息，规划机械手运动路径、拾取及放置的位置。</p>\n<h2 id=\"技术发展趋势\"><a class=\"anchor\" href=\"#技术发展趋势\">#</a> 技术发展趋势</h2>\n<ul>\n<li>\n<p>集成化，小型化</p>\n<p>将光学模组、通信模组、计算模组集成到一个单一的设备，缩小体积，即嵌入式视觉应用。端侧视觉检测系统与运动控制平台结合，实时对端侧异常情况进行处理，而随着检测精度的提高，端侧数据量增大，边缘端的数据处理可以减轻数据回传的通信链路带宽压力。场景举例：基于视觉的辅助驾驶、智能安防系统、智能读码器、机器人引导系统等。</p>\n</li>\n<li>\n<p>智能化，简易化</p>\n<p>从传统工业视觉逐渐向基于深度学习的 AI 工业视觉过渡，由于视觉工程师基于视觉任务的特定需求进行目标特征的定义及数值判断的阈值定义的实现难以适应随机性强、特征复杂的工作任务。算法集成度越来越高，操作简易化，大幅度降低使用门槛。</p>\n</li>\n<li>\n<p>3D 机器视觉</p>\n<p>从 2D 视觉逐渐向 3D 视觉转变。3D 视觉对光照条件相对不敏感，且精度和可靠性高，可以更好的进行多传感器融合，检测目标并获得形状、对比度、空间坐标信息等。而 2D 视觉不擅长测量任何具有高度或深度的物体。</p>\n<p>3D 视觉目前四种主要技术</p>\n<ul>\n<li>\n<p>激光三角测量：在激光三角测量系统中，激光线被投射在 3D 对象上，用以测量。 相机从一个不同的角度对着激光线。 相机观察到的激光线变形包含了被测量物体的形状信息。对物体的扫描包含物体在激光线下移动和多图像的记录。通过扫描可以重构其 3D 形状。</p>\n</li>\n<li>\n<p>双目立体视觉：基于视差原理并利用成像设备从不同的位置获取被测物体的两幅图像，通过计算图像对应点间的位置偏差，来获取物体三维几何信息的方法。</p>\n</li>\n<li>\n<p>TOF：通过给目标连续发送光脉冲，然后用传感器接收从物体返回的光，通过探测光脉冲的飞行（往返）时间来得到目标物距离。</p>\n</li>\n<li>\n<p>结构光：通过一个投影器投射出一个特定的图案，然后在摄像机所拍摄的图像中识别出这个图案，通过计算这个图案变形的程度和位置，推断出物体的三维形状。投影器投射出的图案称为结构光系统的编码或模式编码。可分为线扫描结构光和面阵结构光。</p>\n</li>\n</ul>\n<p>结构光 &amp; TOF</p>\n<ul>\n<li>结构光 优点：方案成熟，功耗低，平面信息分辨率高 缺点：识别距离近，受光照影响大</li>\n<li>TOF 优点：抗干扰性好，识别距离远 缺点：平面分辨率低，功耗大</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"智能质检典型应用模式\"><a class=\"anchor\" href=\"#智能质检典型应用模式\">#</a> 智能质检典型应用模式</h2>\n<ul>\n<li>外观表面质量检测</li>\n<li>几何尺寸公差检测</li>\n<li>装配质量防错检测</li>\n</ul>\n<h2 id=\"产业概况图\"><a class=\"anchor\" href=\"#产业概况图\">#</a> 产业概况图</h2>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/%E6%9C%BA%E5%99%A8%E8%A7%86%E8%A7%89%E4%BA%A7%E4%B8%9A%E6%A6%82%E5%86%B5.png\" alt=\"\" /></p>\n",
            "tags": [
                "工业视觉"
            ]
        },
        {
            "id": "https://www.taoidle.com/2023/08/24/%E5%8F%8C%E5%9B%A0%E7%B4%A0%E9%AA%8C%E8%AF%81%E3%80%81%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86%E5%99%A8%E4%B8%8E%E7%A1%AC%E4%BB%B6%E5%AF%86%E9%92%A5/",
            "url": "https://www.taoidle.com/2023/08/24/%E5%8F%8C%E5%9B%A0%E7%B4%A0%E9%AA%8C%E8%AF%81%E3%80%81%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86%E5%99%A8%E4%B8%8E%E7%A1%AC%E4%BB%B6%E5%AF%86%E9%92%A5/",
            "title": "双因素验证、密码管理器与硬件密钥",
            "date_published": "2023-08-24T11:17:22.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>Yubikey 也用了有几年了，刚好昨天买了个 Canokey，今天就到了，真好有空就顺便浅谈一下硬件密钥这类产品。</p>\n<h2 id=\"正文\"><a class=\"anchor\" href=\"#正文\">#</a> 正文</h2>\n<h3 id=\"为什么使用双因素验证\"><a class=\"anchor\" href=\"#为什么使用双因素验证\">#</a> 为什么使用双因素验证</h3>\n<p>互联网发展至今，我们最常见的身份验证手段就是用户名 + 密码。大多数用户会对多个账户使用相同的密码，这么做最直接的问题就是当其中一个账户被入侵，其它账户就会面临相同的风险，并且有很多服务商是明文存储我们的密码的，密码泄露导致的其它经济风险会大大提升。从生物的本能上，人本身不擅长记忆复杂的长密码，所以密码管理器和硬件密钥应运而生。</p>\n<p>这里会扯到一个东西 —— 2FA，也就是双因素验证。目前国内最常见的 2FA 就是手机验证码，这本应该是个可选项，但是在国内它几乎成了必选项。这就导致一些问题，比如：手机没带登录不了、手机丢了账号被盗...</p>\n<p>那除了短信验证码还有没有其它 2FA 的方式，有的而且很多，只是国内不按套路出牌。比如 OTP/TOTP/HOTP、FIDO U2F。刚刚说的短信验证码也是 OTP 的一种，但是这种 SMS OTP 的形式它方便但是不安全，与之同理还有邮件验证。</p>\n<ul>\n<li>HOTP：HMAC-based One-Time Password，基于 HMAC 算法加密的一次性密码，基于事件因素，是 IETF 公开的算法规范。</li>\n<li>TOTP：Time-based One-Time Password，基于时间戳算法的一次性密码，基于时间因素，是 HOTP 的改良版。每个验证码的有效时间通常为 30 秒。</li>\n</ul>\n<p>现在流行的是 TOTP，常见的使用方式就是安装一个身份验证器 APP，比如谷歌身份验证器、微软身份验证器、1Password 等。TOTP 确实比短信验证来的安全，也不需要专门的硬件，成本低，但是也有局限性，最大的问题就是不能抵御中间人攻击。</p>\n<h3 id=\"密码管理器\"><a class=\"anchor\" href=\"#密码管理器\">#</a> 密码管理器</h3>\n<p>既然人记不住太多的复杂密码，那这件事就交给软件去做。让密码管理器保存你不同网站的账号密码，这时候密码想怎么复杂就怎么复杂了，然后可以选择在密码管理器中保存不同网站的 2FA。至于密码管理器本身的安全系数应该提到最高，建议使用硬件密钥作为密码管理器的 2FA。常见的密码管理器产品有：1Password、Bitwarden、LassPass 等等。其中 Bitwarden 有开源的实现方式，可以自己私有化部署，具体可以看我的这篇文章：<a href=\"https://www.taoidle.com/2022/04/09/Raspberry%20Pi4b%E7%A7%81%E6%9C%89%E9%83%A8%E7%BD%B2Bitwarden/\" title=\"Raspberry Pi4b私有部署Bitwarden\">Raspberry Pi4b 私有部署 Bitwarden</a>，可以按照文章的部署方法部署到公网服务器上，也可以通过内网穿透的形式使用。</p>\n<h3 id=\"硬件密钥\"><a class=\"anchor\" href=\"#硬件密钥\">#</a> 硬件密钥</h3>\n<p>外观上看，硬件密钥跟我们日常使用 U 盘差不多。但是硬件密钥只能写入认证信息，不能读取数据，特性就是只写不读。基于只写不读的特性，硬件密钥可以有效地抵御中间人攻击，这也就是所谓的 U2F。一般安全密钥支持多种不同的加密协议，比如：FIDO、OTP/HOTP/TOTP、U2F、PGP 等。使用上硬件密钥需要更多的成本，具体看选择哪一款。并且硬件密钥一般需要 2 个或者更多，因为需要有备份防止丢失。</p>\n<p>下图是两款硬件密钥产品，上面的是 Yubico 推出的 Yubikey 5NFC，下面的是由清华大学一些师生开发的 Canokey。从外观上说 Yubikey 的做工更好，但是贵啊，现在淘宝的价格已经去到了 500 多了（前几年大概是 300 多，去年 cloudflare 开了一波 yubikey 的车，海淘回来大概 100 + 一个，幸亏我去年多搞了几个，现在小黄鱼上都涨价了，成理财产品了），而 Canokey 只需要 169，功能上的体验和 Yubikey 差不了太多，反正就是 Yubikey 廉价好用的替代。</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/photo_2023-08-24_19-00-31.jpg\" alt=\"\" /></p>\n",
            "tags": [
                "科普"
            ]
        },
        {
            "id": "https://www.taoidle.com/2023/07/16/Brew%20Error%20Miscellaneous/",
            "url": "https://www.taoidle.com/2023/07/16/Brew%20Error%20Miscellaneous/",
            "title": "Brew Error Miscellaneous",
            "date_published": "2023-07-16T05:10:53.000Z",
            "content_html": "<h2 id=\"brew-services-error\"><a class=\"anchor\" href=\"#brew-services-error\">#</a> Brew Services Error</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Error: uninitialized constant Homebrew::Service::System</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>/opt/homebrew/Library/Taps/homebrew/homebrew-services/cmd/services.rb:61:in <span class=\"token variable\"><span class=\"token variable\">`</span>services'</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>/opt/homebrew/Library/Homebrew/brew.rb:94:in <span class=\"token variable\">`</span></span><span class=\"token operator\">&lt;</span>main<span class=\"token operator\">></span>'</pre></td></tr></table></figure><h2 id=\"issue\"><a class=\"anchor\" href=\"#issue\">#</a> Issue</h2>\n<ul>\n<li>an unmaintained mirror</li>\n</ul>\n<h2 id=\"fix\"><a class=\"anchor\" href=\"#fix\">#</a> Fix</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> -C <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span>brew --repo homebrew/services<span class=\"token variable\">)</span></span>\"</span> remote set-url origin https://github.com/Homebrew/homebrew-services.git</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>brew update</pre></td></tr></table></figure>",
            "tags": [
                "Arm",
                "Apple",
                "苹果",
                "MacOS",
                "Brew"
            ]
        },
        {
            "id": "https://www.taoidle.com/2023/01/08/WSL%20%EF%BC%9ASystem%20has%20not%20been%20booted%20with%20systemd%20as%20init%20system%20(PID%201)/",
            "url": "https://www.taoidle.com/2023/01/08/WSL%20%EF%BC%9ASystem%20has%20not%20been%20booted%20with%20systemd%20as%20init%20system%20(PID%201)/",
            "title": "WSL ：System has not been booted with systemd as init system (PID 1)",
            "date_published": "2023-01-08T05:01:23.000Z",
            "content_html": "<h2 id=\"systemd-error\"><a class=\"anchor\" href=\"#systemd-error\">#</a> Systemd Error</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>System has not been booted with systemd as init system <span class=\"token punctuation\">(</span>PID <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>. Can't operate.</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Failed to connect to bus: Host is down</pre></td></tr></table></figure><h2 id=\"issue\"><a class=\"anchor\" href=\"#issue\">#</a> Issue</h2>\n<ul>\n<li>\n<p>Release of WSL doesn't support Systemd.</p>\n</li>\n<li>\n<p>Systemd is now officially supported in Ubuntu on many WSL systems.</p>\n</li>\n</ul>\n<h2 id=\"fix\"><a class=\"anchor\" href=\"#fix\">#</a> Fix</h2>\n<p>Start Ubuntu (or other Systemd) distribution under WSL</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> /etc/wsl.conf</pre></td></tr></table></figure><p>Add the following:</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>boot<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token assign-left variable\">systemd</span><span class=\"token operator\">=</span>true</pre></td></tr></table></figure><p>Open Powershell:</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wsl --shutdown</pre></td></tr></table></figure><p>or</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wsl --terminate <span class=\"token operator\">&lt;</span>Distro<span class=\"token operator\">></span></pre></td></tr></table></figure><p>WSL List only distributions that are currently running:</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wsl --list --running</pre></td></tr></table></figure><p>Start:</p>\n<p>Run the specified distribution.</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wsl --distribution <span class=\"token operator\">&lt;</span>Distro<span class=\"token operator\">></span></pre></td></tr></table></figure>",
            "tags": [
                "wsl",
                "systemd"
            ]
        },
        {
            "id": "https://www.taoidle.com/2022/11/02/%E5%8D%9A%E5%AE%A2%E5%8F%8A%E7%9B%B8%E5%85%B3%E6%9C%8D%E5%8A%A1/",
            "url": "https://www.taoidle.com/2022/11/02/%E5%8D%9A%E5%AE%A2%E5%8F%8A%E7%9B%B8%E5%85%B3%E6%9C%8D%E5%8A%A1/",
            "title": "博客及相关服务",
            "date_published": "2022-11-02T06:21:50.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>本文对我博客架构及相关服务的记录和补充。</p>\n<h2 id=\"正文\"><a class=\"anchor\" href=\"#正文\">#</a> 正文</h2>\n<p><s>众所周知</s>，我早期为 Wordpress 用户，用 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21hc2hpcm96eC9zYWt1cmE=\">Sakura</span> 主题，后期使用了基于 Sakara 重构的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21pcmFpLW1hbW9yaS9TYWt1cmFpcm8=\">Sakurairo</span>；同期，由 sakura 的随机封面功能，网上没看到比较符合我 xp 的，所以自己搓了个随即图服务。在 Wordpress 时期，我的博客和随即图服务在同一台服务器上，然后套了个 cdn。</p>\n<p>迁移到 hexo 主要原因是<s> Wordpress 太慢了</s> <span class=\"spoiler bulr\" title=\"你知道得太多了\">学生优惠无了</span>。</p>\n<p>于是现在变成了这样：</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/about_blog&amp;services(1).png\" alt=\"\" /></p>\n<p>本地写完 push 到 github 仓库 source 分支，触发 github action 进行构建，构建完分别 deploy 到 github 仓库的 master 分支和腾讯云存储桶。</p>\n<p>在访问的时，先通过阿里云 dns 做分流，国内流量走到腾讯云上，国外流量走到 github page。</p>\n<p>图片资源同理，通过阿里云 dns 做分流，国内走又拍云（通过又拍云联盟白嫖免费额度）。</p>\n<p>至于原本的图片 API 则拆成两个，国内使用<a href=\"https://www.taoidle.com/2022/07/10/%E8%85%BE%E8%AE%AF%E4%BA%91%E5%87%BD%E6%95%B0%E9%9A%8F%E6%9C%BA%E5%9B%BEapi%E5%AE%9E%E7%8E%B0\">腾讯云 SCF</a>，国外使用<a href=\"https://www.taoidle.com/2022/05/24/%E4%BD%BF%E7%94%A8cloudflare%E5%92%8Cjsdelivr%E5%81%9A%E4%B8%80%E4%B8%AA%E9%9A%8F%E6%9C%BA%E5%9B%BEapi/\"> cloudflare worker</a>。图片 API 变成了这样：</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/about_blog&amp;services(2).png\" alt=\"\" /></p>\n",
            "tags": [
                "cloudflare",
                "github",
                "cdn",
                "tencent cloud",
                "leancloud",
                "upyun"
            ]
        },
        {
            "id": "https://www.taoidle.com/2022/10/09/Linux%20Miscellaneous/",
            "url": "https://www.taoidle.com/2022/10/09/Linux%20Miscellaneous/",
            "title": "Linux Miscellaneous",
            "date_published": "2022-10-08T18:20:53.000Z",
            "content_html": "<h3 id=\"kde\"><a class=\"anchor\" href=\"#kde\">#</a> KDE</h3>\n<ul>\n<li>\n<p>KDE Desktop Restart</p>\n<p><code>kquitapp5 plasmashell &amp;&amp; kstart plasmashell</code></p>\n</li>\n</ul>\n<h3 id=\"kvm\"><a class=\"anchor\" href=\"#kvm\">#</a> KVM</h3>\n<ol>\n<li>\n<p>Install KVM</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pacman -S qemu libvirt ovmf virt-manager virt-viewer dnsmasq vdebridge-utils openbsd-netcat</pre></td></tr></table></figure></li>\n<li>\n<p>Start KVM</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> systemctl <span class=\"token builtin class-name\">enable</span> libvirtd.service</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> systemctl start libvirtd.service</pre></td></tr></table></figure></li>\n<li>\n<p>Use with non root user</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> /etc/libvirt/libvirtd.conf</pre></td></tr></table></figure><p>found and delete '#'</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#unix_sock_group = \"libvirt\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#unix_sock_rw_perms = \"0770\"</span></pre></td></tr></table></figure></li>\n<li>\n<p>Add new group and restart libvirt service</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>newgrp libvirt</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">usermod</span> -aG libvirt <span class=\"token environment constant\">$USER</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span> systemctl restart libvirtd.service</pre></td></tr></table></figure></li>\n<li>\n<p>Enable Nested Virtualization</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"options kvm-intel nested=1\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /etc/modprobe.d/kvm-intel.conf</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">cat</span> /sys/module/kvm_intel/parameters/nested</pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"doker\"><a class=\"anchor\" href=\"#doker\">#</a> Doker</h3>\n<ul>\n<li>\n<p>Use with non root user</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">usermod</span> -aG <span class=\"token function\">docker</span> <span class=\"token environment constant\">$USER</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>newgrp <span class=\"token function\">docker</span></pre></td></tr></table></figure></li>\n<li>\n<p>Use on Raspberrypi</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> -fsSL https://get.docker.com -o get-docker.sh <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">sudo</span> <span class=\"token function\">sh</span> get-docker.sh</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">groupadd</span> <span class=\"token function\">docker</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span> gpasswd -a <span class=\"token environment constant\">$USER</span> <span class=\"token function\">docker</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>newgrp <span class=\"token function\">docker</span></pre></td></tr></table></figure></li>\n<li>\n<p>Portainer</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> volume create portainer_data</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">docker</span> run -d -p <span class=\"token number\">8000</span>:8000 -p <span class=\"token number\">9443</span>:9443 --name portainer --restart<span class=\"token operator\">=</span>always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce:latest</pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"platformio\"><a class=\"anchor\" href=\"#platformio\">#</a> PlatformIO</h3>\n<ol>\n<li>\n<p>Install PlatformIO</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> -fsSL https://raw.githubusercontent.com/platformio/platformio-core-installer/master/get-platformio.py -o get-platformio.py</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>python3 get-platformio.py</pre></td></tr></table></figure></li>\n<li>\n<p>Set System Environment</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> /etc/profile</pre></td></tr></table></figure><p>Insert  <code>append_path '$HOME/.platformio/penv/bin'</code></p>\n<p>Save and exit</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">source</span> /etc/profile</pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"minicom\"><a class=\"anchor\" href=\"#minicom\">#</a> Minicom</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yay -S minicom</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> minicom -s</pre></td></tr></table></figure><figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>+-----<span class=\"token punctuation\">[</span>configuration<span class=\"token punctuation\">]</span>------+</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">|</span> Filenames and paths      <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">|</span> File transfer protocols  <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">|</span> Serial port setup        <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">|</span> Modem and dialing        <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">|</span> Screen and keyboard      <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">|</span> Save setup as dfl        <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">|</span> Save setup as<span class=\"token punctuation\">..</span>          <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token operator\">|</span> Exit                     <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token operator\">|</span> Exit from Minicom        <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>+--------------------------+</pre></td></tr></table></figure><p>select &quot;Serial port setup&quot; then &quot;Save setup as dfl&quot; or &quot;Save setup as..&quot;</p>\n<p>if use &quot;Save setup as..&quot;, connect drives like  <code> sudo minicom configurename</code></p>\n<p>check device :  <code>sudo dmesg | grep tty</code>  or  <code>ls -l /dev/tty*</code></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>+-----------------------------------------------------------------------+</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">|</span> A -    Serial Device      <span class=\"token builtin class-name\">:</span> /dev/ttyUSB0                              <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">|</span> B - Lockfile Location     <span class=\"token builtin class-name\">:</span> /var/run                                  <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">|</span> C -   Callin Program      <span class=\"token builtin class-name\">:</span>                                           <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">|</span> D -  Callout Program      <span class=\"token builtin class-name\">:</span>                                           <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">|</span> E -    Bps/Par/Bits       <span class=\"token builtin class-name\">:</span> <span class=\"token number\">115200</span> 8N1                                <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">|</span> F - Hardware Flow Control <span class=\"token builtin class-name\">:</span> No                                        <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">|</span> G - Software Flow Control <span class=\"token builtin class-name\">:</span> No                                        <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token operator\">|</span> H -     RS485 Enable      <span class=\"token builtin class-name\">:</span> No                                        <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token operator\">|</span> I -   RS485 Rts On Send   <span class=\"token builtin class-name\">:</span> No                                        <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token operator\">|</span> J -  RS485 Rts After Send <span class=\"token builtin class-name\">:</span> No                                        <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token operator\">|</span> K -  RS485 Rx During Tx   <span class=\"token builtin class-name\">:</span> No                                        <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token operator\">|</span> L -  RS485 Terminate Bus  <span class=\"token builtin class-name\">:</span> No                                        <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token operator\">|</span> M - RS485 Delay Rts Before: <span class=\"token number\">0</span>                                         <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token operator\">|</span> N - RS485 Delay Rts After <span class=\"token builtin class-name\">:</span> <span class=\"token number\">0</span>                                         <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token operator\">|</span>                                                                       <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token operator\">|</span>    Change <span class=\"token function\">which</span> setting?                                              <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>+-----------------------------------------------------------------------+</pre></td></tr></table></figure><p>select &quot;Save setup as dfl&quot; and &quot;Exit from Minicom&quot;</p>\n<p>use  <code>sudo minicom</code>  connect the serial device</p>\n<p>Tips: When use minicom, use Ctrl + A Z to help, Ctrl + A X exit minicom</p>\n",
            "tags": [
                "linux"
            ]
        },
        {
            "id": "https://www.taoidle.com/2022/08/07/MacOS%20Apple%20silicon%20Install%20Docker/",
            "url": "https://www.taoidle.com/2022/08/07/MacOS%20Apple%20silicon%20Install%20Docker/",
            "title": "MacOS Apple silicon Install Docker",
            "date_published": "2022-08-07T01:20:53.000Z",
            "content_html": "<h3 id=\"install\"><a class=\"anchor\" href=\"#install\">#</a> Install</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>brew <span class=\"token function\">install</span> --cask <span class=\"token function\">docker</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>brew <span class=\"token function\">install</span> <span class=\"token function\">docker</span> <span class=\"token function\">docker-compose</span></pre></td></tr></table></figure><h3 id=\"test\"><a class=\"anchor\" href=\"#test\">#</a> Test</h3>\n<p>Input:</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> pull hello-world</pre></td></tr></table></figure><p>Output:</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>latest: Pulling from library/hello-world</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>70f5ac315c5a: Pull complete </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Digest: sha256:dcba6daec718f547568c562956fa47e1b03673dd010fe6ee58ca806767031d1c</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Status: Downloaded newer image <span class=\"token keyword\">for</span> hello-world:latest</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>docker.io/library/hello-world:latest</pre></td></tr></table></figure><p>Input:</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run hello-world</pre></td></tr></table></figure><p>Output:</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Hello from Docker<span class=\"token operator\">!</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>This message shows that your installation appears to be working correctly.</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>To generate this message, Docker took the following steps:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token number\">1</span>. The Docker client contacted the Docker daemon.</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> <span class=\"token number\">2</span>. The Docker daemon pulled the <span class=\"token string\">\"hello-world\"</span> image from the Docker Hub.</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">(</span>arm64v8<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> <span class=\"token number\">3</span>. The Docker daemon created a new container from that image <span class=\"token function\">which</span> runs the</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    executable that produces the output you are currently reading.</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> <span class=\"token number\">4</span>. The Docker daemon streamed that output to the Docker client, <span class=\"token function\">which</span> sent it</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    to your terminal.</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>To try something <span class=\"token function\">more</span> ambitious, you can run an Ubuntu container with:</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> $ <span class=\"token function\">docker</span> run -it ubuntu <span class=\"token function\">bash</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>Share images, automate workflows, and <span class=\"token function\">more</span> with a <span class=\"token function\">free</span> Docker ID:</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> https://hub.docker.com/</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>For <span class=\"token function\">more</span> examples and ideas, visit:</pre></td></tr><tr><td data-num=\"20\"></td><td><pre> https://docs.docker.com/get-started/</pre></td></tr></table></figure>",
            "tags": [
                "Arm",
                "Apple",
                "苹果",
                "MacOS",
                "Docker"
            ]
        },
        {
            "id": "https://www.taoidle.com/2022/07/30/ESP32-S3%20%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%95/",
            "url": "https://www.taoidle.com/2022/07/30/ESP32-S3%20%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%95/",
            "title": "ESP32-S3 折腾记录",
            "date_published": "2022-07-30T04:00:24.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>开发板：ESP32-S3-DEVKIT-C</p>\n<p>开发环境：Clion + Platformio</p>\n<p>开发方式：Arduino</p>\n<h2 id=\"正文\"><a class=\"anchor\" href=\"#正文\">#</a> 正文</h2>\n<h3 id=\"关于-esp32-s3\"><a class=\"anchor\" href=\"#关于-esp32-s3\">#</a> 关于 ESP32-S3</h3>\n<p>为什么选择使用 ESP32-S3？</p>\n<p>在 TMD 芯片贵上天的今天，一片 STM32F103C8T6 也要接近 20 块钱，在加一个 NF24L01 价格上跟一片 ESP32-S3-WROOM-1/ESP32-S3-WROOM-1U N16R8 差不多，但是资源上被 ESP32-S3 甩了 10086 条街。</p>\n<p>先看一下 ESP32-S3-WROOM-1 N16R8 这个模组 (ESP32-S3-WROOM-1 采用 PCB 板载天线，ESP32-S3-WROOM-1U 采用连接器连接外部天线，资源一致)</p>\n<ul>\n<li>Xtensa® 32 位 LX7 双核处理器，五级流水线架构，主频高达 240 MHz</li>\n<li>2.4 GHz WiFi &amp; Bluetooth 5</li>\n<li>PSRAM：8MB</li>\n<li>FALSH: 16MB</li>\n<li>GPIO: 45</li>\n<li>SPI: 4</li>\n<li>I2C: 2</li>\n<li>I2S: 2</li>\n<li>ADC: 12</li>\n<li>TOUCH: 14</li>\n</ul>\n<p>除此之外，ESP32-S3 安全机制也非常完善</p>\n<ul>\n<li>安全启动</li>\n<li>Flash 加密</li>\n<li>4-Kbit OTP，用户可用的高达 1792 位</li>\n<li>加密硬件加速器：\n<ul>\n<li>AES-128/256 (FIPS PUB 197)</li>\n<li>Hash (FIPS PUB 180-4)</li>\n<li>RSA</li>\n<li>随机数生成器 (RNG)</li>\n<li>HMAC</li>\n<li>数字签名</li>\n</ul>\n</li>\n</ul>\n<p>如此丰富的硬件资源足够做很多 “大玩具”，是折腾用的不二选择，以下内容记录 ESP32-S3 的使用和踩的坑，不定时更新...</p>\n<p>下面为 ESP32-S3-DEVKIT-C 开发板引脚定义图</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/ESP32-S3_DevKitC-1_pinlayout_v1.1.jpg\" alt=\"\" /></p>\n<h3 id=\"spi-sd卡\"><a class=\"anchor\" href=\"#spi-sd卡\">#</a> SPI SD 卡</h3>\n<p>官方示例如下，在官方示例中引脚为默认，在实际场景中往往需要自定义引脚。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * Connect the SD card to the following pins:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * SD Card | ESP32</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> *    D2       -</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> *    D3       SS</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> *    CMD      MOSI</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> *    VSS      GND</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> *    VDD      3.3V</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> *    CLK      SCK</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> *    VSS      GND</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> *    D0       MISO</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> *    D1       -</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"FS.h\"</span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"SD.h\"</span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"SPI.h\"</span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">listDir</span><span class=\"token punctuation\">(</span>fs<span class=\"token double-colon punctuation\">::</span>FS <span class=\"token operator\">&amp;</span>fs<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> dirname<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint8_t</span> levels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Listing directory: %s\\n\"</span><span class=\"token punctuation\">,</span> dirname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    File root <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>dirname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>root<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failed to open directory\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>root<span class=\"token punctuation\">.</span><span class=\"token function\">isDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Not a directory\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    File file <span class=\"token operator\">=</span> root<span class=\"token punctuation\">.</span><span class=\"token function\">openNextFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">isDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"  DIR : \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>levels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                <span class=\"token function\">listDir</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> levels <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"  FILE: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"  SIZE: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        file <span class=\"token operator\">=</span> root<span class=\"token punctuation\">.</span><span class=\"token function\">openNextFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">createDir</span><span class=\"token punctuation\">(</span>fs<span class=\"token double-colon punctuation\">::</span>FS <span class=\"token operator\">&amp;</span>fs<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Creating Dir: %s\\n\"</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">mkdir</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Dir created\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mkdir failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">removeDir</span><span class=\"token punctuation\">(</span>fs<span class=\"token double-colon punctuation\">::</span>FS <span class=\"token operator\">&amp;</span>fs<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Removing Dir: %s\\n\"</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">rmdir</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Dir removed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rmdir failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>fs<span class=\"token double-colon punctuation\">::</span>FS <span class=\"token operator\">&amp;</span>fs<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Reading file: %s\\n\"</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    File file <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failed to open file for reading\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Read from file: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">available</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    file<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">writeFile</span><span class=\"token punctuation\">(</span>fs<span class=\"token double-colon punctuation\">::</span>FS <span class=\"token operator\">&amp;</span>fs<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> path<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Writing file: %s\\n\"</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    File file <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> FILE_WRITE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failed to open file for writing\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"File written\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Write failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    file<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre></pre></td></tr><tr><td data-num=\"100\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">appendFile</span><span class=\"token punctuation\">(</span>fs<span class=\"token double-colon punctuation\">::</span>FS <span class=\"token operator\">&amp;</span>fs<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> path<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Appending to file: %s\\n\"</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    File file <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> FILE_APPEND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failed to open file for appending\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Message appended\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Append failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>    file<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre></pre></td></tr><tr><td data-num=\"116\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">renameFile</span><span class=\"token punctuation\">(</span>fs<span class=\"token double-colon punctuation\">::</span>FS <span class=\"token operator\">&amp;</span>fs<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> path1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> path2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Renaming file %s to %s\\n\"</span><span class=\"token punctuation\">,</span> path1<span class=\"token punctuation\">,</span> path2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">rename</span><span class=\"token punctuation\">(</span>path1<span class=\"token punctuation\">,</span> path2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"File renamed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Rename failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre></pre></td></tr><tr><td data-num=\"125\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">deleteFile</span><span class=\"token punctuation\">(</span>fs<span class=\"token double-colon punctuation\">::</span>FS <span class=\"token operator\">&amp;</span>fs<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Deleting file: %s\\n\"</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"File deleted\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Delete failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre></pre></td></tr><tr><td data-num=\"134\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">testFileIO</span><span class=\"token punctuation\">(</span>fs<span class=\"token double-colon punctuation\">::</span>FS <span class=\"token operator\">&amp;</span>fs<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>    File file <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token keyword\">uint8_t</span> buf<span class=\"token punctuation\">[</span><span class=\"token number\">512</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>    size_t len <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>    <span class=\"token keyword\">uint32_t</span> start <span class=\"token operator\">=</span> <span class=\"token function\">millis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>    <span class=\"token keyword\">uint32_t</span> end <span class=\"token operator\">=</span> start<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>        len <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>        size_t flen <span class=\"token operator\">=</span> len<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>        start <span class=\"token operator\">=</span> <span class=\"token function\">millis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>            size_t toRead <span class=\"token operator\">=</span> len<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>toRead <span class=\"token operator\">></span> <span class=\"token number\">512</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>                toRead <span class=\"token operator\">=</span> <span class=\"token number\">512</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>            file<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">,</span> toRead<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>            len <span class=\"token operator\">-=</span> toRead<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>        end <span class=\"token operator\">=</span> <span class=\"token function\">millis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> start<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%u bytes read for %u ms\\n\"</span><span class=\"token punctuation\">,</span> flen<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>        file<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failed to open file for reading\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre></pre></td></tr><tr><td data-num=\"159\"></td><td><pre></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>    file <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> FILE_WRITE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failed to open file for writing\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>    size_t i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>    start <span class=\"token operator\">=</span> <span class=\"token function\">millis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">2048</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>        file<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">,</span> <span class=\"token number\">512</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>    end <span class=\"token operator\">=</span> <span class=\"token function\">millis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> start<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%u bytes written for %u ms\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2048</span> <span class=\"token operator\">*</span> <span class=\"token number\">512</span><span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>    file<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre></pre></td></tr><tr><td data-num=\"176\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token number\">115200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>SD<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Card Mount Failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>    <span class=\"token keyword\">uint8_t</span> cardType <span class=\"token operator\">=</span> SD<span class=\"token punctuation\">.</span><span class=\"token function\">cardType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>cardType <span class=\"token operator\">==</span> CARD_NONE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No SD card attached\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SD Card Type: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>cardType <span class=\"token operator\">==</span> CARD_MMC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MMC\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>cardType <span class=\"token operator\">==</span> CARD_SD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SDSC\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>cardType <span class=\"token operator\">==</span> CARD_SDHC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SDHC\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UNKNOWN\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>    <span class=\"token keyword\">uint64_t</span> cardSize <span class=\"token operator\">=</span> SD<span class=\"token punctuation\">.</span><span class=\"token function\">cardSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SD Card Size: %lluMB\\n\"</span><span class=\"token punctuation\">,</span> cardSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>    <span class=\"token function\">listDir</span><span class=\"token punctuation\">(</span>SD<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>    <span class=\"token function\">createDir</span><span class=\"token punctuation\">(</span>SD<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/mydir\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>    <span class=\"token function\">listDir</span><span class=\"token punctuation\">(</span>SD<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>    <span class=\"token function\">removeDir</span><span class=\"token punctuation\">(</span>SD<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/mydir\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>    <span class=\"token function\">listDir</span><span class=\"token punctuation\">(</span>SD<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>    <span class=\"token function\">writeFile</span><span class=\"token punctuation\">(</span>SD<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/hello.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>    <span class=\"token function\">appendFile</span><span class=\"token punctuation\">(</span>SD<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/hello.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"World!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre>    <span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>SD<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/hello.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>    <span class=\"token function\">deleteFile</span><span class=\"token punctuation\">(</span>SD<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/foo.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>    <span class=\"token function\">renameFile</span><span class=\"token punctuation\">(</span>SD<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/hello.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/foo.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>    <span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>SD<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/foo.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre>    <span class=\"token function\">testFileIO</span><span class=\"token punctuation\">(</span>SD<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/test.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Total space: %lluMB\\n\"</span><span class=\"token punctuation\">,</span> SD<span class=\"token punctuation\">.</span><span class=\"token function\">totalBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Used space: %lluMB\\n\"</span><span class=\"token punctuation\">,</span> SD<span class=\"token punctuation\">.</span><span class=\"token function\">usedBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre></pre></td></tr><tr><td data-num=\"219\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre></pre></td></tr><tr><td data-num=\"221\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>需要注意的是，这里 SPI SD 卡必须接 5V，官方示例中接入为 3.3V，在实际中不行，会报错。</p>\n<p><code>sdcard_mount(): f_mount failed: (3) The physical drive cannot work</code></p>\n<p>正确做法应该将 SPI SD 接入 5V 后，自己初始化 SPI 引脚后传入 SD 卡初始化</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;SPI.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;FS.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;SD.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// VCC 5V</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SD_MISO</span>     <span class=\"token expression\"><span class=\"token number\">13</span></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SD_MOSI</span>     <span class=\"token expression\"><span class=\"token number\">11</span></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SD_SCLK</span>     <span class=\"token expression\"><span class=\"token number\">12</span></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SD_CS</span>       <span class=\"token expression\"><span class=\"token number\">10</span></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token number\">115200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    SPIClass spi <span class=\"token operator\">=</span> <span class=\"token function\">SPIClass</span><span class=\"token punctuation\">(</span>HSPI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    spi<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span>SD_SCLK<span class=\"token punctuation\">,</span> SD_MISO<span class=\"token punctuation\">,</span> SD_MOSI<span class=\"token punctuation\">,</span> SD_CS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>SD<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span>SD_CS<span class=\"token punctuation\">,</span> spi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Card Mount Failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">uint8_t</span> cardType <span class=\"token operator\">=</span> SD<span class=\"token punctuation\">.</span><span class=\"token function\">cardType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cardType <span class=\"token operator\">==</span> CARD_NONE<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No SD card attached\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SD Card Type: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cardType <span class=\"token operator\">==</span> CARD_MMC<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MMC\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cardType <span class=\"token operator\">==</span> CARD_SD<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SDSC\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cardType <span class=\"token operator\">==</span> CARD_SDHC<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SDHC\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UNKNOWN\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">uint64_t</span> cardSize <span class=\"token operator\">=</span> SD<span class=\"token punctuation\">.</span><span class=\"token function\">cardSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SD Card Size: %lluMB\\n\"</span><span class=\"token punctuation\">,</span> cardSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"initialisation done.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"遥杆模块\"><a class=\"anchor\" href=\"#遥杆模块\">#</a> 遥杆模块</h3>\n<p>遥杆需要注意将摇杆模块上的轻触开关引脚上拉</p>\n<p>以下代码实现读取两个遥杆的数据，当轻触开关被按下是触发蜂鸣器（有源低电平蜂鸣器）</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;Arduino.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PS2_1_X_PIN</span> <span class=\"token expression\"><span class=\"token number\">4</span></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PS2_1_Y_PIN</span> <span class=\"token expression\"><span class=\"token number\">5</span></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PS2_1_Y_BUTTON</span> <span class=\"token expression\"><span class=\"token number\">6</span></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PS2_2_X_PIN</span> <span class=\"token expression\"><span class=\"token number\">7</span></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PS2_2_Y_PIN</span> <span class=\"token expression\"><span class=\"token number\">15</span></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PS2_2_Y_BUTTON</span> <span class=\"token expression\"><span class=\"token number\">16</span></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">BEEP_PIN</span> <span class=\"token expression\"><span class=\"token number\">9</span></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup_ps2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup_beep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">beep</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint8_t</span> PIN<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint8_t</span> time<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint32_t</span> time_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token number\">115200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"setup ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token function\">setup_ps2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token function\">setup_beep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"setup ok\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">uint16_t</span> ps2_lx <span class=\"token operator\">=</span> <span class=\"token function\">analogRead</span><span class=\"token punctuation\">(</span>PS2_1_X_PIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">uint16_t</span> ps2_ly <span class=\"token operator\">=</span> <span class=\"token function\">analogRead</span><span class=\"token punctuation\">(</span>PS2_1_Y_PIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">uint16_t</span> ps2_lb <span class=\"token operator\">=</span> <span class=\"token function\">digitalRead</span><span class=\"token punctuation\">(</span>PS2_1_Y_BUTTON<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">uint16_t</span> ps2_rx <span class=\"token operator\">=</span> <span class=\"token function\">analogRead</span><span class=\"token punctuation\">(</span>PS2_2_X_PIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">uint16_t</span> ps2_ry <span class=\"token operator\">=</span> <span class=\"token function\">analogRead</span><span class=\"token punctuation\">(</span>PS2_2_Y_PIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">uint16_t</span> ps2_rb <span class=\"token operator\">=</span> <span class=\"token function\">digitalRead</span><span class=\"token punctuation\">(</span>PS2_2_Y_BUTTON<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lX: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ps2_lx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lY: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ps2_ly<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lZ: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>ps2_lb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rX: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ps2_rx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rY: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ps2_ry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rZ: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>ps2_rb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ps2_lb <span class=\"token operator\">==</span> LOW <span class=\"token operator\">||</span> ps2_rb <span class=\"token operator\">==</span> LOW<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"in if\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token function\">beep</span><span class=\"token punctuation\">(</span>BEEP_PIN<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup_ps2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token comment\">// set ps2-1</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>PS2_1_X_PIN<span class=\"token punctuation\">,</span> INPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ps2-1-x</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>PS2_1_Y_PIN<span class=\"token punctuation\">,</span> INPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ps2-1-y</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>PS2_1_Y_BUTTON<span class=\"token punctuation\">,</span> INPUT_PULLUP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ps2-1-button</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token function\">digitalWrite</span><span class=\"token punctuation\">(</span>PS2_1_Y_BUTTON<span class=\"token punctuation\">,</span> HIGH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token comment\">// set ps2-2</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>PS2_2_X_PIN<span class=\"token punctuation\">,</span> INPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ps2-2-x</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>PS2_2_Y_PIN<span class=\"token punctuation\">,</span> INPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ps2-2-y</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>PS2_2_Y_BUTTON<span class=\"token punctuation\">,</span> INPUT_PULLUP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ps2-2-button</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token function\">digitalWrite</span><span class=\"token punctuation\">(</span>PS2_2_Y_BUTTON<span class=\"token punctuation\">,</span> HIGH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup_beep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token comment\">// set bee</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>BEEP_PIN<span class=\"token punctuation\">,</span> OUTPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token function\">digitalWrite</span><span class=\"token punctuation\">(</span>BEEP_PIN<span class=\"token punctuation\">,</span> HIGH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">beep</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint8_t</span> PIN<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint8_t</span> time<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint32_t</span> time_len<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"beep: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>PIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> time<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        <span class=\"token function\">digitalWrite</span><span class=\"token punctuation\">(</span>PIN<span class=\"token punctuation\">,</span> LOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span>time_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        <span class=\"token function\">digitalWrite</span><span class=\"token punctuation\">(</span>PIN<span class=\"token punctuation\">,</span> HIGH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span>time_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"freertos\"><a class=\"anchor\" href=\"#freertos\">#</a> FreeRTOS</h3>\n<p>Esp32 不需要引入其它东西，可以直接使用 FreeRTOS</p>\n<p>下面代码将摇杆模块示例作为一个任务，再添加一个 RGB 灯任务，都在 ESP32 的 1 核心上运行</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;Arduino.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;soc/soc.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;soc/rtc_cntl_reg.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"soc/timer_group_struct.h\"</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"soc/timer_group_reg.h\"</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\">CONFIG_FREERTOS_UNICORE</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ARDUINO_RUNNING_CORE</span> <span class=\"token expression\"><span class=\"token number\">0</span></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">else</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ARDUINO_RUNNING_CORE</span> <span class=\"token expression\"><span class=\"token number\">1</span></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">RGB_R_PIN</span> <span class=\"token expression\"><span class=\"token number\">37</span></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">RGB_G_PIN</span> <span class=\"token expression\"><span class=\"token number\">36</span></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">RGB_B_PIN</span> <span class=\"token expression\"><span class=\"token number\">35</span></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">BUTTON_K1</span> <span class=\"token expression\"><span class=\"token number\">2</span></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PS2_1_X_PIN</span> <span class=\"token expression\"><span class=\"token number\">4</span></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PS2_1_Y_PIN</span> <span class=\"token expression\"><span class=\"token number\">5</span></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PS2_1_Y_BUTTON</span> <span class=\"token expression\"><span class=\"token number\">6</span></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PS2_2_X_PIN</span> <span class=\"token expression\"><span class=\"token number\">7</span></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PS2_2_Y_PIN</span> <span class=\"token expression\"><span class=\"token number\">15</span></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PS2_2_Y_BUTTON</span> <span class=\"token expression\"><span class=\"token number\">16</span></span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">BEEP_PIN</span> <span class=\"token expression\"><span class=\"token number\">9</span></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup_led</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup_button</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup_ps2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup_beep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">beep</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint8_t</span> PIN<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint8_t</span> time<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint32_t</span> time_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">turn_rgb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint8_t</span> R_PIN<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint8_t</span> G_PIN<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint8_t</span> B_PIN<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint32_t</span> time_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">task_button_rgb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>parameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">task_stick_beep</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>parameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">int</span> red_val <span class=\"token operator\">=</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">int</span> green_val <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token keyword\">int</span> blue_val <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>TaskHandle_t task_1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>TaskHandle_t task_2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token number\">115200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token function\">setup_led</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token function\">setup_button</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token function\">setup_ps2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token function\">setup_beep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token function\">xTaskCreatePinnedToCore</span><span class=\"token punctuation\">(</span>task_stick_beep<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Task_1\"</span><span class=\"token punctuation\">,</span> CONFIG_ESP_MINIMAL_SHARED_STACK_SIZE<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>task_1<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token function\">xTaskCreatePinnedToCore</span><span class=\"token punctuation\">(</span>task_button_rgb<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Task_2\"</span><span class=\"token punctuation\">,</span> CONFIG_ESP_MINIMAL_SHARED_STACK_SIZE<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>task_2<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">task_button_rgb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>parameter<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> parameter<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Task Button RGB running on core \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">xPortGetCoreID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">digitalRead</span><span class=\"token punctuation\">(</span>BUTTON_K1<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> LOW<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            <span class=\"token function\">turn_rgb</span><span class=\"token punctuation\">(</span>RGB_R_PIN<span class=\"token punctuation\">,</span> RGB_G_PIN<span class=\"token punctuation\">,</span> RGB_B_PIN<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">task_stick_beep</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>parameter<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> parameter<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Task Stick Beep running on core \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">xPortGetCoreID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token keyword\">uint16_t</span> ps2_lx <span class=\"token operator\">=</span> <span class=\"token function\">analogRead</span><span class=\"token punctuation\">(</span>PS2_1_X_PIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        <span class=\"token keyword\">uint16_t</span> ps2_ly <span class=\"token operator\">=</span> <span class=\"token function\">analogRead</span><span class=\"token punctuation\">(</span>PS2_1_Y_PIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        <span class=\"token keyword\">uint16_t</span> ps2_lb <span class=\"token operator\">=</span> <span class=\"token function\">digitalRead</span><span class=\"token punctuation\">(</span>PS2_1_Y_BUTTON<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        <span class=\"token keyword\">uint16_t</span> ps2_rx <span class=\"token operator\">=</span> <span class=\"token function\">analogRead</span><span class=\"token punctuation\">(</span>PS2_2_X_PIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        <span class=\"token keyword\">uint16_t</span> ps2_ry <span class=\"token operator\">=</span> <span class=\"token function\">analogRead</span><span class=\"token punctuation\">(</span>PS2_2_Y_PIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>        <span class=\"token keyword\">uint16_t</span> ps2_rb <span class=\"token operator\">=</span> <span class=\"token function\">digitalRead</span><span class=\"token punctuation\">(</span>PS2_2_Y_BUTTON<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lX: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ps2_lx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lY: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ps2_ly<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lZ: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>ps2_lb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rX: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ps2_rx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rY: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ps2_ry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rZ: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>ps2_rb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ps2_lb <span class=\"token operator\">==</span> LOW <span class=\"token operator\">||</span> ps2_rb <span class=\"token operator\">==</span> LOW<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>            <span class=\"token function\">beep</span><span class=\"token punctuation\">(</span>BEEP_PIN<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre></pre></td></tr><tr><td data-num=\"122\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup_led</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>RGB_R_PIN<span class=\"token punctuation\">,</span> OUTPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>RGB_G_PIN<span class=\"token punctuation\">,</span> OUTPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>RGB_B_PIN<span class=\"token punctuation\">,</span> OUTPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre></pre></td></tr><tr><td data-num=\"129\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup_button</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>BUTTON_K1<span class=\"token punctuation\">,</span> INPUT_PULLUP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    <span class=\"token function\">digitalWrite</span><span class=\"token punctuation\">(</span>BUTTON_K1<span class=\"token punctuation\">,</span> HIGH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre></pre></td></tr><tr><td data-num=\"135\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup_ps2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>    <span class=\"token comment\">// set ps2-1</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>PS2_1_X_PIN<span class=\"token punctuation\">,</span> INPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ps2-1-x</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>PS2_1_Y_PIN<span class=\"token punctuation\">,</span> INPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ps2-1-y</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>PS2_1_Y_BUTTON<span class=\"token punctuation\">,</span> INPUT_PULLUP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ps2-1-button</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>    <span class=\"token function\">digitalWrite</span><span class=\"token punctuation\">(</span>PS2_1_Y_BUTTON<span class=\"token punctuation\">,</span> HIGH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>    <span class=\"token comment\">// set ps2-2</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>PS2_2_X_PIN<span class=\"token punctuation\">,</span> INPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ps2-2-x</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>PS2_2_Y_PIN<span class=\"token punctuation\">,</span> INPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ps2-2-y</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>PS2_2_Y_BUTTON<span class=\"token punctuation\">,</span> INPUT_PULLUP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ps2-2-button</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>    <span class=\"token function\">digitalWrite</span><span class=\"token punctuation\">(</span>PS2_2_Y_BUTTON<span class=\"token punctuation\">,</span> HIGH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre></pre></td></tr><tr><td data-num=\"150\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup_beep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>    <span class=\"token comment\">// set bee</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>BEEP_PIN<span class=\"token punctuation\">,</span> OUTPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>    <span class=\"token function\">digitalWrite</span><span class=\"token punctuation\">(</span>BEEP_PIN<span class=\"token punctuation\">,</span> HIGH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre></pre></td></tr><tr><td data-num=\"157\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">beep</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint8_t</span> PIN<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint8_t</span> time<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint32_t</span> time_len<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"beep: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>PIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> time<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"for: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>        <span class=\"token function\">digitalWrite</span><span class=\"token punctuation\">(</span>PIN<span class=\"token punctuation\">,</span> LOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>        <span class=\"token function\">vTaskDelay</span><span class=\"token punctuation\">(</span>time_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>        <span class=\"token function\">digitalWrite</span><span class=\"token punctuation\">(</span>PIN<span class=\"token punctuation\">,</span> HIGH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>        <span class=\"token function\">vTaskDelay</span><span class=\"token punctuation\">(</span>time_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre></pre></td></tr><tr><td data-num=\"173\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">turn_rgb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint8_t</span> R_PIN<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint8_t</span> G_PIN<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint8_t</span> B_PIN<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint32_t</span> time_len<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>byte i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>        red_val<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>        green_val<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>        <span class=\"token function\">analogWrite</span><span class=\"token punctuation\">(</span>R_PIN<span class=\"token punctuation\">,</span> red_val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>        <span class=\"token function\">analogWrite</span><span class=\"token punctuation\">(</span>G_PIN<span class=\"token punctuation\">,</span> green_val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>        <span class=\"token function\">vTaskDelay</span><span class=\"token punctuation\">(</span>time_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>byte i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>        green_val<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>        blue_val<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>        <span class=\"token function\">analogWrite</span><span class=\"token punctuation\">(</span>G_PIN<span class=\"token punctuation\">,</span> green_val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>        <span class=\"token function\">analogWrite</span><span class=\"token punctuation\">(</span>B_PIN<span class=\"token punctuation\">,</span> blue_val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>        <span class=\"token function\">vTaskDelay</span><span class=\"token punctuation\">(</span>time_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>byte i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>        blue_val<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>        red_val<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>        <span class=\"token function\">analogWrite</span><span class=\"token punctuation\">(</span>B_PIN<span class=\"token punctuation\">,</span> blue_val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>        <span class=\"token function\">analogWrite</span><span class=\"token punctuation\">(</span>R_PIN<span class=\"token punctuation\">,</span> red_val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>        <span class=\"token function\">vTaskDelay</span><span class=\"token punctuation\">(</span>time_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"tft\"><a class=\"anchor\" href=\"#tft\">#</a> TFT</h3>\n<p>在 Arduino 里，TFT LCD 屏幕的驱动方式有好几种，这里选择的是 TFT_eSPI 这个库。<br />\nTFT_eSPI 这个库使用起来非常方便，根据自己所使用的屏幕具体的参数在库中的 User_Setup.h 这个头文件里修改好就行了，具体的话需要修改屏幕的驱动、屏幕的分辨率、屏幕的所使用的引脚。</p>\n<p>下面为头文件示例：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">USER_SETUP_INFO</span> <span class=\"token string\">\"User_Setup\"</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ST7735_DRIVER</span>      <span class=\"token comment\">// Define additional parameters below for this display</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">//#define ILI9163_DRIVER     // Define additional parameters below for this display</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">//#define S6D02A1_DRIVER</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">//#define RPI_ILI9486_DRIVER // 20MHz maximum SPI</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//#define HX8357D_DRIVER</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">//#define ILI9481_DRIVER</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">//#define ILI9486_DRIVER</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">//#define ILI9488_DRIVER     // WARNING: Do not connect ILI9488 display SDO to MISO if other devices share the SPI bus (TFT SDO does NOT tristate when CS is high)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">//#define ST7789_DRIVER      // Full configuration option, define additional parameters below for this display</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">//#define ST7789_2_DRIVER    // Minimal configuration option, define additional parameters below for this display</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">//#define R61581_DRIVER</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">//#define RM68140_DRIVER</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">//#define ST7796_DRIVER</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">//#define SSD1351_DRIVER</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">//#define SSD1963_480_DRIVER</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">//#define SSD1963_800_DRIVER</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">//#define SSD1963_800ALT_DRIVER</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">//#define ILI9225_DRIVER</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">//#define GC9A01_DRIVER</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre> <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TFT_WIDTH</span>  <span class=\"token expression\"><span class=\"token number\">128</span></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre> <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TFT_HEIGHT</span> <span class=\"token expression\"><span class=\"token number\">160</span></span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre> <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ST7735_REDTAB</span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">// #define ST7735_BLACKTAB</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">// #define ST7735_REDTAB160x80   // For 160 x 80 display with 24 pixel offset</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TFT_MOSI</span> <span class=\"token expression\"><span class=\"token number\">35</span> </span><span class=\"token comment\">// In some display driver board, it might be written as \"SDA\" and so on.</span></span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TFT_SCLK</span> <span class=\"token expression\"><span class=\"token number\">36</span></span></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TFT_CS</span>   <span class=\"token expression\"><span class=\"token number\">39</span>  </span><span class=\"token comment\">// Chip select control pin</span></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TFT_DC</span>   <span class=\"token expression\"><span class=\"token number\">38</span>  </span><span class=\"token comment\">// Data Command control pin</span></span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TFT_RST</span>  <span class=\"token expression\"><span class=\"token number\">37</span>  </span><span class=\"token comment\">// Reset pin (could connect to Arduino RESET pin)</span></span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TFT_BL</span>   <span class=\"token expression\"><span class=\"token number\">40</span>  </span><span class=\"token comment\">// LED back-light</span></span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">// Comment out the #defines below with // to stop that font being loaded</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\">// The ESP8366 and ESP32 have plenty of memory so commenting out fonts is not</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\">// normally necessary. If all fonts are loaded the extra FLASH space required is</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token comment\">// about 17Kbytes. To save FLASH space only enable the fonts you need!</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LOAD_GLCD</span>   <span class=\"token comment\">// Font 1. Original Adafruit 8 pixel font needs ~1820 bytes in FLASH</span></span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LOAD_FONT2</span>  <span class=\"token comment\">// Font 2. Small 16 pixel high font, needs ~3534 bytes in FLASH, 96 characters</span></span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LOAD_FONT4</span>  <span class=\"token comment\">// Font 4. Medium 26 pixel high font, needs ~5848 bytes in FLASH, 96 characters</span></span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LOAD_FONT6</span>  <span class=\"token comment\">// Font 6. Large 48 pixel font, needs ~2666 bytes in FLASH, only characters 1234567890:-.apm</span></span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LOAD_FONT7</span>  <span class=\"token comment\">// Font 7. 7 segment 48 pixel font, needs ~2438 bytes in FLASH, only characters 1234567890:-.</span></span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LOAD_FONT8</span>  <span class=\"token comment\">// Font 8. Large 75 pixel font needs ~3256 bytes in FLASH, only characters 1234567890:-.</span></span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token comment\">//#define LOAD_FONT8N // Font 8. Alternative to Font 8 above, slightly narrower, so 3 digits fit a 160 pixel TFT</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LOAD_GFXFF</span>  <span class=\"token comment\">// FreeFonts. Include access to the 48 Adafruit_GFX free fonts FF1 to FF48 and custom fonts</span></span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token comment\">// Comment out the #define below to stop the SPIFFS filing system and smooth font code being loaded</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\">// this will save ~20kbytes of FLASH</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SMOOTH_FONT</span></span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token comment\">// #define SPI_FREQUENCY   1000000</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token comment\">// #define SPI_FREQUENCY   5000000</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token comment\">// #define SPI_FREQUENCY  10000000</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token comment\">// #define SPI_FREQUENCY  20000000</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SPI_FREQUENCY</span>  <span class=\"token expression\"><span class=\"token number\">27000000</span></span></span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token comment\">// #define SPI_FREQUENCY  40000000</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token comment\">// #define SPI_FREQUENCY  55000000 // STM32 SPI1 only (SPI2 maximum is 27MHz)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token comment\">// #define SPI_FREQUENCY  80000000</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token comment\">// Optional reduced SPI frequency for reading TFT</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SPI_READ_FREQUENCY</span>  <span class=\"token expression\"><span class=\"token number\">20000000</span></span></span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token comment\">// The XPT2046 requires a lower SPI clock rate of 2.5MHz so we define that here:</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SPI_TOUCH_FREQUENCY</span>  <span class=\"token expression\"><span class=\"token number\">2500000</span></span></span></pre></td></tr></table></figure><h3 id=\"guislice\"><a class=\"anchor\" href=\"#guislice\">#</a> GUIslice</h3>\n<p>TFT LCD 屏幕使用 GUIslice GUI 库的时候最好搭配 TFT_eSPI 库一起使用</p>\n<h3 id=\"红外\"><a class=\"anchor\" href=\"#红外\">#</a> 红外</h3>\n<p>在 ESP32 中，红外遥控的库跟 Arduino 所有区别，Arduino 为 IRremote，ESP32 和 ESP8266 为 IRremoteESP8266。</p>\n<h4 id=\"红外发送\"><a class=\"anchor\" href=\"#红外发送\">#</a> 红外发送</h4>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;Esp.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;IRremoteESP8266.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;IRsend.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">uint16_t</span> kIrLed <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// ESP8266 GPIO pin to use. Recommended: 4 (D2).</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>IRsend <span class=\"token function\">irsend</span><span class=\"token punctuation\">(</span>kIrLed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Set the GPIO to be used to sending the message.</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// Example of data captured by IRrecvDumpV2.ino</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">uint16_t</span> rawData<span class=\"token punctuation\">[</span><span class=\"token number\">67</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">9000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                        <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                        <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                        <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                        <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                        <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                        <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">// Example Samsung A/C state captured from IRrecvDumpV2.ino</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">uint8_t</span> samsungState<span class=\"token punctuation\">[</span>kSamsungAcStateLength<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x92</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x71</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    irsend<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token number\">115200</span><span class=\"token punctuation\">,</span> SERIAL_8N1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NEC\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    irsend<span class=\"token punctuation\">.</span><span class=\"token function\">sendNEC</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x00FFE01FUL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sony\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    irsend<span class=\"token punctuation\">.</span><span class=\"token function\">sendSony</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xa90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 12 bits &amp; 2 repeats</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a rawData capture from IRrecvDumpV2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    irsend<span class=\"token punctuation\">.</span><span class=\"token function\">sendRaw</span><span class=\"token punctuation\">(</span>rawData<span class=\"token punctuation\">,</span> <span class=\"token number\">67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Send a raw data capture at 38kHz.</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a Samsung A/C state from IRrecvDumpV2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    irsend<span class=\"token punctuation\">.</span><span class=\"token function\">sendSamsungAC</span><span class=\"token punctuation\">(</span>samsungState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"红外接收\"><a class=\"anchor\" href=\"#红外接收\">#</a> 红外接收</h4>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;Esp.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;IRremoteESP8266.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;IRrecv.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;IRac.h></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;IRtext.h></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;IRutils.h></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">uint16_t</span> kRecvPin <span class=\"token operator\">=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">uint32_t</span> kBaudRate <span class=\"token operator\">=</span> <span class=\"token number\">115200</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">uint16_t</span> kCaptureBufferSize <span class=\"token operator\">=</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">uint8_t</span> kTimeout <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">uint8_t</span> kTolerancePercentage <span class=\"token operator\">=</span> kTolerance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>IRrecv <span class=\"token function\">irrecv</span><span class=\"token punctuation\">(</span>kRecvPin<span class=\"token punctuation\">,</span> kCaptureBufferSize<span class=\"token punctuation\">,</span> kTimeout<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>decode_results results<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    irsend<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token number\">115200</span><span class=\"token punctuation\">,</span> SERIAL_8N1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    irrecv<span class=\"token punctuation\">.</span><span class=\"token function\">setTolerance</span><span class=\"token punctuation\">(</span>kTolerancePercentage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    irrecv<span class=\"token punctuation\">.</span><span class=\"token function\">enableIRIn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>irrecv<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token keyword\">uint32_t</span> now <span class=\"token operator\">=</span> <span class=\"token function\">millis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span>D_STR_TIMESTAMP <span class=\"token string\">\" : %06u.%03u\\n\"</span><span class=\"token punctuation\">,</span> now <span class=\"token operator\">/</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> now <span class=\"token operator\">%</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token comment\">// Check if we got an IR message that was to big for our capture buffer.</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">.</span>overflow<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span>D_WARN_BUFFERFULL <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">,</span> kCaptureBufferSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token comment\">// Display the library version the message was captured with.</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>D_STR_LIBRARY <span class=\"token string\">\"   : v\"</span> _IRREMOTEESP8266_VERSION_STR <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token comment\">// Display the tolerance percentage if it has been change from the default.</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>kTolerancePercentage <span class=\"token operator\">!=</span> kTolerance<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span>D_STR_TOLERANCE <span class=\"token string\">\" : %d%%\\n\"</span><span class=\"token punctuation\">,</span> kTolerancePercentage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token comment\">// Display the basic output of what we found.</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">resultToHumanReadableBasic</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token comment\">// Display any extra A/C info if we have it.</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            String description <span class=\"token operator\">=</span> <span class=\"token class-name\">IRAcUtils</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">resultAcToString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>description<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>D_STR_MESGDESC <span class=\"token string\">\": \"</span> <span class=\"token operator\">+</span> description<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token function\">yield</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Feed the WDT as the text output can take a while to print.</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\">LEGACY_TIMING_INFO</span></span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token comment\">// Output legacy RAW timing info of the result.</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">resultToTimingInfo</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token function\">yield</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Feed the WDT (again)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span>  <span class=\"token comment\">// LEGACY_TIMING_INFO</span></span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token comment\">// Output the results as source code</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">resultToSourceCode</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// Blank line between entries</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token function\">yield</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>             <span class=\"token comment\">// Feed the WDT (again)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"在freertos中使用\"><a class=\"anchor\" href=\"#在freertos中使用\">#</a> 在 FreeRTOS 中使用</h4>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;Esp.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;IRremoteESP8266.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;IRsend.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;IRrecv.h></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;IRac.h></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;IRtext.h></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;IRutils.h></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">uint16_t</span> kIrLed <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// ESP8266 GPIO pin to use. Recommended: 4 (D2).</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>IRsend <span class=\"token function\">irsend</span><span class=\"token punctuation\">(</span>kIrLed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Set the GPIO to be used to sending the message.</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">uint16_t</span> kRecvPin <span class=\"token operator\">=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">uint32_t</span> kBaudRate <span class=\"token operator\">=</span> <span class=\"token number\">115200</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">uint16_t</span> kCaptureBufferSize <span class=\"token operator\">=</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">uint8_t</span> kTimeout <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">uint8_t</span> kTolerancePercentage <span class=\"token operator\">=</span> kTolerance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>IRrecv <span class=\"token function\">irrecv</span><span class=\"token punctuation\">(</span>kRecvPin<span class=\"token punctuation\">,</span> kCaptureBufferSize<span class=\"token punctuation\">,</span> kTimeout<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>decode_results results<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">// Example of data captured by IRrecvDumpV2.ino</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">uint16_t</span> rawData<span class=\"token punctuation\">[</span><span class=\"token number\">67</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">9000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                        <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                        <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                        <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                        <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                        <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                        <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">// Example Samsung A/C state captured from IRrecvDumpV2.ino</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">uint8_t</span> samsungState<span class=\"token punctuation\">[</span>kSamsungAcStateLength<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x92</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x71</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>TaskHandle_t task_1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>TaskHandle_t task_2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">esp_ir_send</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>parameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">esp_ir_recv</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>parameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    irsend<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token number\">115200</span><span class=\"token punctuation\">,</span> SERIAL_8N1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    irrecv<span class=\"token punctuation\">.</span><span class=\"token function\">setTolerance</span><span class=\"token punctuation\">(</span>kTolerancePercentage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    irrecv<span class=\"token punctuation\">.</span><span class=\"token function\">enableIRIn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token function\">xTaskCreatePinnedToCore</span><span class=\"token punctuation\">(</span>esp_ir_send<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Task_1\"</span><span class=\"token punctuation\">,</span> CONFIG_ESP_MINIMAL_SHARED_STACK_SIZE<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>task_1<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token function\">xTaskCreatePinnedToCore</span><span class=\"token punctuation\">(</span>esp_ir_recv<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Task_1\"</span><span class=\"token punctuation\">,</span> CONFIG_ESP_MINIMAL_SHARED_STACK_SIZE<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>task_2<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">esp_ir_send</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>parameter<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> parameter<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NEC\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        irsend<span class=\"token punctuation\">.</span><span class=\"token function\">sendNEC</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x00FFE01FUL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sony\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        irsend<span class=\"token punctuation\">.</span><span class=\"token function\">sendSony</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xa90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 12 bits &amp; 2 repeats</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a rawData capture from IRrecvDumpV2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        irsend<span class=\"token punctuation\">.</span><span class=\"token function\">sendRaw</span><span class=\"token punctuation\">(</span>rawData<span class=\"token punctuation\">,</span> <span class=\"token number\">67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Send a raw data capture at 38kHz.</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a Samsung A/C state from IRrecvDumpV2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        irsend<span class=\"token punctuation\">.</span><span class=\"token function\">sendSamsungAC</span><span class=\"token punctuation\">(</span>samsungState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">esp_ir_recv</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>parameter<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> parameter<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>irrecv<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>            <span class=\"token keyword\">uint32_t</span> now <span class=\"token operator\">=</span> <span class=\"token function\">millis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>            Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span>D_STR_TIMESTAMP <span class=\"token string\">\" : %06u.%03u\\n\"</span><span class=\"token punctuation\">,</span> now <span class=\"token operator\">/</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> now <span class=\"token operator\">%</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>            <span class=\"token comment\">// Check if we got an IR message that was to big for our capture buffer.</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">.</span>overflow<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>                Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span>D_WARN_BUFFERFULL <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">,</span> kCaptureBufferSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>            <span class=\"token comment\">// Display the library version the message was captured with.</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>            Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>D_STR_LIBRARY <span class=\"token string\">\"   : v\"</span> _IRREMOTEESP8266_VERSION_STR <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>            <span class=\"token comment\">// Display the tolerance percentage if it has been change from the default.</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>kTolerancePercentage <span class=\"token operator\">!=</span> kTolerance<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>                Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span>D_STR_TOLERANCE <span class=\"token string\">\" : %d%%\\n\"</span><span class=\"token punctuation\">,</span> kTolerancePercentage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>            <span class=\"token comment\">// Display the basic output of what we found.</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>            Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">resultToHumanReadableBasic</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>            <span class=\"token comment\">// Display any extra A/C info if we have it.</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>            String description <span class=\"token operator\">=</span> <span class=\"token class-name\">IRAcUtils</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">resultAcToString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>description<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>D_STR_MESGDESC <span class=\"token string\">\": \"</span> <span class=\"token operator\">+</span> description<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>            <span class=\"token function\">yield</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Feed the WDT as the text output can take a while to print.</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\">LEGACY_TIMING_INFO</span></span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>            <span class=\"token comment\">// Output legacy RAW timing info of the result.</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">resultToTimingInfo</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        <span class=\"token function\">yield</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Feed the WDT (again)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span>  <span class=\"token comment\">// LEGACY_TIMING_INFO</span></span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>            <span class=\"token comment\">// Output the results as source code</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>            Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">resultToSourceCode</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>            Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// Blank line between entries</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>            <span class=\"token function\">yield</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>             <span class=\"token comment\">// Feed the WDT (again)</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "arduino",
                "esp32",
                "esp32-s3-devkitc",
                "platformio"
            ]
        },
        {
            "id": "https://www.taoidle.com/2022/07/10/%E8%85%BE%E8%AE%AF%E4%BA%91%E5%87%BD%E6%95%B0%E9%9A%8F%E6%9C%BA%E5%9B%BEapi%E5%AE%9E%E7%8E%B0/",
            "url": "https://www.taoidle.com/2022/07/10/%E8%85%BE%E8%AE%AF%E4%BA%91%E5%87%BD%E6%95%B0%E9%9A%8F%E6%9C%BA%E5%9B%BEapi%E5%AE%9E%E7%8E%B0/",
            "title": "腾讯云函数随机图api实现",
            "date_published": "2022-07-10T11:11:32.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>为了提高博客在国内的访问速度，于是决定做一个部署在国内的随机图 api。然后看了一下，又拍云可以白嫖免费的 cdn 和存储桶，leancloud 白嫖数据存储，腾讯云函数备案资源包 5 年一百多四舍五入不要钱，最终约等于白嫖麻了，舒服～</p>\n<p>注：虽然但是，leancloud 数据存储 api 每天只能请求 3 万次，对于我这种小博客来说，问题不大。</p>\n<h2 id=\"正文\"><a class=\"anchor\" href=\"#正文\">#</a> 正文</h2>\n<h3 id=\"思路\"><a class=\"anchor\" href=\"#思路\">#</a> 思路</h3>\n<p>简单来说，为了偷懒，和之前在 cloudflare worker 上的实现没区别，语言换成了 javasript，框架换成 express，数据存储换成 leancloud。</p>\n<p>至于为什么之前的项目用的是 typescript 而这个变成了 javascript，主要原因 leancloud 的包在 typescript 和 webpack 一起用的时候会出莫名其妙的问题（其实是 webpack 出问题），赶时间不想排查原因。</p>\n<h4 id=\"随机图接口\"><a class=\"anchor\" href=\"#随机图接口\">#</a> 随机图接口</h4>\n<p>leancloud 结构化数据中存储了一个 class 叫 Api_Data，class 中的 object 有 api_key 和 api_value 两个属性，其中有一个 api_key 属性值为 KV_INDEX 的 object 其属性 api_value 中存储了如下结构的数据，用于查找和索引：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"KV_INDEX\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"total_num\"</span><span class=\"token operator\">:</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"map_total\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"map_num\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token string\">\"MAP_1_NUM\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token string\">\"MAP_2_NUM\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token string\">\"MAP_3_NUM\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token property\">\"map_list\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token string\">\"MAP_KEY_1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token string\">\"MAP_KEY_2\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token string\">\"MAP_KEY_3\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>存储了若干个表，表如下</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"MAP_KEY_1\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"pic_1_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_1_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"pic_2_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_2_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"pic_3_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_3_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"pic_99_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_99_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">\"pic_100_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_100_path\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"MAP_KEY_2\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"pic_101_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_101_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"pic_102_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_102_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"pic_103_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_103_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"pic_199_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_199_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">\"pic_200_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_200_path\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"MAP_KEY_3\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"pic_201_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_201_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"pic_202_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_202_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"pic_203_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_203_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"pic_299_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_299_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">\"pic_300_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_300_path\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>于是每次随机一张图会产生两次 read 操作，一次从索引中拿到 map_key, 一次从 map 中取数据</p>\n<h4 id=\"数据更新接口\"><a class=\"anchor\" href=\"#数据更新接口\">#</a> 数据更新接口</h4>\n<p>接受数据如下</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"pic_1_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_1_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"pic_2_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_2_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"pic_3_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_3_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"pic_99_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_99_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"pic_100_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_100_path\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>更新数据时步骤如下</p>\n<ol>\n<li>\n<p>从 kv 中取索引，在从索引中获取到表中的 key</p>\n</li>\n<li>\n<p>判断更新数据的 key 在表中时候存在，不存在则将该项添加到待更新表</p>\n</li>\n<li>\n<p>全部待更新数据添加到待更新表后，更新索引数据，最后把所有更新的数据写入到 kv 中</p>\n</li>\n</ol>\n<h3 id=\"步骤\"><a class=\"anchor\" href=\"#步骤\">#</a> 步骤</h3>\n<ol>\n<li>\n<p>在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudXB5dW4uY29t\">又拍云</span> 创建存储桶，绑定自定义域名，把资源上传到又拍云的存储桶中。在<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudXB5dW4uY29tL2xlYWd1ZQ==\">又拍云联盟</span>加入开发者帮助计划，申请免费的云存储空间和 CDN 流量。</p>\n</li>\n<li>\n<p>在 leancloud 国内版创建一个应用。</p>\n</li>\n<li>\n<p>把 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1Rhb2lkbGUvUmFuZFBpY1NDRg==\">RandPiSCF</span> 部署到腾讯云函数。</p>\n<p>注意，需要配置一下环境变量 (在 leancloud 你创建的应用 -&gt; 设置 -&gt; 应用凭证)：</p>\n<ul>\n<li>\n<p>LEANCLOUD_APP_ID leancloud 中的 AppID</p>\n</li>\n<li>\n<p>LEANCLOUD_APP_KEY leancloud 中的 AppKey</p>\n</li>\n<li>\n<p>LEANCLOUD_APP_MASTER_KEY leancloud 中的 MasterKey</p>\n</li>\n<li>\n<p>LEANCLOUD_APP_SERVER_URL leancoud 中 REST API 服务器地址或者域名绑定中的 api 域名</p>\n</li>\n<li>\n<p>PAGE_ITEM 数据存储中的分表</p>\n</li>\n</ul>\n</li>\n<li>\n<p>随便写个脚本把图片信息丢上去完事 <span class=\"spoiler\" title=\"你知道得太多了\">本来这里是有个 rust 写的程序的，用于将图片转为 webp 然后把 hash 值和路径丢到 worker 和 scf 上，但是由于目前比较忙，有空再写</span></p>\n</li>\n</ol>\n<h2 id=\"结束语\"><a class=\"anchor\" href=\"#结束语\">#</a> 结束语</h2>\n<p>其实就是前文 <a href=\"https://www.taoidle.com/2022/05/24/%E4%BD%BF%E7%94%A8cloudflare%E5%92%8Cjsdelivr%E5%81%9A%E4%B8%80%E4%B8%AA%E9%9A%8F%E6%9C%BA%E5%9B%BEapi/\">使用 cloudflare 和 jsdelivr 做一个随机图 api</a> 的腾讯云函数偷懒实现版本，并没有对使用的资源做任何优化。后续有空优化一下，反正目前对我来说够用。</p>\n",
            "tags": [
                "nodejs",
                "cdn",
                "tencent cloud",
                "leancloud",
                "upyun",
                "scf",
                "javascript"
            ]
        },
        {
            "id": "https://www.taoidle.com/2022/06/23/use%20gpg&smart%20card/",
            "url": "https://www.taoidle.com/2022/06/23/use%20gpg&smart%20card/",
            "title": "use gpg&smart card",
            "date_published": "2022-06-23T13:17:40.000Z",
            "content_html": "<h2 id=\"import-key\"><a class=\"anchor\" href=\"#import-key\">#</a> Import Key</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gpg --import <span class=\"token operator\">&lt;</span>key_path<span class=\"token operator\">></span></pre></td></tr></table></figure><p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/gpg_import(1).png\" alt=\"\" /></p>\n<h2 id=\"list-keys\"><a class=\"anchor\" href=\"#list-keys\">#</a> List Keys</h2>\n<h3 id=\"list-keys-2\"><a class=\"anchor\" href=\"#list-keys-2\">#</a> list keys</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gpg -k</pre></td></tr></table></figure><h3 id=\"list-secret-keys\"><a class=\"anchor\" href=\"#list-secret-keys\">#</a> list secret keys</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gpg -K</pre></td></tr></table></figure><p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/gpg_import(2).png\" alt=\"\" /></p>\n<h2 id=\"change-the-ownertrust\"><a class=\"anchor\" href=\"#change-the-ownertrust\">#</a> Change The Ownertrust</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gpg --edit-key <span class=\"token operator\">&lt;</span>id<span class=\"token operator\">></span></pre></td></tr></table></figure><figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gpg<span class=\"token operator\">></span> trust</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>y</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>gpg<span class=\"token operator\">></span> quit</pre></td></tr></table></figure><p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/gpg_import(3).png\" alt=\"\" /></p>\n<h2 id=\"import-to-smart-card\"><a class=\"anchor\" href=\"#import-to-smart-card\">#</a> Import To Smart Card</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gpg --expert --edit-key <span class=\"token operator\">&lt;</span>id<span class=\"token operator\">></span></pre></td></tr></table></figure><h3 id=\"select-key-1-and-import-to-card\"><a class=\"anchor\" href=\"#select-key-1-and-import-to-card\">#</a> Select key 1 and import to card</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gpg<span class=\"token operator\">></span> key <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>gpg<span class=\"token operator\">></span> keytocard</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">2</span></pre></td></tr></table></figure><p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/gpg_key2card(1).png\" alt=\"\" /></p>\n<h3 id=\"unselect-key-1select-key-2-and-import-to-card\"><a class=\"anchor\" href=\"#unselect-key-1select-key-2-and-import-to-card\">#</a> Unselect key 1,Select key 2 and import to card</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gpg<span class=\"token operator\">></span> key <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>gpg<span class=\"token operator\">></span> key <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>gpg<span class=\"token operator\">></span> keytocard</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">1</span></pre></td></tr></table></figure><p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/gpg_key2card(2).png\" alt=\"\" /></p>\n<h3 id=\"unselect-key-2select-key-3-and-import-to-card\"><a class=\"anchor\" href=\"#unselect-key-2select-key-3-and-import-to-card\">#</a> Unselect key 2,Select key 3 and import to card</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gpg<span class=\"token operator\">></span> key <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>gpg<span class=\"token operator\">></span> key <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>gpg<span class=\"token operator\">></span> keytocard</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>gpg<span class=\"token operator\">></span> quit</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>y</pre></td></tr></table></figure><p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/gpg_key2card(3).png\" alt=\"\" /></p>\n<h2 id=\"print-card-status\"><a class=\"anchor\" href=\"#print-card-status\">#</a> Print Card Status</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gpg --card-status</pre></td></tr></table></figure><p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/gpg_card_status.png\" alt=\"\" /></p>\n<h2 id=\"bind-smart-card\"><a class=\"anchor\" href=\"#bind-smart-card\">#</a> Bind Smart Card</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gpg-connect-agent <span class=\"token string\">\"scd serialno\"</span> <span class=\"token string\">\"learn --force\"</span> /bye</pre></td></tr></table></figure>",
            "tags": [
                "yubikey",
                "canokeys",
                "gpg"
            ]
        },
        {
            "id": "https://www.taoidle.com/2022/05/24/%E4%BD%BF%E7%94%A8cloudflare%E5%92%8Cjsdelivr%E5%81%9A%E4%B8%80%E4%B8%AA%E9%9A%8F%E6%9C%BA%E5%9B%BEapi/",
            "url": "https://www.taoidle.com/2022/05/24/%E4%BD%BF%E7%94%A8cloudflare%E5%92%8Cjsdelivr%E5%81%9A%E4%B8%80%E4%B8%AA%E9%9A%8F%E6%9C%BA%E5%9B%BEapi/",
            "title": "使用cloudflare和jsdelivr做一个随机图api",
            "date_published": "2022-05-24T08:34:24.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>博客最近进行迁移，原本使用 wordpress，现迁移至 hexo。从原来的腾讯云轻量应用服务器迁移到 cloudflare page。既然如此，那原本部署在腾讯云上使用 python 搭建的随即图 api 也没必要存在了。做随机图 api 的初衷只是因为想要自己喜欢的图。</p>\n<p>注：博主的图片只有不到 30 张，小样本使用，数量较少。</p>\n<h2 id=\"正文\"><a class=\"anchor\" href=\"#正文\">#</a> 正文</h2>\n<h3 id=\"思路\"><a class=\"anchor\" href=\"#思路\">#</a> 思路</h3>\n<p><s>比较简单，cloudflare kv 有 1G 空间，把 hash 和图片对应的路径存进 kv 里，然后 worker 从 kv 里随机取一个出来跳转到 jsdelivr 就行了</s></p>\n<h4 id=\"随机图接口\"><a class=\"anchor\" href=\"#随机图接口\">#</a> 随机图接口</h4>\n<p>由于 cloudflare kv 的免费额度限制，write、delete、list 每天只有 1000 次，而 read 有 10 万次， 所以尽可能将 kv 操作使用 read 来实现。</p>\n<p>kv 中存储了一个 index 数据，用来查找数据，如下：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"KV_INDEX\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"total_num\"</span><span class=\"token operator\">:</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"map_total\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"map_num\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token string\">\"MAP_1_NUM\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token string\">\"MAP_2_NUM\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token string\">\"MAP_3_NUM\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token property\">\"map_list\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token string\">\"MAP_KEY_1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token string\">\"MAP_KEY_2\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token string\">\"MAP_KEY_3\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>存储了若干个表，表如下</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"MAP_KEY_1\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"pic_1_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_1_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"pic_2_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_2_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"pic_3_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_3_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"pic_99_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_99_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">\"pic_100_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_100_path\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"MAP_KEY_2\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"pic_101_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_101_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"pic_102_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_102_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"pic_103_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_103_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"pic_199_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_199_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">\"pic_200_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_200_path\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"MAP_KEY_3\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"pic_201_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_201_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"pic_202_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_202_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"pic_203_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_203_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"pic_299_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_299_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">\"pic_300_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_300_path\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>于是每次随机一张图会产生两次 read 操作，一次从索引中拿到 map_key, 一次从 map 中取数据</p>\n<h4 id=\"数据更新接口\"><a class=\"anchor\" href=\"#数据更新接口\">#</a> 数据更新接口</h4>\n<p>接受数据如下</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"pic_1_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_1_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"pic_2_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_2_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"pic_3_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_3_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"pic_99_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_99_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"pic_100_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_100_path\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>更新数据时步骤如下</p>\n<ol>\n<li>\n<p>从 kv 中取索引，在从索引中获取到表中的 key</p>\n</li>\n<li>\n<p>判断更新数据的 key 在表中时候存在，不存在则将该项添加到待更新表</p>\n</li>\n<li>\n<p>全部待更新数据添加到待更新表后，更新索引数据，最后把所有更新的数据写入到 kv 中</p>\n</li>\n</ol>\n<h3 id=\"资源消耗\"><a class=\"anchor\" href=\"#资源消耗\">#</a> 资源消耗</h3>\n<h4 id=\"随机图接口-2\"><a class=\"anchor\" href=\"#随机图接口-2\">#</a> 随机图接口</h4>\n<p>于是每次随机一张图会产生两次 read 操作，一次从索引中拿到 map_key, 一次从 map 中取数据，以每天 cloudflare kv 每天 10 万次免费的 read，一天可以请求随机图接口 5 万次</p>\n<h4 id=\"数据更新接口-2\"><a class=\"anchor\" href=\"#数据更新接口-2\">#</a> 数据更新接口</h4>\n<p>假设 kv 中每个表存储 1000 条数据，kv 中已有一个表存储 100 条数据，更新的数据有 2000 条，更新时会读取索引值一次，读取已存在的所有表（这里为一次），更新的信息为 已经存在的表 1 增加了 900 条数据，创建表 2 及表 2 1000 条数据，创建表 3 及表 3 100 条数据，索引值更新。此时会对 kv 做 4 次写入，总共是 2 次读取，4 次写入。</p>\n<h3 id=\"步骤\"><a class=\"anchor\" href=\"#步骤\">#</a> 步骤</h3>\n<ol>\n<li>\n<p>在 github 上创建一个空仓库用于存放图片，然后将自己喜欢的图片提交到该仓库即可，然后就可以在 jsdelivr 上取到该仓库的文件</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>https://cdn.assets.taoidle.com/gh/github用户名/仓库名@分支</pre></td></tr></table></figure></li>\n<li>\n<p>克隆 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1Rhb2lkbGUvUmFuZFBpY1dvcmtlcg==\">RandPicWorker</span> 这个项目，在项目根目录下执行 yarn 打好依赖。然后使用以下命令登录 cloudflare</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">yarn</span> run wrangler login</pre></td></tr></table></figure></li>\n<li>\n<p>在 cloudflare 上创建一个 kv namespace</p>\n</li>\n<li>\n<p>填写项目里 wrangler.toml 文件缺少的信息</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/Snipaste_2022-05-25_22-30-06.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>执行 package.json scripts 里的 publish 命令</p>\n</li>\n<li>\n<p>随便写个脚本把图片信息丢上去完事 <span class=\"spoiler\" title=\"你知道得太多了\">本来这里是有个 rust 写的程序的，用于将图片转为 webp 然后把 hash 值和路径丢到 worker 上，但是由于目前比较忙，有空再写</span></p>\n</li>\n</ol>\n<h2 id=\"结束语\"><a class=\"anchor\" href=\"#结束语\">#</a> 结束语</h2>\n<p>代码过于简单没啥好说的，好久没写博客了上来水一篇</p>\n<hr />\n<p>端午假期稍微更新了一下</p>\n",
            "tags": [
                "nodejs",
                "cloudflare",
                "cloudflare worker",
                "github",
                "cdn",
                "typescript"
            ]
        },
        {
            "id": "https://www.taoidle.com/2022/04/09/Raspberry%20Pi4b%E7%A7%81%E6%9C%89%E9%83%A8%E7%BD%B2Bitwarden/",
            "url": "https://www.taoidle.com/2022/04/09/Raspberry%20Pi4b%E7%A7%81%E6%9C%89%E9%83%A8%E7%BD%B2Bitwarden/",
            "title": "Raspberry Pi4b私有部署Bitwarden",
            "date_published": "2022-04-09T09:10:15.000Z",
            "content_html": "<h2 id=\"准备\"><a class=\"anchor\" href=\"#准备\">#</a> 准备</h2>\n<ul>\n<li>烧写好系统镜像的 Raspberry Pi4b</li>\n<li>良好的网络环境</li>\n</ul>\n<h2 id=\"开始\"><a class=\"anchor\" href=\"#开始\">#</a> 开始</h2>\n<ul>\n<li>本文使用 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2RhbmktZ2FyY2lhL3ZhdWx0d2FyZGVu\">bitwordken_rs</span></li>\n<li>使用 Docker（树莓派上使用 docker 参考 <a href=\"https://www.taoidle.com/raspberry-pi4b%e5%ae%89%e8%a3%85docker.html\" title=\"Raspberry Pi4b安装Docker\">Raspberry Pi4b 安装 Docker</a>）</li>\n</ul>\n<hr />\n<h3 id=\"下载运行docker镜像\"><a class=\"anchor\" href=\"#下载运行docker镜像\">#</a> 下载运行 docker 镜像</h3>\n<p><strong>1. 使用 Docker 拉取最新版本的 Bitwarden RS</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> pull vaultwarden/server:latest</pre></td></tr></table></figure><p><strong>2. 运行 Bitwarden 镜像</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">docker</span> run -d --name bitwarden  --restart<span class=\"token operator\">=</span>always <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    -v /bw-data/:/data/ -p <span class=\"token number\">127.0</span>.0.1:8080:80 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    -p <span class=\"token number\">127.0</span>.0.1:3012:3012 vaultwarden/server:latest</pre></td></tr></table></figure><p>这里将网络服务器暴露在端口 8080 上，端口 3012，这是 Bitwarden 的 Web 套接字用来进行通信的端口。</p>\n<hr />\n<h3 id=\"配置nginx\"><a class=\"anchor\" href=\"#配置nginx\">#</a> 配置 NGINX</h3>\n<p><strong>1. 下载 nginx</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> nginx</pre></td></tr></table></figure><p><strong>2. 停止运行 nginx</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> systemctl stop nginx</pre></td></tr></table></figure><p><strong>3. 为 nginx 生成一个 SSL 证书，在 Raspberry Pi 上生成证书有两种不同的方式</strong></p>\n<ul>\n<li>自签证书</li>\n<li>Lets Encrypt 等</li>\n</ul>\n<p><strong>4. 使用以下命令生成自签名证书</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> openssl req -x509 -nodes -days <span class=\"token number\">365</span> -newkey rsa:4096 -keyout /etc/ssl/private/nginx-bitwarden.key -out /etc/ssl/certs/nginx-bitwarden.crt</pre></td></tr></table></figure><p><strong>5. 创建一个 Diffie-Hellman</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> openssl dhparam -out /etc/ssl/certs/dhparam.pem <span class=\"token number\">2048</span></pre></td></tr></table></figure><p><strong>6. 查看 NGINX 的默认配置文件</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> /etc/nginx/nginx.conf</pre></td></tr></table></figure><p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/1649492956-image-1649492954071.png\" alt=\"file\" /></p>\n<p><strong>7. 为 NGINX 创建一个新的配置文件</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> /etc/nginx/conf.d/bitwarden.conf</pre></td></tr></table></figure><p><strong>8. 编写配置</strong></p>\n<pre><code>server &#123;\n    listen 80;\n    listen [::]:80;\n    server_name localhost;\n    return 301 https://$host$request_uri;\n&#125;\n\nserver &#123;\n  listen 443 ssl http2;\n  server_name localhost;\n\n  ssl_certificate      /etc/ssl/certs/nginx-bitwarden.crt;\n  ssl_certificate_key  /etc/ssl/private/nginx-bitwarden.key;\n\n  ssl_dhparam /etc/ssl/certs/dhparam.pem;\n\n  client_max_body_size 128M;\n\n  location / &#123;\n    proxy_pass http://0.0.0.0:8080;\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $scheme;\n  &#125;\n\n  location /notifications/hub &#123;\n    proxy_pass http://0.0.0.0:3012;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection &quot;upgrade&quot;;\n  &#125;\n\n  location /notifications/hub/negotiate &#123;\n    proxy_pass http://0.0.0.0:8080;\n  &#125;\n&#125;\n</code></pre>\n<p><strong>9. 保存退出重启 NGINX</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> systemctl restart nginx</pre></td></tr></table></figure><hr />\n<h3 id=\"创建-bitwarden-账户\"><a class=\"anchor\" href=\"#创建-bitwarden-账户\">#</a> 创建 Bitwarden 账户</h3>\n<pre><code>https://你的树莓派ip\n</code></pre>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/1649494073-image-1649494070786.png\" alt=\"file\" /></p>\n<h3 id=\"启用-bitwarden-管理面板\"><a class=\"anchor\" href=\"#启用-bitwarden-管理面板\">#</a> 启用 Bitwarden 管理面板</h3>\n<p><strong>1. 生成管理员令牌</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>openssl rand -base64 <span class=\"token number\">48</span></pre></td></tr></table></figure><p><strong>2. 停止当前正在运行的容器</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">docker</span> stop bitwarden</pre></td></tr></table></figure><p><strong>3. 删除现有的 Bitwarden 容器</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">docker</span> <span class=\"token function\">rm</span> bitwarden</pre></td></tr></table></figure><p><strong>4. 需要重新运行 docker 命令</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">docker</span> run -d --name bitwarden  -e <span class=\"token assign-left variable\">ADMIN_TOKEN</span><span class=\"token operator\">=</span>你的管理员令牌 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    --restart<span class=\"token operator\">=</span>always -v /bw-data/:/data/ <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    -p <span class=\"token number\">127.0</span>.0.1:8080:80 -p <span class=\"token number\">127.0</span>.0.1:3012:3012 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    vaultwarden/server:latest</pre></td></tr></table></figure><h3 id=\"访问-bitwarden-管理面板\"><a class=\"anchor\" href=\"#访问-bitwarden-管理面板\">#</a> 访问 Bitwarden 管理面板</h3>\n<p><strong>1. 访问管理面板</strong></p>\n<pre><code>https://你的树莓派ip/admin\n</code></pre>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/1649495073-image-1649495070774.png\" alt=\"file\" /> 输入你的管理员令牌</p>\n<p><strong>2. 管理您的用户以及配置 Bitwarden 的设置</strong></p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/1649495182-image-1649495179498.png\" alt=\"file\" /></p>\n<h3 id=\"禁用-bitwarden-新用户创建\"><a class=\"anchor\" href=\"#禁用-bitwarden-新用户创建\">#</a> 禁用 Bitwarden 新用户创建</h3>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/1649495329-image-1649495327106.png\" alt=\"file\" /></p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/1649495363-image-1649495361101.png\" alt=\"file\" /></p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/1649495397-image-1649495394882.png\" alt=\"file\" /></p>\n",
            "tags": [
                "Docker",
                "Raspberry Pi4b",
                "树莓派",
                "Bitwarden",
                "树莓派4b"
            ]
        },
        {
            "id": "https://www.taoidle.com/2022/04/09/Raspberry%20Pi4b%E5%AE%89%E8%A3%85Docker/",
            "url": "https://www.taoidle.com/2022/04/09/Raspberry%20Pi4b%E5%AE%89%E8%A3%85Docker/",
            "title": "Raspberry Pi4b安装Docker",
            "date_published": "2022-04-09T07:22:46.000Z",
            "content_html": "<ol>\n<li>\n<p>更新软件包</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> upgrade</pre></td></tr></table></figure></li>\n<li>\n<p>通过运行以下命令下载并运行官方 Docker 设置脚本</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> -sSL https://get.docker.com  <span class=\"token function\">sh</span></pre></td></tr></table></figure></li>\n<li>\n<p>将 pi 用户添加到 docker 组中</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">usermod</span> -aG <span class=\"token function\">docker</span> pi</pre></td></tr></table></figure></li>\n</ol>\n",
            "tags": [
                "Docker",
                "Raspberry Pi",
                "Raspberry Pi4b",
                "树莓派"
            ]
        },
        {
            "id": "https://www.taoidle.com/2021/06/10/CLion+PlatformIO%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%BC%80%E5%8F%91NodeMcu/",
            "url": "https://www.taoidle.com/2021/06/10/CLion+PlatformIO%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%BC%80%E5%8F%91NodeMcu/",
            "title": "CLion+PlatformIO环境搭建开发NodeMcu",
            "date_published": "2021-06-09T19:46:56.000Z",
            "content_html": "<h3 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h3>\n<p>JB 家的东西实在是太好用了，丝毫不是因为我大半年没更新想水博客</p>\n<h3 id=\"准备环境\"><a class=\"anchor\" href=\"#准备环境\">#</a> 准备环境</h3>\n<ul>\n<li>Python3</li>\n<li>CLion</li>\n</ul>\n<h3 id=\"准备材料\"><a class=\"anchor\" href=\"#准备材料\">#</a> 准备材料</h3>\n<ul>\n<li>NodeMcu</li>\n<li>7 针 0.96 寸 OLED</li>\n<li>杜邦线若干</li>\n</ul>\n<h3 id=\"正文\"><a class=\"anchor\" href=\"#正文\">#</a> 正文</h3>\n<p>1. 在 Clion Plugins 里搜索安装 PlatformIO for CLion，安装完成后重启 CLion</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/1623260501-image-1623260500170.png\" alt=\"\" /></p>\n<p>2. 安装 PlatformIO Core (CLI)</p>\n<ul>\n<li>Windows\n<ol>\n<li>下载 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3BsYXRmb3JtaW8vcGxhdGZvcm1pby1jb3JlLWluc3RhbGxlci9tYXN0ZXIvZ2V0LXBsYXRmb3JtaW8ucHk=\">get-platformio.py</span></li>\n</ol>\n</li>\n</ul>\n<ol start=\"2\">\n<li>\n<p>打开 powershell</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> C:<span class=\"token punctuation\">\\</span>path<span class=\"token punctuation\">\\</span>to<span class=\"token punctuation\">\\</span>dir<span class=\"token punctuation\">\\</span>where<span class=\"token punctuation\">\\</span>is<span class=\"token punctuation\">\\</span>located<span class=\"token punctuation\">\\</span>script<span class=\"token punctuation\">\\</span>get-platformio.py <span class=\"token comment\"># get-platformio.py 下载目录</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>python.exe get-platformio.py <span class=\"token comment\"># 运行脚本</span></pre></td></tr></table></figure></li>\n</ol>\n<ul>\n<li>\n<p>Linux/MacOS</p>\n<ol>\n<li>打开 terminal，下面命令三选一</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>python3 -c <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">curl</span> -fsSL https://raw.githubusercontent.com/platformio/platformio/master/scripts/get-platformio.py<span class=\"token variable\">)</span></span>\"</span></pre></td></tr></table></figure><figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> -fsSL https://raw.githubusercontent.com/platformio/platformio-core-installer/master/get-platformio.py -o get-platformio.py</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>python3 get-platformio.py</pre></td></tr></table></figure><figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">wget</span> https://raw.githubusercontent.com/platformio/platformio-core-installer/master/get-platformio.py -O get-platformio.py</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>python3 get-platformio.py</pre></td></tr></table></figure></li>\n</ul>\n<p>3.CLion 创建 PlatformIO NodeMcu 项目</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/1623263906-image-1623263905423.png\" alt=\"file\" /></p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/1623264001-image-1623263999430.png\" alt=\"file\" /></p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/1623264411-image-1623264410352.png\" alt=\"file\" /></p>\n<p>到此项目创建完成</p>\n<p>4. 配置 NodeMCU 项目</p>\n<ul>\n<li>\n<p>修改 CMakeLists.txt，将 main.cpp 添加到项目</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/1623264624-image-1623264622615.png\" alt=\"file\" /></p>\n</li>\n<li>\n<p>引入第三方库，如 U8g2</p>\n<p>在<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wbGF0Zm9ybWlvLm9yZy9saWI=\"> platformio lib</span> 中搜索 U8g2 可以看到有两种安装方法</p>\n<ol>\n<li>在 CLion 中打开 terminal，输入 pio lib install &quot;olikraus/U8g2&quot;</li>\n<li>编辑 platformio.ini 文件，在末尾中加入下面配置，编译时自动安装</li>\n</ol>\n<pre><code>lib_deps = olikraus/U8g2 @ ^2.28.8\n</code></pre>\n</li>\n<li>\n<p>修改 CMakeLists.txt，将 U8g2 库添加到项目中</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/1623266913-image-1623266912048.png\" alt=\"file\" /></p>\n</li>\n<li>\n<p>修改项目编译配置</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/1623267020-image-1623267019679.png\" alt=\"file\" /></p>\n<p>把 build 删除</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/1623267165-image-1623267164884.png\" alt=\"file\" /></p>\n</li>\n<li>\n<p>修改串口监视器</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/1623267367-image-1623267366364.png\" alt=\"file\" /></p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/1623267453-image-1623267452000.png\" alt=\"file\" /></p>\n</li>\n</ul>\n<p>5. 编写代码并编译上传到 NodeMCU</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/1623267695-image-1623267693765.png\" alt=\"file\" /></p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/1623267853-image-1623267850897.png\" alt=\"file\" /></p>\n",
            "tags": [
                "arduino",
                "CLion",
                "esp8266",
                "nodemcu",
                "PlatformIO"
            ]
        },
        {
            "id": "https://www.taoidle.com/2021/05/03/%E5%A1%AB%E5%9D%91%20%E2%80%94%20%E7%BB%8F%E6%B5%8E%E5%AD%A6%E5%8E%9F%E7%90%86/",
            "url": "https://www.taoidle.com/2021/05/03/%E5%A1%AB%E5%9D%91%20%E2%80%94%20%E7%BB%8F%E6%B5%8E%E5%AD%A6%E5%8E%9F%E7%90%86/",
            "title": "填坑 — 经济学原理",
            "date_published": "2021-05-03T02:56:11.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>为啥学这个呢？毕竟我觉得量化交易这个东西有点意思，编程没问题，数学没问题，缺的就是金融经济的知识了，那就从最基础的东西学起。</p>\n<p>下面内容是曼昆的经济学原理两本笔记。</p>\n<h2 id=\"经济学的领域\"><a class=\"anchor\" href=\"#经济学的领域\">#</a> 经济学的领域</h2>\n<ul>\n<li>微观经济学 Micro</li>\n<li>宏观经济学 Macro</li>\n<li>计量经济学 Econometrics</li>\n<li>金融学 Finance</li>\n<li>产业组织 Industrial Organization</li>\n<li>劳动经济学 Labor</li>\n<li>公共财政 Public Finance</li>\n<li>国际经济学 International</li>\n<li>发展经济学 Development</li>\n<li>比较经济学 Comparative</li>\n<li>法律和经济学  Law and Economics</li>\n<li>政治经济学 Political Economy</li>\n<li>经济史 Economic History</li>\n</ul>\n<h2 id=\"经济学的三类问题\"><a class=\"anchor\" href=\"#经济学的三类问题\">#</a> 经济学的三类问题</h2>\n<ul>\n<li>人们如何做出决策\n<ul>\n<li>权衡取舍（tradeoffs）：人们面临得失交换</li>\n<li>成本（cost）：某物的成本是为此所放弃的东西\n<ul>\n<li>机会成本（opportunity cost）</li>\n</ul>\n</li>\n<li>边际量（margin）：理性人思考边际量\n<ul>\n<li>边际变动（marginal change）：现有行动计划的微小增量调整</li>\n<li>比较边际收益（marginal benefit）和边际成本（marginal cost）做决策</li>\n</ul>\n</li>\n<li>激励措施（incentives）：人们会对激励作出反应</li>\n</ul>\n</li>\n<li>人们如何相互作用\n<ul>\n<li>贸易（trade）：贸易能使人人收益</li>\n<li>市场（markets）：市场通常是组织经济活动的好方式\n<ul>\n<li>市场经济（market economy）</li>\n<li>看不见的手（invisible hand）：价格，反映了社会成本</li>\n</ul>\n</li>\n<li>政府（governments）：政府有事可以改进市场结果\n<ul>\n<li>市场失灵（Market failure）：外部性（externality）、市场势力（market power）</li>\n<li>公平</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>整体经济如何运行（宏观经济学）\n<ul>\n<li>生产（production）：一国的生活水平取决于它的生产\n<ul>\n<li>生活水平（Standard of living）</li>\n<li>生产率（productivities）</li>\n<li>高生产率 -&gt; 高生产水平</li>\n</ul>\n</li>\n<li>货币（maney）：当政府发行了过多的货币时，物价上涨</li>\n<li>通胀 &amp; 失业（inflation&amp;unemployment）：社会面临通货膨胀和失业质检的短期得失交换\n<ul>\n<li>菲利普斯曲线（Phillips Curve）：通货膨胀和失业之间的得失交换</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>微观经济学：研究个别的家庭和企业如何做出决策，以及它们如何在市场上相互作用。</p>\n<p>宏观经济学：研究作为一个整体的经济，目标在于解释同时影响许多家庭、企业和市场的经济变化</p>\n<hr />\n<p>科学的研究方法： 观察，理论，进一步观察（Observation, Theory, and More Observation）</p>\n<p>理论分析：解释现实经济的运作</p>\n<p>经验分析：用数据检验理论</p>\n<p>假设的作用：</p>\n<ul>\n<li>便于理解</li>\n<li>集中思考问题的实质</li>\n<li>作出不同的假设用来回答不同的问题</li>\n</ul>\n<p>生产可能性边界说明的概念：</p>\n<ul>\n<li>效率 Efficiency</li>\n<li>得失交换 Tradeoffs</li>\n<li>机会成本 Opportunity Cost</li>\n<li>技术进步导致经济增长 Economic Growth</li>\n</ul>\n<p>对数据的经验（实证）分析：圆形图、柱形图、时间序列图</p>\n<p>微观经济学：研究家庭和企业如何做出决策，以及它们如何在特定市场上相互交易。</p>\n<p>宏观经济学：研究整体经济现象，包括通货膨胀，失业和经济增长</p>\n<p>坐标系中的双变量：</p>\n<ul>\n<li>理论预测变量之间的关系</li>\n<li>从数据中检验变量间的关系\n<ul>\n<li>相关性</li>\n<li>因果关系\n<ul>\n<li>被忽略的变量</li>\n<li>反向因果关系</li>\n<li>人的预期的影响</li>\n</ul>\n</li>\n<li>时间先后与因果关系</li>\n</ul>\n</li>\n</ul>\n<p>内生变量 -&gt; 结果 -&gt; 方程的解</p>\n<p>外生变量 -&gt; 原因 -&gt; 自变量 -&gt; 方程的参数</p>\n<p>外生变量与内生变量的划分依据经济模型的不同而不同。</p>\n<p>在研究现实问题时，选用正确的经济模型对于理解经济变量之间的因果关系至关重要。</p>\n<p>因果关系中的问题：</p>\n<ul>\n<li>被忽略的变量（Omitted Variables）</li>\n<li>反向因果关系（Reverse Causality）</li>\n</ul>\n<p>经济分析方法（考虑个人行为时）：稀缺性（scarcity）-&gt; 机会成本（opportunity）-&gt; 得失交换（tradeoff）</p>\n<p>一个变量对另一个变量的反应有多大，用斜率表示 （Y 坐标变量与 X 坐标变量的比值）越陡则越大，斜率小（接近 0 意味需求曲线较为平坦，价格变动，需求量会大幅调整，而斜率大，距 0 较远，则陡，价格变动，需求调整小，斜向右上方是正数，正相关，反之负数，负相关。考虑一个变量时，是否令其他相关变量保持不变，如果答案是否定的，这个结论就值得怀疑。</p>\n<p>实证表述</p>\n<ul>\n<li>试图描述世界是什么样子的观点</li>\n<li>可以通过检验证据判断其正确性</li>\n</ul>\n<p>规范表述</p>\n<ul>\n<li>试图描述世界应该是什么样子的观点</li>\n<li>对其判断既涉及证据，也涉及价值观</li>\n</ul>\n<p>经济学家意见分歧的原因：</p>\n<ul>\n<li>科学判断的不同</li>\n<li>价值观的不同</li>\n<li>感觉与现实</li>\n</ul>\n<hr />\n<h2 id=\"经济的相互依存性和贸易的好处\"><a class=\"anchor\" href=\"#经济的相互依存性和贸易的好处\">#</a> 经济的相互依存性和贸易的好处</h2>\n<p>绝对优势：生产者投入较少，可以说他有绝对优势</p>\n<p>机会成本：为得到某东西必须放弃的东西</p>\n<p>比较优势：一个生产者以低于另一个生产者的机会成本生产一种物品的行为。</p>\n<p>相互依存性为什么是常态？</p>\n<pre><code>相互依存性的发生是因为当人们进行专业化分工并同别人进行交易时，他们的处境变好了。\n</code></pre>\n<p>什么决定了生产和贸易的模式？</p>\n<pre><code>生产和贸易的模式是基于机会成本的差异。\n</code></pre>\n<p>尽管一个人可能在两种物品的生产上都有绝对优势，但不可能在两种物品上都有比较优势，因为一种物品的机会成本是另一种机会成本的倒数，除非两人有相同机会成本，否则两人都会在某一物品上有比较优势，</p>\n<p>比较优势与贸易:</p>\n<ul>\n<li>专业化和贸易的好处来源于比较优势</li>\n<li>经济总产量增加</li>\n<li>经济蛋糕做大，每个人从贸易中获益</li>\n<li>贸易可以使每个人获益，因为它使人们可以专门从事他们具有比较优势的活动</li>\n</ul>\n<p>专业化和贸易好处基于比较优势，每个人专门生产自己有比较优势的物品时，经济总产量就增加了，蛋糕就变大了，即效率增加，贸易能使每个人获益。</p>\n<p>小结：</p>\n<ul>\n<li>经济的相互依赖性和贸易允许人们享受更多数量、更多种类的商品和服务。</li>\n<li>生产一种商品，要素投入较少的生产商具有 “绝对优势”。</li>\n<li>生产一种商品，机会成本较小的生产商具有 “比较优势”。</li>\n<li>从贸易中获益是来自于比较优势，而非绝对优势。</li>\n<li>比较优势既适用于国家又适用于个人。</li>\n</ul>\n<p>贸易中获益的双方而言，他们进行贸易的价格在两种机会成本之间</p>\n<h2 id=\"供给与需求的市场力量\"><a class=\"anchor\" href=\"#供给与需求的市场力量\">#</a> 供给与需求的市场力量</h2>\n<p>市场：由某种物品或劳务的买者与卖者组成的一个群体。</p>\n<ul>\n<li>竞争市场：每个人对市场价格的影响都微乎其微的市场。</li>\n<li>垄断（Monopoly）：只有一个卖者，它控制价格</li>\n<li>寡头（Oligopoly）：少数几个卖者</li>\n</ul>\n<p>需求量：买者愿意并且能够购买该物品的数量。</p>\n<p>决定需求量的因素：</p>\n<ul>\n<li>市场价格 Market price</li>\n<li>消费者收入 Consumer income</li>\n<li>相关商品的价格 Prices of related goods</li>\n<li>嗜好 Tastes</li>\n<li>预期 Expectations</li>\n</ul>\n<p>需求表：商品价格与需求量之间的关系</p>\n<p>需求曲线：物品价格与需求量之间关系图形。</p>\n<p>市场需求：所以个人对某种特定物品或劳务的需求总和。</p>\n<p>供给量：卖者愿意并且能够出售的该物品的数量</p>\n<p>决定供给量的因素：</p>\n<ul>\n<li>市场价格 Market price</li>\n<li>投入品价格 Input prices</li>\n<li>技术 Technology</li>\n<li>预期 Expectations</li>\n<li>生产商的数量 Number of producers</li>\n</ul>\n<p>均衡价格：使供给与需求平衡的价格  均衡数量：均衡价格下的供给和需求数。</p>\n<p>在均衡价格时，供给等于需求，过剩，价格会下降，直至到达均衡，短缺，价格上升，直至达到均衡。</p>\n<p>供求定律：任何一种物品价格的调整都会使该物品的供给和需求达到平衡</p>\n<p>均衡价格（Equilibrium Price）/ 市场出清价格：使得供给和需求平衡的价格<br />\n均衡数量（Equilibrium Quantity）：使得供给和需求平衡的数量。</p>\n<p>价格 &gt; 均衡价格:</p>\n<pre><code>超额供给/过剩：供给量超出需求量\n</code></pre>\n<p>价格 &lt; 均衡价格:</p>\n<pre><code>超额需求/短缺：需求量超出供给量\n</code></pre>\n<p>供给表显示了商品价格与供给量的关系。</p>\n<p>供给曲线：商品价格与供给量之间关系图形。</p>\n<p>供给变动：供给曲线移动</p>\n<p>供给量变动：沿一固定供给曲线移动</p>\n<p>需求变动：需求曲线移动</p>\n<p>需求量变动：沿一固定需求曲线移动</p>\n<h2 id=\"弹性及其应用\"><a class=\"anchor\" href=\"#弹性及其应用\">#</a> 弹性及其应用</h2>\n<p>弹性：衡量需求量或供给量对其某种决定因素的变动的反应程度的指标</p>\n<p>需求价格弹性：一种物品的需求量对价格变动反应很大，就说明该物品需求富有弹性，反之则缺乏弹性</p>\n<p>狭窄定义的市场的需求弹性往往大于宽泛定义的市场的需求弹性</p>\n<p>需求价格弹性的计算:</p>\n<ol>\n<li>\n<p>需求价格弹性 = 需求量变动百分比 / 价格变动百分比</p>\n</li>\n<li>\n<p>总点法</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/%E7%BB%8F%E6%B5%8E%E5%AD%A6%E5%8E%9F%E7%90%86_%E4%B8%AD%E7%82%B9%E6%B3%95.png\" alt=\"\" /></p>\n</li>\n</ol>\n<p>供给弹性 = 1 / 供给曲线斜率</p>\n<p>弹性的范围:</p>\n<ul>\n<li>完全无弹性 Perfectly Inelastic ES = 0</li>\n<li>较缺乏弹性 Relatively Inelastic ES = 0</li>\n<li>完全（有）弹性 Perfectly Elastic ES = ∞</li>\n<li>较富于弹性 Relatively Elastic ES &gt; 1</li>\n<li>单位弹性 Unit Elastic ES = 1</li>\n</ul>\n<h2 id=\"市场和政府政策\"><a class=\"anchor\" href=\"#市场和政府政策\">#</a> 市场和政府政策</h2>\n<p>两种价格控制：</p>\n<ul>\n<li>价格上限：法定最高价格\n<ul>\n<li>价格上限 &gt; 均衡价格：价格上限没有限制性</li>\n<li>价格上限 &lt; 均衡价格：价格上限有限制性，导致短缺</li>\n</ul>\n</li>\n<li>价格下限：法定最低价格\n<ul>\n<li>价格下限 &gt; 均衡价格：价格下限有限制性，导致过剩</li>\n<li>价格下限 &lt; 均衡价格：价格下限没有限制性</li>\n</ul>\n</li>\n</ul>\n<p>有限制作用的价格上限导致配给</p>\n<p>有限制作用的价格下限导致过剩，因为供给量大于需求量。</p>\n<p>税收：政府用征税方式来为公共项目筹款。</p>\n<p>税收归宿（负担）研究谁承受税收负担。</p>\n<p>供给弹性 &gt; 需求弹性：买者承担的税收大于卖者</p>\n<p>需求弹性 &gt; 供给弹性：卖者承担的税收大于买者</p>\n<h2 id=\"市场效率\"><a class=\"anchor\" href=\"#市场效率\">#</a> 市场效率</h2>\n<p>福利经济学研究资源配置如何影响经济福利。</p>\n<p>基本概念：</p>\n<ul>\n<li>支付意愿和消费者剩余衡量买方（消费者）的经济福利。</li>\n<li>成本和生产者剩余衡量卖方（生产者）的经济福利。</li>\n</ul>\n<p>市场均衡导致社会总体的收益（或福利）最大化。</p>\n<p>支付意愿：买者（消费者）愿意且能够为某一物品支付的最高价格。</p>\n<p>消费者剩余（consumer surplus）：买者的支付意愿减买者的实际支付额。</p>\n<p>成本（出售意愿）：卖者（生产者）愿意且能够出售某一物品的最低价格。</p>\n<p>卖者成本曲线 (seller’s cost curve) 表示市场上卖者对每新增一单位物品的最小可能的成本。</p>\n<p>生产者剩余：卖者出售一种物品得到的金额减去卖者的成本。</p>\n<p>总剩余：一个可能的衡量社会经济福利的方法就是消费者和生产者剩余的和，即总剩余。</p>\n<p>消费者剩余 = 买者评价 - 买者支付的金额</p>\n<p>生产者剩余 = 卖者得到的金额 - 卖者的成本</p>\n<p>总剩余 = 消费者剩余 + 生产者剩余（消费者评价 - 生产者成本）</p>\n<p>效率：资源配置使总剩余最大化</p>\n<p>平等：社会成员中平均地分配经济成果的性质</p>\n<h2 id=\"应用税收-国际贸易\"><a class=\"anchor\" href=\"#应用税收-国际贸易\">#</a> 应用：税收、国际贸易</h2>\n<p>税收对于买卖双方的成本超过了政府的税收收入（效率损失）。</p>\n<p>T = 税收规模 the size of the tax</p>\n<p>Q = 销售量 the quantity of the good sold</p>\n<p>政府税收收入 = T x Q</p>\n<p>总福利的变化：</p>\n<ul>\n<li>消费者剩余的变化 The change in consumer surplus</li>\n<li>生产者剩余的变化 The change in producer surplus</li>\n<li>税收收入的变化 The change in tax revenue.</li>\n<li>买者和卖者的损失超过政府的税收收入。</li>\n</ul>\n<p>无谓损失：总剩余的下降</p>\n<p>无谓损失的决定因素：</p>\n<ul>\n<li>大小取决于供给量和需求量对价格变动的反应程度</li>\n<li>供给和需求的价格弹性</li>\n</ul>\n<p>需求和供给的弹性越大，均衡数量的减少就越大，税收的无谓损失就越大。</p>\n<p>税收增加越多，它对激励的扭曲越大，无谓损失增加也越大。</p>\n<p>世界价格：在世界市场上的通行价格。</p>\n<p>出口国：生产某一物品上具有比较优势，其国内价格就低于世界价格</p>\n<p>进口国：生产某一物品上不具有比较优势，其国内价格就高于世界价格</p>\n<p>关税：是对进口物品征收的税，使进口物品的价格提高到世界价格之上，其增加量等于关税</p>\n<p>关税减少了进口量，并使国内市场向没有贸易时的均衡移动</p>\n<p>进口限（配）额：对进口数量的限制</p>\n<h2 id=\"外部性\"><a class=\"anchor\" href=\"#外部性\">#</a> 外部性</h2>\n<p>外部性：当一个人从事一种影响旁观者福利并对这种影响既不付报酬又不得报酬的活动时，就产生了外部性（externality）</p>\n<p>正外部性和负外部性：</p>\n<ul>\n<li>正外部性：对旁观者的影响是有利的</li>\n<li>负外部性：对旁观者的影响是不利的</li>\n</ul>\n<p>技术政策：政府干预经济以扶持高技术产业的做法</p>\n<p>专利法：技术政策的一种，它对个人或企业创造发明的产权予以专利保护。可以说专利使外部性内在化</p>\n<p>矫正税（或称庇古税）：为修正负外部性带来的不良影响而征收的税。</p>\n<p>科斯定理：如果当事各方能够就资源配置无成本地进行讨价还价（谈判），那么私人市场总能自行解决外部性问题，并有效率地配置资源。</p>\n<p>科斯定理说明，私人经济行为者可以解决他们之间的外部性问题。</p>\n<p>科斯定理说明作用：</p>\n<ul>\n<li>私人解决外部性问题比想象的更为有效</li>\n<li>指导寻找私人不能解决外部性问题的正确原因</li>\n</ul>\n<p>交易成本：交易各方在讨价还价中达成一致并遵守协议的过程中所发生的成本</p>\n<p>私人解决方法失灵：交易成本过高</p>\n<h2 id=\"公共物品和共有资源-税制的设计\"><a class=\"anchor\" href=\"#公共物品和共有资源-税制的设计\">#</a> 公共物品和共有资源、税制的设计</h2>\n<p>排他性（Excludability）：阻止其他人享用该物品</p>\n<p>竞争性（Rivalness）：对该物品的使用减少其他人对该物品的享受</p>\n<p>物品的分类：</p>\n<ul>\n<li>私人物品 Private Goods：有排他性，有竞争性</li>\n<li>公共物品 Public Goods：无排他性，无竞争性</li>\n<li>共有资源 Common Resources：有竞争性，无排他性</li>\n<li>自然垄断 Natural Monopolies：有排他性，无竞争性</li>\n</ul>\n<p>共有地悲剧：一个人使用公共资源会减少他人使用，由于负外部性的存在，公共资源往往被过度使用</p>\n<p>共有地悲剧的解决方法：</p>\n<ul>\n<li>数量控制 Quotas</li>\n<li>税收 Taxes</li>\n<li>许可证 Permits</li>\n<li>产权私有化 Property Rights Privatization</li>\n</ul>\n<p>工薪税：对企业向工人支付的工资所征的税，又称社会保险税。</p>\n<p>社会保险税：由此获得的税收收入必须用来支付社会保障和医疗保险。</p>\n<p>联邦政府</p>\n<ul>\n<li>收入\n<ul>\n<li>美国联邦（中央）政府从经济当中征收的税收占整个税收的三分之二。</li>\n<li>联邦政府收入的最大来源是个人所得税。</li>\n<li>公司所得税</li>\n<li>货物税（销售税）</li>\n</ul>\n</li>\n<li>支出\n<ul>\n<li>收入保障</li>\n<li>医疗</li>\n<li>国防</li>\n<li>债券利息</li>\n</ul>\n</li>\n</ul>\n<p>预算赤字：政府支出超过了政府收入</p>\n<p>预算盈余：政府收入大于政府支出</p>\n<p>州和地方政府</p>\n<ul>\n<li>收入\n<ul>\n<li>州和地方政府征收的税收占总税收的约百分之四十。</li>\n<li>销售税 Sales Taxes</li>\n<li>财产税 Property Taxes</li>\n<li>个人所得税 Individual Income Taxes</li>\n<li>企业所得税 Corporate Income Taxes</li>\n<li>其他</li>\n</ul>\n</li>\n<li>支出\n<ul>\n<li>教育 Education</li>\n<li>公共福利 Public Welfare</li>\n<li>高速公路 Highways</li>\n<li>其他</li>\n</ul>\n</li>\n</ul>\n<p>税制设计的目标：</p>\n<ul>\n<li>效率 Efficiency</li>\n<li>平等 Equity</li>\n</ul>\n<p>税收的效率</p>\n<ul>\n<li>税收的成本\n<ul>\n<li>税收本身</li>\n<li>无谓损失</li>\n<li>行政负担</li>\n</ul>\n</li>\n<li>消费税的转型</li>\n<li>边际税率和平均税率</li>\n<li>定额税：有效率但无法保证平等</li>\n</ul>\n<p>征税原则：</p>\n<ul>\n<li>受益原则：人们应该根据他们从政府服务中得到的收益来纳税</li>\n<li>支付能力原则：应该根据一个人承受税负的能力来对他征税\n<ul>\n<li>纵向平等 Vertical equity：纳税人的纳税能力越强，所应缴纳的税收就应该越多</li>\n<li>横向平等 Horizontal equity：有相同能力的纳税人应该支付等量的税收</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"生产成本\"><a class=\"anchor\" href=\"#生产成本\">#</a> 生产成本</h2>\n<p>企业的目标：利润最大化</p>\n<p>总收益 Total Revenue：企业出售其产出而得到的金额</p>\n<p>总成本 Total Cost：企业购买其投入所支付的金额</p>\n<p>利润＝总收益－总成本</p>\n<p>企业的生产成本包括其生产物品与服务的所有机会成本</p>\n<p>企业的生产成本包括显性成本和隐性成本。</p>\n<ul>\n<li>显性成本包括对生产要素直接的资金支出</li>\n<li>隐性成本不涉及直接的资金支出</li>\n</ul>\n<p>经济利润：是总收益减去所有的机会成本（显性和隐性的），是企业经营者供给物品或服务的动机源泉</p>\n<p>会计利润：企业的总收益仅减去显性成本</p>\n<p>经济增加值（ EVA ）＝税后净营业利润－资本使用成本</p>\n<p>生产函数：生产某物品所使用的投入的数量和该物品产出的数量之间的关系</p>\n<p>边际产量：任一投入的边际产量，就是从增加一单位的该种投入中所获得的产量的增加量</p>\n<p>边际产量 = 增加的产出 / 增加的收入</p>\n<p>边际产量递减：某投入的边际产量随其投入量增加而下降</p>\n<p>固定成本：不随生产的产品数量改变而改变的成本</p>\n<p>可变成本：随企业改变生产产品数量而变化的成本</p>\n<p>总固定成本 Total Fixed Costs (TFC)、总变动成本 Total Variable Costs (TVC)、总成本 Total Costs (TC)</p>\n<p>总成本＝总固定成本＋总变动成本</p>\n<p>平均固定成本 Average Fixed Costs (AFC)、平均可变成本 Average Variable Costs (AVC)、平均总成本 Average Total Costs (ATC)</p>\n<p>平均总成本＝平均固定成本＋平均可变成本</p>\n<p>AFC = FC/Q 、 AVC = VC/Q 、ATC = TC/Q</p>\n<p>边际成本（ MC ）：企业增加一单位产量时总成本的增加量</p>\n<p>MC = 总成本变动量（ΔTC）/ 产量变动量（ΔQ）</p>\n<p>边际成本随产量上升而上升</p>\n<p>平均总成本曲线为 U 形，最低点对应的产量叫做有效率规模</p>\n<p>成本曲线的三个重要性质：</p>\n<ul>\n<li>边际成本随产量增加最终会上升</li>\n<li>平均总成本曲线为 U 形</li>\n<li>边际成本曲线与平均总成本曲线相交在平均总成本的最小值处</li>\n</ul>\n<p>短期和长期成本：</p>\n<ul>\n<li>短期曲线在长期成本曲线线上或以上</li>\n<li>长期平均总成本曲线是比短期平均总成本曲线扁平得多的 U 形曲线</li>\n<li>企业在长期中有更大的灵活性</li>\n</ul>\n<p>规模经济：长期平均总成本随产量增加而下降</p>\n<p>规模不经济：长期平均总成本随产量增加而上升</p>\n<p>规模报酬不变：长期平均总成本不随产量增加而改变时</p>\n<h2 id=\"竞争市场上的企业\"><a class=\"anchor\" href=\"#竞争市场上的企业\">#</a> 竞争市场上的企业</h2>\n<p>完全竞争市场特征：</p>\n<ul>\n<li>市场中有许多买者和卖者</li>\n<li>各个卖者提供的物品大体上是相同的</li>\n<li>企业可以自由地进入或退出市场</li>\n</ul>\n<p>价格接受者：竞争市场中的买者和卖者</p>\n<p>企业的总收益：销售价格乘销售量 TR = (P X Q)。</p>\n<p>对所有企业</p>\n<ul>\n<li>平均收益：物品的价格</li>\n</ul>\n<p>边际收益：销售量增加一个单位带来的总收益的变化 MR = ΔTR/ ΔQ = Δ(P<em>Q)/ ΔQ = P</em> ΔQ / ΔQ =P</p>\n<p>对竞争企业</p>\n<ul>\n<li>边际收益等于物品价格</li>\n<li>目标：利润最大化</li>\n</ul>\n<p>竞争企业的利润最大化：</p>\n<ul>\n<li>润最大化的产量点即价格和边际成本曲线的交点\n<ul>\n<li>边际成本小于边际收益时，增加产量</li>\n<li>边际成本大于边际收益时，减少产量</li>\n<li>两者相等时，利润最大化</li>\n</ul>\n</li>\n</ul>\n<p>企业的边际曲线决定了企业在任何价格时愿意供给的物品数量，即供给曲线</p>\n<p>沉没成本：是已经发生而且无法回收的成本</p>\n<p>短期停业决策</p>\n<ul>\n<li>TR &lt; VC</li>\n<li>TR/Q &lt; VC/Q</li>\n<li>P &lt; AVC</li>\n</ul>\n<p>进入或退出市场的长期决策</p>\n<ul>\n<li>退出\n<ul>\n<li>TR &lt; TC</li>\n<li>TR/Q &lt; TC/Q</li>\n<li>P &lt; ATC</li>\n</ul>\n</li>\n<li>进入\n<ul>\n<li>TR &gt; TC</li>\n<li>TR/Q &gt; TC/Q</li>\n<li>P &gt; ATC</li>\n</ul>\n</li>\n</ul>\n<p>边际企业：价格稍有下降就退出市场的企业</p>\n<p>短期、长期内的需求移动</p>\n<ul>\n<li>短期内带来企业的盈利、亏损</li>\n<li>长期内随着企业离开和进入市场，价格回到长期均衡</li>\n</ul>\n<p>长期供给曲线可能会向右上方倾斜</p>\n<ul>\n<li>生产资源数量有限</li>\n<li>鼓励新企业加入，就需要提高价格 -&gt; 甚至能有企业长期盈利</li>\n</ul>\n<h2 id=\"垄断-垄断竞争\"><a class=\"anchor\" href=\"#垄断-垄断竞争\">#</a> 垄断、垄断竞争</h2>\n<p>竞争企业：价格接受者</p>\n<p>垄断企业：价格制定者</p>\n<p>产生垄断的根本原因：进入障碍</p>\n<ul>\n<li>关键资源由一家企业所有</li>\n<li>政府给予一个企业生产某种产品的独享的权利，比如：专利和版权法</li>\n<li>生产成本使一个生产者比大量生产者更有效率</li>\n</ul>\n<p>自然垄断：一个企业能以低于两个或更多企业的成本为整个市场供给一种物品</p>\n<p>垄断者的边际收益总小于物品价格</p>\n<p>垄断企业：</p>\n<ul>\n<li>是唯一的生产者</li>\n<li>面临一条向右下方倾斜的（市场）需求曲线</li>\n<li>是价格制定者</li>\n<li>降低价格可以增加销售</li>\n</ul>\n<p>竞争企业：</p>\n<ul>\n<li>是许多生产者之一</li>\n<li>在同一价格上想卖多少就卖多少</li>\n<li>面临一条水平的需求曲线</li>\n<li>是价格接受者</li>\n</ul>\n<p>垄断企业利润最大化时，P &gt; MR = MC</p>\n<ul>\n<li>先找到 MC = MR 的生产数量点，再对应需求曲线找到合适定价的价格</li>\n<li>在市场竞争者增多时，价格会逐渐回落到等于边际成本</li>\n</ul>\n<p>垄断者的收益：</p>\n<ul>\n<li>总收益 TR = P x Q</li>\n<li>平均收益 AR = TR/Q = P</li>\n<li>边际收益 MR = ΔTR/ΔQ</li>\n</ul>\n<p>产量效应：销售的产量越多（ Q 越大），给定价格下的总收益越大。<br />\n价格效应：价格下降（ P 越小），给定产量下的总收益下降。</p>\n<p>垄断的福利代价：</p>\n<ul>\n<li>无谓损失：垄断者生产的产量总小于社会有效率的产量\n<ul>\n<li>类似于收税：这里私人企业得到的 “税收” 正是垄断利润</li>\n<li>对应到现实生活，无谓损失即无效率的低产量</li>\n</ul>\n</li>\n</ul>\n<p>价格歧视：企业试图将同样的产品以不同的价格卖给不同的顾客</p>\n<p>价格歧视的两个重要效应：</p>\n<ul>\n<li>增加垄断者的利润</li>\n<li>减少无谓损失</li>\n</ul>\n<p>价格歧视举例：</p>\n<ul>\n<li>电影票</li>\n<li>机票价格</li>\n<li>折扣劵</li>\n<li>助学金</li>\n<li>数量折扣</li>\n</ul>\n<p>完全价格歧视是指这种情况：垄断者完全了解每个顾客的支付意愿，并对每位顾客收取不同的价格。</p>\n<p>针对垄断的公共政策：</p>\n<ul>\n<li>增加市场竞争性：反托拉斯法</li>\n<li>管制：直接限制垄断企业的定价</li>\n<li>公有制：政府自己经营 -&gt; 带来市场效率下降</li>\n<li>不作为</li>\n</ul>\n<p>不完全竞争：介于完全竞争和纯垄断之间的市场结构</p>\n<p>垄断竞争：许多企业出售类似但不相同的产品</p>\n<p>垄断竞争举例：</p>\n<ul>\n<li>书籍</li>\n<li>电影</li>\n<li>CD</li>\n<li>电脑游戏</li>\n</ul>\n<p>垄断竞争的特征：</p>\n<ul>\n<li>许多卖者</li>\n<li>产品差别</li>\n<li>自由进入和退出</li>\n</ul>\n<p>市场组织的分类：</p>\n<ul>\n<li>垄断</li>\n<li>寡头</li>\n<li>垄断竞争</li>\n<li>完全竞争</li>\n</ul>\n<p>产品多样化外部性：由于消费者从新产品引进中得到了一些消费者剩余，新企业的进入对消费者造成了正外部性</p>\n<p>抢走生意的外部性：由于其他企业从新竞争者进入中失去顾客和利润，新企业的进入对原有企业施加了负外部性</p>\n<p>由于垄断企业出售价格大于边际成本，因此都有激励做广告来吸引买者买自己的特定产品</p>\n<ul>\n<li>产品间差异越大的行业，收益中用于广告的成本越大</li>\n<li>总体来说，广告促进了竞争</li>\n</ul>\n<p>广告本身的质量与否影响着人们对产品质量的评价</p>\n<h2 id=\"寡头\"><a class=\"anchor\" href=\"#寡头\">#</a> 寡头</h2>\n<p>寡头：只有少数卖主，每一个提供类似的或相同的产品</p>\n<p>寡头市场的特征：</p>\n<ul>\n<li>只有少数几个卖者</li>\n<li>市场上任何一个卖者的行动都对其他卖者的利润有重大影响</li>\n<li>以一种竞争企业不具备的方式相互依赖</li>\n</ul>\n<p>寡头市场的关键特征：合作与利己之间的冲突</p>\n<p>勾结、卡特尔：禁止卡特尔内协商生产数目或价格是困难的</p>\n<p>纳什均衡：</p>\n<ul>\n<li>寡头价格低于垄断价格，但高于竞争价格</li>\n<li>随着企业的增多，市场会越来越接近竞争市场</li>\n</ul>\n<p>博弈论：研究人们在各种策略情况下如何行事</p>\n<p>策略决策：每个人在决定采取什么行动时，必须考虑其他人对这种行动作出什么反应</p>\n<p>寡头的囚徒困境：维持合作是困难的</p>\n<ul>\n<li>军备竞赛</li>\n<li>公共资源</li>\n<li>对社会是有益的</li>\n</ul>\n<p>反托拉斯法：限制贸易或企图垄断市场定为非法</p>\n<p>转售价格控制（或称公平贸易）：供应商（比如批发商）要求零售商向顾客收取指定的价格</p>\n<p>掠夺性定价：大企业减价的动机是把它的竞争对手赶出市场</p>\n<p>搭售：一个企业以单一价格提供两个或多个产品，而不是分开提供</p>\n<h2 id=\"生产要素市场\"><a class=\"anchor\" href=\"#生产要素市场\">#</a> 生产要素市场</h2>\n<p>生产要素：用来生产商品和服务的投入，生产要素需求是派生需求，是通过向另外的市场供给物品所产生的需求</p>\n<p>生产函数：使用的投入量与产品的产出量之间的关系</p>\n<p>边际产值：投入的边际产量乘以产出的市场价格</p>\n<p>劳动的边际产量（marginal product of labor）：增加的一单位劳动所引起的产量增加量。</p>\n<p>边际产量递减（diminishing marginal product）：一单位投入的边际产量随着投入量的增加而减少的性质。</p>\n<p>MPL = ΔQ/ΔL</p>\n<p>劳动需求曲线的移动的因素</p>\n<ul>\n<li>产出价格 Output Price</li>\n<li>技术变革 Technological Change\n<ul>\n<li>劳动节约型的技术变革：使曲线向左移动，例如廉价的工业机器人的发明</li>\n<li>劳动扩张型的技术变革：引起曲线向右移动</li>\n</ul>\n</li>\n<li>其他要素的供给 Supply of Other factors</li>\n</ul>\n<p>劳动供给曲线移动的因素</p>\n<ul>\n<li>嗜好变动 Changes in Tastes</li>\n<li>可供选择的机会改变 Changes in Alternative Opportunities</li>\n<li>移民 Immigration</li>\n</ul>\n<p>劳动市场的均衡</p>\n<ul>\n<li>工资调整使劳动的供求平衡</li>\n<li>工资等于劳动的边际产值</li>\n</ul>\n<p>劳动供给的增加</p>\n<ul>\n<li>导致劳动过剩</li>\n<li>对工资施加向下的压力</li>\n<li>使得企业多雇佣工人变得有利可图</li>\n<li>导致劳动的边际产量下降</li>\n<li>降低了劳动的边际产值</li>\n<li>产生了新的均衡</li>\n</ul>\n<p>劳动需求的移动</p>\n<ul>\n<li>使得企业多雇佣工人变得有利可图</li>\n<li>对工资产生向上的压力</li>\n<li>提高了边际产值</li>\n<li>产生了新的均衡</li>\n</ul>\n<p>购买价格：一个人为了无限期地拥有那些生产要素而支付的价格</p>\n<p>租赁价格：一个人为了在一个有限时期内使用那些生产要素而支付的价格</p>\n<p>租赁价格和购买价格</p>\n<ul>\n<li>对于租赁价格，劳动、土地、资本各自赚到了他们在生产过程中的边际贡献的价值</li>\n<li>对比劳动收入、资本收入是通过多种方式支付给家庭的，如股利等</li>\n</ul>\n<h2 id=\"收入与歧视-收入不平等与贫困\"><a class=\"anchor\" href=\"#收入与歧视-收入不平等与贫困\">#</a> 收入与歧视、收入不平等与贫困</h2>\n<p>补偿性工资差别（compensating differential）：为抵消不同工作的非货币特性而产生的工资差别。</p>\n<p>收入差异的原因：</p>\n<ul>\n<li>补偿性差别</li>\n<li>人力资本：对人的投资的积累\n<ul>\n<li>受教育程度高的工人往往有着较高的边际生产率</li>\n<li>工作效率、工具的提升，和非熟练劳动需求的转移拉开的熟练、非熟练工资的差距</li>\n<li>高等教育也是一种投资</li>\n</ul>\n</li>\n<li>能力，努力和机遇（无法解释的差异）</li>\n<li>信号</li>\n<li>超级明星现象\n<ul>\n<li>市场上每个人都想享受最优生产者提供的物品</li>\n<li>生产物品的技术使最优生产者低成本提供物品成为可能</li>\n</ul>\n</li>\n</ul>\n<p>工会（union）：与雇主谈判工资和工作条件的工人协会</p>\n<p>罢工（strike）：工会有组织地从企业撤出劳动</p>\n<p>效率工资（efficiency wages）：企业为了提高工人的生产率而支付的高于平均均衡工资的工资。</p>\n<p>高工资作用：</p>\n<ul>\n<li>减少工人的流动</li>\n<li>提高工人努力程度</li>\n<li>提高向该公司申请工作的工人的素质</li>\n</ul>\n<p>劳动过剩或失业：高于均衡水平的工资增加了劳动供给量，减少了劳动需求量</p>\n<p>歧视（discrimination）：对仅仅是种族、民族、性别、年龄或其他个人特征不同的相似个人提供不同的机会。</p>\n<p>竞争市场对雇主的歧视提供了一种自然的矫正方法，这种矫正方法被称为利润动机</p>\n<ul>\n<li>这种歧视只有在顾客偏好和政府政策存在时，才能维持下去</li>\n</ul>\n<p>顾客偏好：如果顾客有歧视偏好，竞争性市场和歧视性工资差别就可以并存。</p>\n<p>政府政策：当政府要求遵照歧视性的惯例，或者要求企业进行歧视，这就可能导致歧视性的工资差别。</p>\n<p>一个人的收入取决于对这个人劳动的供给和需求，供给和需求又取决于天赋能力、人力资本、补偿性差别、歧视等等。</p>\n<p>贫困线：美国的贫困线大致为提供充足食物的成本的三倍</p>\n<p>贫困率：家庭收入低于称作贫困线的绝对水平的人口百分比</p>\n<p>贫困的三个相关：</p>\n<ul>\n<li>和种族相关</li>\n<li>和年龄相关</li>\n<li>和家庭构成相关</li>\n</ul>\n<p>影响衡量不平等的因素：</p>\n<ul>\n<li>实物转移支付：以物品和服务而不是现金形式给予穷人的转移支付</li>\n<li>生命周期：人一生中收入变化的有规律的模式</li>\n<li>暂时收入和持久收入：收入会因随机和暂时的力量而变化\n<ul>\n<li>减少收入的自然界变动</li>\n<li>由于疾病和经济环境而引起的暂时失业等</li>\n</ul>\n</li>\n</ul>\n<p>经济流动性：人们在不同收入阶层之间的移动</p>\n<p>收入再分配的三种政治哲学</p>\n<ul>\n<li>功利主义 Utilitarianism：政府应该重新分配收入以最大化社会中每个人的效用之和\n<ul>\n<li>基于边际效用递减的假设</li>\n</ul>\n</li>\n<li>自由主义 Liberalism：收入再分配应该使得社会当中最穷的人总是得到一个充足的收入，形式上类似社会保险\n<ul>\n<li>公共政策应该基于最大化最小标准</li>\n</ul>\n</li>\n<li>自由意志主义 Libertarianism：政府保护个人权利，但不必关心由此造成的收入分配不平等\n<ul>\n<li>机会平等比收入平等更为重要</li>\n</ul>\n</li>\n</ul>\n<p>减少贫困的政策：</p>\n<ul>\n<li>最低工资法</li>\n<li>福利</li>\n<li>负所得税</li>\n<li>实物转移支付</li>\n</ul>\n<p>劳动福利：要求每个得到补助金的人接受一份政府提供的工作的制度</p>\n<h2 id=\"微观经济学前沿\"><a class=\"anchor\" href=\"#微观经济学前沿\">#</a> 微观经济学前沿</h2>\n<p>不对称信息<br />\n隐蔽性行为和道德风险：代理人和委托人<br />\n公司管理中，股东、董事会和管理层就分属委托人和代理人，道德风险即管理层可以做出违背股东利益的公司决策<br />\n隐蔽性特征：逆向选择<br />\n卖者了解得更多，买者承担风险<br />\n有信息一方披露信息：发信号<br />\n无信息一方迫使有信息一方披露信息：筛选</p>\n<p>政府经济学：用经济学的方法分析政府</p>\n<p>康多塞悖论：（多于两种选择时）多数原则没有产生可传递的社会偏好</p>\n<ul>\n<li>投票顺序会影响结果</li>\n<li>多数投票本身可能并不能告诉我们社会想要什么结果</li>\n</ul>\n<p>阿罗不可能定理：没有一种投票制度可以满足下列所有条件（无法把社会成员的个人偏好加总成社会偏好）</p>\n<ul>\n<li>确定性</li>\n<li>传递性</li>\n<li>不相关选择的独立性：任何两个结果之间的排序不取决于别的结果</li>\n<li>没有独裁者</li>\n</ul>\n<p>中值选民定理：多数原则将产生中值选民最偏好的结果</p>\n<p>行为经济学：社会心理学和经济学的融合</p>\n<ul>\n<li>人不总是理性：左位偏差</li>\n<li>人想要公平</li>\n<li>人是善变的</li>\n</ul>\n<h2 id=\"一国收入的衡量\"><a class=\"anchor\" href=\"#一国收入的衡量\">#</a> 一国收入的衡量</h2>\n<p>折旧：经济中设备和建筑物存量的磨损</p>\n<p>收入：经济中每个人获得的收入（工资、地租与利润），通常由企业支付</p>\n<p>个人可支配收入：家庭和非公司企业在履行对政府的义务之后余下的收入</p>\n<p>支出：家庭在经济所产出的物品与服务上的总花费</p>\n<p>循环流向图：收入和支出的相等</p>\n<p>增加值：生产者产品的价值减去该生产者购买的中间产品的价值</p>\n<p>国内生产总值（ GDP ）：在既定时期、一国范围内生产的所有最终物品和服务的市场总价值</p>\n<ul>\n<li>名义 GDP：按现期价格来评价物品和服务的产出</li>\n<li>实际 GDP：按不变价格来评价物品和服务的产出</li>\n</ul>\n<p>国民生产总值（ GNP ）：由一国永久居民（称为国民）所获得的收入总和</p>\n<p>国民生产净值（ NNP ）：一国居民的总收入（ GNP ）减去折旧的损耗</p>\n<p>GDP（Y）的四个组成部分：</p>\n<ul>\n<li>消费（C）：家庭除购买新住房之外用于物品与服务的支出</li>\n<li>投资（I）：对用于未来生产更多物品和服务的物品的购买</li>\n<li>政府购买（G）：地方、州、联邦政府用于物品与服务的支出</li>\n<li>净出口（NX）：外国对国内生产的物品的购买（出口）减国内对外国物品的购买（进口）</li>\n</ul>\n<p>Y=C+I+G+NX</p>\n<p>GDP 平减指数：衡量相对于基年物价水平的当期物价水平</p>\n<p>GDP 平减指数 = 名义 GDP / 真实 GDP X 100</p>\n<p>第二年的通货膨胀率 = (第二年的 GDP 平减指数 - 第一年的 GDP 平减指数)/ 第一年的 GDP 平减指数 X 100%</p>\n<p>GDP 是经济福利的一个不错的衡量指标，因为人们偏爱高收入而非低收入，但不是衡量福利的完美指标，因为某些东西，例如闲暇时间、清洁的环境不能用 GDP 来衡量。</p>\n<h2 id=\"生活费用的衡量\"><a class=\"anchor\" href=\"#生活费用的衡量\">#</a> 生活费用的衡量</h2>\n<p>通货膨胀：描述经济的价格总水平上升的情形</p>\n<p>通货膨胀率：从上一个时期以来价格水平的百分比变化</p>\n<p>消费者价格指数（CPI）：衡量一个普通消费者购买的物品和服务的总费用</p>\n<p>消费者价格指数的百分比变化衡量了通货膨胀率</p>\n<p>消费者价格指数的计算：</p>\n<ul>\n<li>确定固定篮子：哪些物品的价格对普通消费者而言是最为重要的</li>\n<li>寻找价格：找到在每一时点、篮子中每一物品和服务的价格</li>\n<li>计算这一篮子（物品）的费用：使用价格数据来计算不同时间这一篮子物品和服务的费</li>\n<li>选择一个基年并计算指数： 将某一年指定为基年，将其作为与其他各年比较的基准</li>\n</ul>\n<p>消费者价格指数 = 当年一篮子物品与劳动的价格 / 基年一篮子的价格 X 100</p>\n<p>计算通货膨胀率：通货膨胀率是从上一时期以来价格指数变化的百分比</p>\n<p>第二年的通货膨胀率 = (第二年 CPI - 第一年 CPI) / 第一年 CPI X 100%</p>\n<p>其他的价格指数:</p>\n<ul>\n<li>一国内不同地域的指数</li>\n<li>某些物品和服务的分类指数</li>\n<li>生产者价格指数 (PPI)：衡量企业而非消费者购买一篮子物品和服务的费用</li>\n</ul>\n<p>CPI 是对构成典型消费组合的选定物品（费用）的准确衡量，但不是生活费用的完美衡量指标：</p>\n<ul>\n<li>替代偏差 Substitution bi ：便宜的物品替代昂贵的物品</li>\n<li>新物品的引入 Introduction of new goods ：新物品引入导致的购买力的变动</li>\n<li>无法衡量的质量变动 Unmeasured quality changes</li>\n</ul>\n<p>以上原因导致了 CPI 高估了通货膨胀，大约是每年一个百分点</p>\n<p>GDP 平减指数不同于消费物价指数是因为它涵盖生产出来的物品与劳务，而不是消费的物品与劳务。</p>\n<p>GDP 平减指数一直随 GDP 构成的变动而自动地改变物品与劳务的组合。</p>\n<p>消费者价格指数比较固定篮子的基年价格和（当期）价格（ BLS 只是偶尔改变篮子）。</p>\n<p>名义利率：未经通货膨胀校正的利率</p>\n<p>实际利率：经过通货膨胀校正的名义利率</p>\n<p>实际利率 = 名义利率 - 通胀率</p>\n<h2 id=\"生产与增长\"><a class=\"anchor\" href=\"#生产与增长\">#</a> 生产与增长</h2>\n<p>复利计算：增长率在一段时间上的累积</p>\n<p>70 规则：如果某个变量以每年百分之 x 增长，那么那个变量在大约 70/x 年后翻一番</p>\n<p>生产率：一个工人在一小时的劳动时间内能够生产的物品和服务的数量</p>\n<p>生产要素：生产物品和服务的投入（直接决定生产率）</p>\n<p>生产要素：</p>\n<ul>\n<li>物质资本 Physical capital：用来生产物品和服务的设备和建筑物的存量</li>\n<li>人力资本 Human capital：工人通过教育、培训和（工作）经历获得的知识和技能</li>\n<li>自然资源 Natural resources：大自然（例如土地、河流和矿藏）提供的用于生产的投入</li>\n<li>技术知识 Technological knowledge：生产物品和服务的最佳方法的了解</li>\n</ul>\n<p>生产函数：Y = AF (L, K, H, N)</p>\n<ul>\n<li>Y 指产出量</li>\n<li>A 代表生产技术</li>\n<li>L 指劳动量</li>\n<li>H 代表人力资本量</li>\n<li>K 代表物质资本</li>\n<li>N 代表自然资源</li>\n</ul>\n<p>去掉规模带来的收益能得到 Y/L = AF (1, K/L, H/L, N/L)</p>\n<ul>\n<li>Y/L = 每个工人的产量 output per worker</li>\n<li>K/L = 每个工人的物质资本 physical capital per worker</li>\n<li>H/L = 每个工人的人力资本 human capital per worker</li>\n<li>N/L = 每个工人的自然资源 natural resources per worker</li>\n</ul>\n<p>提高生产率和生活水平的政府政策：</p>\n<ul>\n<li>鼓励储蓄和投资：提高未来生产率的一种途径是将更多现有的资源投入到资本的生产中去\n<ul>\n<li>报酬（或收益）递减：资本存量的增加，由新增一单位资本生产出来的额外产出下降</li>\n<li>追赶效应：其他条件不变时，开始时相对贫穷的国家更容易快速地增长</li>\n</ul>\n</li>\n<li>鼓励来自国外的投资：政府通过鼓励来源于国外的投资来增加资本积累和长期经济增长\n<ul>\n<li>外国直接投资 Foreign Direct Investment：由国外实体所有和运营的资本投资</li>\n<li>外国证券投资 Foreign Portfolio Investment：由外国货币筹资，但由本国居民运营的投资</li>\n</ul>\n</li>\n<li>促进教育：对于一国的长期增长来说，教育至少和物质资本的投资同等重要\n<ul>\n<li>人才外流：许多受过最好教育的工人向富裕国家的移民</li>\n</ul>\n</li>\n<li>促进健康：更健康的工人更有生产率，对人们健康的投资能够提高生活水平</li>\n<li>建立产权保障和保持政治稳定\n<ul>\n<li>产权：人们对他们所拥有的资源行使权力的能力</li>\n</ul>\n</li>\n<li>允许自由贸易\n<ul>\n<li>内向型：避免和其他国家进行往来</li>\n<li>外向型：鼓励和其他国家进行往来</li>\n</ul>\n</li>\n<li>控制人口增长\n<ul>\n<li>人口是一国劳动力的关键性决定因素</li>\n<li>导致资源紧张 Stretching natural resources</li>\n<li>稀释资本存量 Diluting the capital stock</li>\n<li>促进技术进步 Promoting technological progress</li>\n</ul>\n</li>\n<li>促进研究开发：技术知识的进步导致了更高的生活水平</li>\n</ul>\n<p>一个经济的生活水平依赖于这个经济生产物品和服务的能力。</p>\n<p>资本积累受收益递减的限制：一个经济拥有的资本越多，该经济从新增加的一单位资本中得到的产量的增加就越少。</p>\n<h2 id=\"储蓄-投资与金融体系\"><a class=\"anchor\" href=\"#储蓄-投资与金融体系\">#</a> 储蓄、投资与金融体系</h2>\n<p>储蓄与投资是 GDP 与生活水平长期增长的重要决定因素。</p>\n<p>金融体系：由一些促使一个人的储蓄与另一个人的投资相匹配的金融机构组成</p>\n<p>金融市场：储蓄者直接向借用者提供资金的机构</p>\n<p>金融市场 Financial Markets</p>\n<ul>\n<li>股票市场 Stock Market\n<ul>\n<li>股本筹资：出售股票来融资</li>\n<li>股票：代表在一个企业中的所有权，从而也代表了对企业所获利润的要求权\n<ul>\n<li>（每股）价格 Price (of a share)</li>\n<li>交易量（股票售出数量） Volume (number of shares sold)</li>\n<li>股息或红利（支付给股东的利润） Dividend (profits paid to stockholders)</li>\n<li>价格－收益比（市盈率） Price-earnings ratio</li>\n<li>股票价格指数：即计算出来的一组股票价格的平均数，用于监测整体股票价格水平</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>债券市场 Bond Market\n<ul>\n<li>债务融资：出售债券融资</li>\n<li>债券：一种债务证明书，规定了借用者对债券持有者的义务\n<ul>\n<li>期限：截至债券到期时的时间长度</li>\n<li>信用风险：借用者未能支付某些利息或本金的可能性</li>\n<li>税务处理：税务法规处理债券利息的方式</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>金融中介机构：储蓄者间接向借用者提供资金的金融机构</p>\n<p>金融中介 Financial Intermediaries</p>\n<ul>\n<li>银行 Banks：从想要储蓄的人那里得到存款，用这些储蓄向想要借钱的人发放贷款。向储户支付存款利息，并向贷款人收取稍高一些的利息。</li>\n<li>基金 Mutual Funds：向公共出售股份，并用得来的收益购买各种股票和（或）债券的一个组合的机构。</li>\n</ul>\n<p>其他金融机构：</p>\n<ul>\n<li>信用合作社 Credit unions</li>\n<li>养老基金 Pension funds</li>\n<li>保险公司 Insurance companies</li>\n<li>放高利贷者 Loan sharks</li>\n</ul>\n<p>私人储蓄：支付了税收和消费之后余下的家庭收入</p>\n<p>公共储蓄：政府支付了其支出之后的税收收入</p>\n<p>T-G 代表公共储蓄，T&gt;G 政府有预算盈余，G&gt;T 政府有预算赤字</p>\n<p>可贷资金：人们用来储蓄并借出、而不是用于自己消费的所有收入</p>\n<p>利率：借（贷）款的价格，借入者为贷款支付的金额，也是借出者从储蓄中得到的金额</p>\n<p>利率调节使得可贷资金供求平衡，协调了储蓄和投资</p>\n<p>可贷资金的供给（储蓄）等于私人储蓄加上公共储蓄：S = (Y – T – C) + (T – G)</p>\n<p>影响储蓄与投资的政府政策：</p>\n<ul>\n<li>税收与储蓄 Taxes and saving\n<ul>\n<li>减税增加了家庭在给定利率下进行储蓄的激励：利率下降和投资上升\n<ul>\n<li>可贷资金的供给曲线向右移动</li>\n<li>均衡利率下降</li>\n<li>可贷资金的需求量增加</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>税收与投资 Taxes and investment\n<ul>\n<li>税收优惠增加了借入的激励：更高的利率和更多的储蓄\n<ul>\n<li>增加了可贷资金的需求</li>\n<li>需求曲线右移</li>\n<li>导致更高的利率和更多的储蓄量</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>政府预算赤字 Government budget deficits</li>\n</ul>\n<p>政府的支出（ G ）增加，税收（ T）不变：</p>\n<ul>\n<li>公共储蓄（ T-G ）下降</li>\n<li>私人储蓄（ Y-T-C ）不变</li>\n<li>可贷资金供给下降</li>\n</ul>\n<p>预算赤字（政府支出增加）减少了可贷资金的供给</p>\n<ul>\n<li>供给曲线左移</li>\n<li>提高了均衡利率</li>\n<li>降低了可贷资金的均衡数量</li>\n</ul>\n<p>赤字运行减少了国民储蓄，则利率上升，投资下降；预算盈余增加了可贷资金的供给，降低了利率，刺激了投资。</p>\n<h2 id=\"失业\"><a class=\"anchor\" href=\"#失业\">#</a> 失业</h2>\n<p>总量生产函数考虑失业率 (u)：Y = AF (L (1-u), K, H, N)</p>\n<p>（人均）生产率考虑失业率 (u)：Y/L = AF (1-u, K/L, H/L, N/L)</p>\n<p>失业率（ u ）上升导致生产率下降</p>\n<p>失业的种类</p>\n<ul>\n<li>长期问题\n<ul>\n<li>自然失业率：即使在长期也不会自行消失的失业，是经济通常所经受的失业数量</li>\n<li>周期性失业：失业围绕其自然失业率的逐年波动，和经济周期的短期上升和下降相联系</li>\n</ul>\n</li>\n<li>短期问题</li>\n</ul>\n<p>劳工统计局分类：</p>\n<ul>\n<li>就业者 Employed：一个人在最近一周的大部分时间里从事了有报酬的工作</li>\n<li>失业者 Unemployed：一个人暂时没有工作，正在寻找工作或等待新工作开始</li>\n<li>非劳动力 Not in the labor force：不属于前两类中的任何一类，例如：一个全日制的学生、家务劳动者和退休人员</li>\n</ul>\n<p>劳动力：就业者和失业者之和。</p>\n<p>摩擦性失业：工人和工作相匹配的过程所引起的失业</p>\n<p>结构性失业：劳动力供给数量超出需求数</p>\n<p>失业的原因：</p>\n<ul>\n<li>工人寻找最适合其喜好和技能的工作是需要时间的</li>\n<li>最低工资法增加了劳动力供给、减少了劳动力需求</li>\n<li>工会的市场势力</li>\n<li>效率工资理论有关</li>\n</ul>\n<p>寻找工作：工人发现适合其喜好和技能的工作的过程</p>\n<p>政府计划能够影响失业工人找到新工作的时间：</p>\n<ul>\n<li>政府开办的就业代理处 Government-run employment agencies：发布工作空缺的信息</li>\n<li>公共培训计划 Public training programs：促进工人从夕阳产业向朝阳产业的转移</li>\n<li>失业保险 Unemployment insurance：部分保障失业工人收入</li>\n</ul>\n<p>均衡工资理论：工资高于均衡水平，企业的经营会更有效率。</p>\n<p>工资高于均衡值的三种可能原因：</p>\n<ul>\n<li>最低工资法 Minimum-wage laws</li>\n<li>工会 Unions</li>\n<li>效率工资 Efficiency wages</li>\n</ul>\n<p>企业偏好于高于均衡的工资的原因：</p>\n<ul>\n<li>工人健康 Worker Health</li>\n<li>工人流动 Worker Turnover</li>\n<li>工人素质 Worker Quality</li>\n<li>工作努力 Worker Effort</li>\n</ul>\n<p>不对称信息：在交易中的一方比另一方知道更多的相关信息</p>\n<ul>\n<li>逆向选择 Adverse Selection：一个人对物品特性的了解比另一个人多，没有信息的人就有买到低质量产品的危险\n<ul>\n<li>二手车质量</li>\n<li>保险市场中买者的风险</li>\n</ul>\n</li>\n<li>道德风险 Moral Hazard：代理人代表委托人完成一项任务\n<ul>\n<li>购买了火灾保险的房主买的灭火器太少</li>\n<li>保姆让小孩看电视的时间超过父母的希望</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"货币制度\"><a class=\"anchor\" href=\"#货币制度\">#</a> 货币制度</h2>\n<p>货币：经济中人们经常性地用来从其他人那里购买物品与服务的一组资产</p>\n<p>货币的职能：</p>\n<ul>\n<li>交换媒介：作为支付手段易于被接受的任何东西</li>\n<li>计价单位：用来标明价格和记录债务的尺度</li>\n<li>价值储藏手段：能用来将购买力从现在转移到将来的一种东西</li>\n</ul>\n<p>财富：所有价值储藏的总量，包括货币和非货币资产</p>\n<p>流动性：资产能够转换成经济中的交换媒介的容易程度</p>\n<p>商品货币：货币本身有内在价值，例子：黄金、白银、香烟</p>\n<p>法定货币：由政府法令确定的货币，没有内在价值</p>\n<p>货币存量：在经济中流动着的货币量</p>\n<p>通货（现金）：公众手中持有的纸币和硬币</p>\n<p>活期存款：储蓄者通过写支票的方式发出请求就可以使用的银行帐户余额</p>\n<p>借记卡：卡帐上的余额包括在货币量的衡量中</p>\n<p>信用卡：不包括在货币的所有衡量当中，是一种延期支付方式（赊账）</p>\n<ul>\n<li>信用卡的引入减少了人们选择持有的货币量</li>\n</ul>\n<p>货币供给：经济中可得的货币数量</p>\n<p>美联储的三个主要职能：</p>\n<ul>\n<li>管理银行</li>\n<li>作为银行的银行，向银行发放贷款并作为最终的贷款人</li>\n<li>控制货币供给以实施货币政策</li>\n</ul>\n<p>美联储（Fed）改变经济中货币供给的主要方式是通过公开市场运作</p>\n<ul>\n<li>从公众手中购买政府债券，增加货币的供给</li>\n<li>向公众出售政府债券，减少货币的供给</li>\n</ul>\n<p>中国的中央银行是中国人民银行</p>\n<p>中国人民银行的公开市场业务：</p>\n<ul>\n<li>回购交易</li>\n<li>现券交易</li>\n<li>发行中央银行票据</li>\n</ul>\n<p>准备金：银行吸收但没有贷出的存款</p>\n<p>法定准备金：银行必须根据其存款持有的最低准备金的规定</p>\n<p>准备金率：银行在总存款中作为准备金持有的比例</p>\n<p>银行将一部分存款贷出来收取利息，准备金率则小于 1，这种银行也叫作部分准备金银行</p>\n<p>货币乘数 = 货币总量 / 准备金</p>\n<p>杠杆：借到的货币追加到投资的现有资金上</p>\n<p>杠杆率：银行的总资产与银行资本的比率</p>\n<h2 id=\"货币增长与通货膨胀\"><a class=\"anchor\" href=\"#货币增长与通货膨胀\">#</a> 货币增长与通货膨胀</h2>\n<p>通货膨胀：总体价格水平的上升</p>\n<p>货币数量论：解释价格水平和通货膨胀率的长期决定因素</p>\n<p>货币的价值是由货币的供给与需求决定的</p>\n<ul>\n<li>货币供给：美联储通过公开市场运作等工具直接控制货币供给的数量</li>\n<li>货币需求：流动的形式持有的财富数量\n<ul>\n<li>决定因素：物价水平、产出、利率</li>\n</ul>\n</li>\n</ul>\n<p>在长期中，物价总水平总会调整到使货币需求等于货币供给的水平。</p>\n<p>古典二分法把所有经济变量分为名义变量与实际变量</p>\n<ul>\n<li>名义变量：以货币单位衡量的变量</li>\n<li>实际变量：以物质单位衡量的变量</li>\n</ul>\n<p>按古典二分法影响实际和名义变量的是不同的经济力量</p>\n<p>货币中性：货币变化与实际变量无关的性质</p>\n<p>货币流通速度：在经济中普通的一美元在不同人手中流动的速度</p>\n<p>货币流通速度与数量论方程式：V = (P x Y)/M</p>\n<ul>\n<li>V = velocity 流通速度</li>\n<li>P = the price level 价格水平</li>\n<li>Y = the quantity of output 产出数</li>\n<li>M = the quantity of money 货币数量</li>\n</ul>\n<p>通货膨胀税：府通过印制钞票来增加收入</p>\n<p>费雪效应：名义利率根据通货膨胀率所做的调整</p>\n<p>名义利率＝实际利率 ＋ 通货膨胀率</p>\n<p>真实利率 = 名义利率 - 通货膨胀率</p>\n<p>可贷资金的供求决定真实利率。</p>\n<p>通货膨胀本身并不减少人们的实际购买力，增加了名义收入。</p>\n<p>通货膨胀的成本：</p>\n<ul>\n<li>皮鞋成本 Shoeleather costs：通货膨胀像一种税，税收这种激励的扭曲给社会带来了无谓损失。皮鞋成本字面意义是更经常去银行会使你的鞋磨损得更快。实际上是指减少货币持有量的成本，比如你牺牲的时间和便利。</li>\n<li>菜单成本 Menu costs：企业为应对通胀不得不改变定价。这种改变价格的成本成为菜单成本</li>\n<li>相对价格变动 Relative price variability：通货膨胀扭曲相对价格，消费者的决策被扭曲，市场将资源配置到其最优用途的能力下降</li>\n<li>税收扭曲 Tax distortions：通货膨胀夸大了资本收益的数量，加重了此类收入的税收负担。</li>\n<li>混乱与不便 Confusion and inconvenience：通胀侵蚀计价单位的真实价值</li>\n<li>任意的财富再分配 Arbitrary redistribution of wealth</li>\n</ul>\n<h2 id=\"开放经济的宏观经济学基本概念\"><a class=\"anchor\" href=\"#开放经济的宏观经济学基本概念\">#</a> 开放经济的宏观经济学：基本概念</h2>\n<p>封闭经济：一个与世界上其他经济没有相互往来的经济</p>\n<p>出口：在国内生产并在国外销售的物品与服务</p>\n<p>进口：在国外生产并在国内销售的物品与服务</p>\n<p>净出口（ NX ）/ 贸易余额：一国的出口值减去进口值</p>\n<p>贸易赤字：进口 &gt; 出口</p>\n<p>贸易盈余：出口 &gt; 进口</p>\n<p>贸易平衡：出口 = 进口</p>\n<p>影响净出口的因素：</p>\n<ul>\n<li>国内与国外消费者的收入</li>\n<li>物品从一国运往另一国的运输成本</li>\n<li>政府对国际贸易的政策</li>\n</ul>\n<p>资本净流出：是国内居民购买的国外资产减去外国人购买的国内资产</p>\n<ul>\n<li>对外直接投资 Foreign direct investment</li>\n<li>对外间接投资 Foreign portfolio investment</li>\n</ul>\n<p>影响资本净流出的因素：</p>\n<ul>\n<li>支付给国外资产的实际利率</li>\n<li>支付给国内资产的实际利率</li>\n<li>持有国外资产所察觉到的经济和政治风险</li>\n<li>影响外国人对国内资产所有权的政府政策</li>\n</ul>\n<p>对于一个经济整体而言，净出口 NX 和 资本净流出 NCO 必须相等</p>\n<ul>\n<li>一国有贸易盈余（NX &gt; 0）时，资本从一国流出（NCO &gt; 0）</li>\n<li>一国有贸易赤字时（NX &lt; 0），资本从外国流入（NCO &lt; 0）</li>\n</ul>\n<p>Y = C + I + G + NX</p>\n<p>国民储蓄 S = Y - C - G -&gt; S = I + NX</p>\n<p>因为净出口等于资本净流出 NX = NCO 最终得到 S = I + NCO 即 储蓄 = 国内投资 + 资本净流出</p>\n<p>资本净流出：国民储蓄减去国内投资，即国民储蓄中（直接或间接）用于国外投资的部分 资本净流出 = 储蓄 – 国内投资</p>\n<p>名义汇率：人们用一国通货交换另一国通货的比率</p>\n<ul>\n<li>每一美元对应的国外通货的单位数</li>\n<li>国外一单位通货对应的美元的单位数</li>\n</ul>\n<p>实际汇率：一个人用一国物品与服务交换另一国物品与服务的比率</p>\n<p>实际汇率＝名义汇率 × 国内价格 / 国外价格 Real exchange rate = (e X P) / P*</p>\n<p>购买力平价理论：是解释通货的汇率变化的最简单和最广泛接受的理论，基于所谓的一价法则。一单位通货应该在所有国家购买到同等数量的物品</p>\n<p>购买力平价的局限性：</p>\n<ul>\n<li>许多物品都不太容易从一国卖到或运到另一国</li>\n<li>在不同国家生产的可贸易物品不总是完全替代品</li>\n</ul>\n<p>在国内，物价水平是 P ，因此在国内 1 美元的购买力是 1/P</p>\n<p>在国外，物价水平是 P* ，因此在国外 1 单位外币的购买力是 1/P*</p>\n<p>1 美元可以交换 e 单位外国通货，因此 1 单位美元在国外的购买力是 e/P*</p>\n<p>由于在两个国家 1 美元的购买力相同：</p>\n<ul>\n<li>1/P = e/P*</li>\n<li>1 = eP/P*</li>\n<li>e = P*/P</li>\n</ul>\n<h2 id=\"开放经济的宏观经济理论\"><a class=\"anchor\" href=\"#开放经济的宏观经济理论\">#</a> 开放经济的宏观经济理论</h2>\n<p>开放经济的重要宏观经济变量</p>\n<ul>\n<li>净出口 net exports</li>\n<li>资本净流出 net capital outflow</li>\n<li>名义与实际汇率 nominal and real exchange rates</li>\n</ul>\n<p>可贷资金市场：在国内的可贷资金市场上，均衡利率水平下，人们想要储蓄的数量恰好平衡了所需的投资数量</p>\n<ul>\n<li>可贷资金的供给来自于国内储蓄（SD）, 国民储蓄（S） 减去资本净流出，即储蓄者在国内的储蓄</li>\n<li>可贷资金的供求依赖于实际利率</li>\n<li>利率调整以使可贷资金的供求平衡</li>\n</ul>\n<p>外汇市场：NCO = NX 外汇市场的美元（和外币）供求最终平衡</p>\n<ul>\n<li>平衡外汇市场供求的价格是实际汇率</li>\n</ul>\n<p>外汇市场上，实际汇率调整以平衡美元的供给（来自于资本净流出）与美元的需求（来自于净出口）。</p>\n<p>资本净流出将可贷资金市场与外汇市场联系起来</p>\n<p>开放经济的重要宏观经济变量的数量和变化</p>\n<ul>\n<li>政府预算赤字 Government budget deficits</li>\n<li>贸易政策 Trade policies</li>\n<li>政治与经济稳定性 Political and economic stability</li>\n</ul>\n<p>贸易限制增加了净出口，也增加了外汇市场上对美元的需求</p>\n<p>资本外逃：资金大量和突然地转移出某国，一般是由于政治不稳定</p>\n<h2 id=\"总需求与总攻击\"><a class=\"anchor\" href=\"#总需求与总攻击\">#</a> 总需求与总攻击</h2>\n<p>衰退：实际 GDP 下降、收入减少、失业上升的时期</p>\n<ul>\n<li>当衰退发生时，实际 GDP 和其他一些衡量收入、支出和生产的指标都会下降，失业上升。</li>\n</ul>\n<p>萧条：严重的衰退</p>\n<p>经济波动的三个关键事实</p>\n<ul>\n<li>经济波动是不规则和不可预测的\n<ul>\n<li>经济当中的波动常常被称作经济周期（或译商业周期）</li>\n</ul>\n</li>\n<li>大多数宏观经济变量一起波动</li>\n<li>随着产出下降，失业率上升</li>\n</ul>\n<p>古典经济学的基本假设是古典二分法与货币中性，名义变量不会影响人们的生活，也不会影响真实变量。</p>\n<p>总需求与总供给模型来解释经济活动围绕其长期趋势的短期波动</p>\n<p>总需求曲线：家庭、企业或政府在任一价格水平上想要购买的物品与服务的数量</p>\n<p>总需求曲线向下倾斜原因：</p>\n<ul>\n<li>价格水平与消费：财富效应\n<ul>\n<li>价格水平的下降提高了货币的真实价值，使得消费者更加富有，鼓励他们支出更多</li>\n</ul>\n</li>\n<li>价格水平与投资：利率效应\n<ul>\n<li>更低的价格水平降低了利率，这鼓励了对投资品的更大支出</li>\n</ul>\n</li>\n<li>价格水平与净出口：汇率效应\n<ul>\n<li>价格水平下降导致了利率下降，实际汇率就会贬值，这又刺激了净出口，净出口支出的增加意味着物品与服务的需求数量更大</li>\n</ul>\n</li>\n</ul>\n<p>总需求曲线移动：</p>\n<ul>\n<li>来自消费的移动 Shifts arising from Consumption\n<ul>\n<li>股市涨跌 Stock market boom/crash</li>\n<li>关于消费与储蓄权衡的偏好改变 Preferences changes: consumption/saving tradeoff</li>\n<li>增税减税 Tax hikes/cuts</li>\n</ul>\n</li>\n<li>来自投资的移动 Shifts arising from Investment\n<ul>\n<li>更好的技术 Better technology</li>\n<li>乐观或悲观的预期 Expectations, optimism/pessimism</li>\n<li>货币政策 Monetary policy</li>\n<li>投资税收减免 Investment Tax Credit</li>\n</ul>\n</li>\n<li>来自政府购买的移动  Shifts arising from Government Purchases\n<ul>\n<li>增加联邦国防开支 Increase on federal defense spending</li>\n<li>州或地方政府新修公路或学校 State &amp; local spending on new roads, schools</li>\n</ul>\n</li>\n<li>来自净出口的移动 Shifts arising from Net Exports\n<ul>\n<li>欧洲经济繁荣或衰退 Booms/recessions in Europe</li>\n<li>由于外汇市场上国际投机行为带来的货币升值或贬 29 值 Appreciation/depreciation resulting from international spe</li>\n</ul>\n</li>\n</ul>\n<p>总供给曲线：企业在任一价格水平上生产和销售的物品与服务的数量</p>\n<p>总供给曲线向上倾斜原因：</p>\n<ul>\n<li>粘性工资理论 The Sticky-Wage Theory\n<ul>\n<li>名义工资的调整是缓慢的</li>\n</ul>\n</li>\n<li>错觉理论 The Misperceptions Theory\n<ul>\n<li>总体价格水平的下降，暂时地误导供给者，使他们认为是他们产品的价格下降了</li>\n</ul>\n</li>\n<li>粘性价格理论 The Sticky-Price\n<ul>\n<li>某些物品与服务的价格为适应经济状况变化所进行的调整是迟缓的</li>\n</ul>\n</li>\n</ul>\n<p>总供给曲线移动：</p>\n<ul>\n<li>来自预期价格水平的移动 Shifts arising from the Expected Price Level</li>\n<li>来自自然产量率的变动 Shifts arising from the natural level of output\n<ul>\n<li>来自劳动的移动 Shifts arising from Labor</li>\n<li>来自资本的移动 Shifts arising from Capital</li>\n<li>来自自然资源的移动 Shifts arising from Natural Resources</li>\n<li>来自技术知识的移动 Shifts arising from Technological Knowledge</li>\n</ul>\n</li>\n</ul>\n<p>短期总供给曲线向上倾斜，长期总供给曲线是垂直的</p>\n<p>长期总供给曲线垂直于自然产量率处</p>\n<p>预期物价水平的变动也会引起曲线移动，预期更高时，曲线左移，预期更低时曲线右移。</p>\n<p>预期价格水平（Pe）：衡量人们对价格水平的预期值</p>\n<p>产品供给量＝自然产量率＋ a×(实际价格水平－预期价格水平) 即 Y=Yn+aX (P-Pe)</p>\n<p>经济波动的两大原因：</p>\n<ul>\n<li>总需求移动 Shifts in aggregate demand</li>\n<li>总供给移动 Shifts in aggregate supply</li>\n</ul>\n<p>滞胀是产出下降且价格上升的时期。</p>\n<h2 id=\"货币和财政政策对总需求的影响\"><a class=\"anchor\" href=\"#货币和财政政策对总需求的影响\">#</a> 货币和财政政策对总需求的影响</h2>\n<p>流动性偏好理论，利率的调整使货币供给与货币需求平衡</p>\n<p>中央银行控制货币供给的途径：</p>\n<ul>\n<li>公开市场运作 Open-market operations</li>\n<li>改变法定准备金 Changing the reserve requirements</li>\n<li>改变贴现率 Changing the discount rate</li>\n</ul>\n<p>总需求曲线向右下倾斜的三个因素：</p>\n<ul>\n<li>财富效应：较低的物价水平提高了家庭持有货币的真实价值</li>\n<li>利率效应：较低的物价水平减少了人们想要持有的货币量</li>\n<li>汇率效应：当较低的物价水平降低了利率时，投资者把他们的部分资金转移到国外，以寻求更高的回报</li>\n</ul>\n<p>价格水平与物品及服务的需求量的负向关系</p>\n<p>货币供给：</p>\n<ul>\n<li>增加货币供给，它降低了利率，增加了给定价格水平下物品与服务的需求量，将总需求曲线向右移动</li>\n<li>紧缩货币供给，它提高了利率，减少了给定价格水平下物品与服务的需求量，将总需求曲线向左移动</li>\n</ul>\n<p>货币供给：美联储可以通过公开市场买卖政府债券或改变贴现率或修改法定准备金等手段调整货币供给，因此货币供给只和美联储政策有关，与利率无关。这条曲线是垂直的</p>\n<p>货币需求：利率是持有货币的机会成本，利率上升提高了这个成本，因此货币需求向右下方倾斜</p>\n<p>财政政策：政府对于政府购买或税收的整体水平的选择</p>\n<p>政府购买的改变的两个宏观效应：</p>\n<ul>\n<li>乘数效应 The multiplier effect：当扩张性财政政策增加了收入，从而增加了消费支出时引起的总需求的额外变动。乘数效应往往扩大财政政策对总需求的影响。</li>\n<li>挤出效应 The crowding-out effect：当扩张性财政政策引起利率上升，从而减少了投资支出时所引起的总需求减少。挤出效应往往减少财政政策对总需求的影响。</li>\n</ul>\n<p>税收政策变化会直接影响人们的消费欲望。但是影响幅度取决于家庭对税收变动持久性的判断。判断越持久，影响越大。</p>\n<h2 id=\"通货膨胀与失业质检的短期权衡取舍-宏观经济政策的六个争论\"><a class=\"anchor\" href=\"#通货膨胀与失业质检的短期权衡取舍-宏观经济政策的六个争论\">#</a> 通货膨胀与失业质检的短期权衡取舍、宏观经济政策的六个争论</h2>\n<p>在长期中，自然失业率受最低工资法、工会、效率工资等影响，通货膨胀率依赖于货币数量的增长，通货膨胀和失业基本是互不相关的问题</p>\n<p>在长期中，社会面临着失业与通货膨胀之间的短期权衡，如果扩张总需求，能够降低失业，但必须以更高的通货膨胀为代价；如果紧缩总需求，能够降低通货膨胀，但必须以暂时更高的失业率为代价</p>\n<p>菲利普斯曲线：失业率与通货膨胀率的短期组合，它源于总需求曲线的移动沿着短期总供给曲线改变了经济</p>\n<p>菲利普斯曲线所描述的通货膨胀与失业之间的权衡取舍只在短期中成立。在长期中，预期通货膨胀根据实际通货膨胀的变动进行调整，而短期菲利普斯曲线也会移动。</p>\n<p>短期菲利普斯曲线也会由于总供给冲击而移动。</p>\n<p>供给冲击：直接影响企业的生产成本因而影响其价格制定的事件</p>\n<p>长期菲利普斯曲线：线垂直于自然失业率处</p>\n<p>预期通货膨胀率：衡量了人们预计整体价格水平将变化多少</p>\n<p>失业率 = 自然失业率 - a (实际通货膨胀 - 预期通货膨胀)</p>\n<p>牺牲率：在降低通胀的过程中，每降低一个百分点的通胀率，所损失的年度产出的百分比数字</p>\n<p>当美联储抑制货币供给的增长以降低通胀时，它使经济沿着短期菲利普斯曲线移动，导致短期的高失业。</p>\n<p>反通货膨胀的代价依赖于通胀预期下降有多快</p>\n<p>采取货币政策与财政决策稳定经济</p>\n<ul>\n<li>正方：货币政策与财政政策可以稳定总需求，从而稳定生产和就业</li>\n<li>反方：币政策与财政政策有相当长的时滞，经济状况很容易发生变动</li>\n</ul>\n<p>政府反衰退应该增加支出还是减税</p>\n<ul>\n<li>增加支出：传统凯恩斯主义表明增加政府购买比减税更能增加总需求</li>\n<li>减税：减税对比政府购买分散了支出决策，绕开了不可靠的政治过程</li>\n</ul>\n<p>货币政策应该按规则制定还是相机抉择</p>\n<ul>\n<li>规则制定：灵活度过高会让让滥用权力没有限制，同时还容易存在政策的前后不一致性，影响人们对通货膨胀的预期</li>\n<li>相机抉择：能更快速地应对经济形式的变化</li>\n</ul>\n<p>应该把零通货膨胀作为目标</p>\n<ul>\n<li>正方：通胀带来真实成本</li>\n<li>反方：零通胀好处不大，实现零通胀的成本很大，理的通货膨胀不会给人们带来负担，还能留下更大的缓冲区域</li>\n</ul>\n<p>政府应该平衡预算</p>\n<ul>\n<li>正方：更高的政府债务给了后代更大的负担，降低了国民储蓄引起真实利率上升和投资减少</li>\n<li>反方：下一代人身上背的债务被夸大，从一生的收入来相比，债务并不算多</li>\n</ul>\n<p>鼓励储蓄而修改税法</p>\n<ul>\n<li>正方：各种税收政策抑制了储蓄需求，会减少国民储蓄</li>\n<li>反方：税收有助于增大公共储蓄，同时合理的征税也可以保证储蓄</li>\n</ul>\n",
            "tags": [
                "经济学原理"
            ]
        },
        {
            "id": "https://www.taoidle.com/2021/03/27/IT%E8%A1%8C%E4%B8%9A%E5%B2%97%E4%BD%8D%E9%83%BD%E6%9C%89%E5%93%AA%E4%BA%9B/",
            "url": "https://www.taoidle.com/2021/03/27/IT%E8%A1%8C%E4%B8%9A%E5%B2%97%E4%BD%8D%E9%83%BD%E6%9C%89%E5%93%AA%E4%BA%9B/",
            "title": "IT行业岗位都有哪些",
            "date_published": "2021-03-27T12:18:51.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>刚离职，未来的路怎么走需要好好规划一下。个人的兴趣还是在技术上，整理一下 IT 行业技术岗位有哪些，调整一下状态该投简历了。</p>\n<h2 id=\"技术岗与非技术岗怎么选择\"><a class=\"anchor\" href=\"#技术岗与非技术岗怎么选择\">#</a> 技术岗与非技术岗怎么选择？</h2>\n<p>在国内，特别是互联网行业，技术岗位通常等于青春饭，在年轻的时候学习相对容易，年龄越大越难学习。如果是有良好的技术底子优先选择从事技术岗，先做技术再做非技术转行简单，而非技术往往与思维模式、沟通技巧等因素有关，这些因素通常随着年龄的增长而增强，但年龄大了再从非技术转技术本质上是逆生物规律的过程，会浪费更多的时间和精力。</p>\n<p>当工作几年后感觉已经达到自己做技术能力的天花板后可以再考虑转产品经理等非技术岗，有良好的技术基础的情况下做非技术岗会如虎添翼。</p>\n<h2 id=\"互联网与传统行业怎么选择\"><a class=\"anchor\" href=\"#互联网与传统行业怎么选择\">#</a> 互联网与传统行业怎么选择？</h2>\n<p>互联网行业最大的优点就是薪资高，非常的高。同等条件下，互联网大厂的年薪可以达到传统行业的 2~3 倍，甚至更高。缺点是工作强度很大，在互联网大厂 996 是非常常见的，可以说为了赚钱舍弃生活，并且人员流动相对比较频繁。</p>\n<p>传统行业优点是相对互联网行业来说稳定，通常情况下，不是主动离职一般不会有人员变动，基本一个坑位占着到晋升或者主动离职为止。</p>\n<h2 id=\"大公司和小公司怎么选择\"><a class=\"anchor\" href=\"#大公司和小公司怎么选择\">#</a> 大公司和小公司怎么选择？</h2>\n<p>首先明确一点，不管是大公司还是小公司都有很厉害的人，但也都有半吊子。</p>\n<p>大公司的优势在于工作流程非常的规范，并且由于业务体量大，同一个岗位下小公司很难接触到的大公司的技术深度，代码规范，花活少；劣势在于由于工作上非常规范化流程化，那本质上你就是螺丝钉，少了你对其它同事影响也低，另一个点在大公司的体系下晋升难度大。</p>\n<p>小公司的优势个人能力强容易受到老板的赏识，容易接近权力的中心，并且由于个人与公司业务强绑定，通常老板不会让你跑路而是想办法留人。对于喜欢钻研的人，所学所研究的技术更容易有实战的机会。在公司业务上容易直接对接到客户，对人脉的积累有一定作用。但对于水平一般，本身兴趣不在这一行为了生活而工作的人来说就不是最佳选择，小公司的环境通常比较混乱，不适合这类人的成长。</p>\n<p>上面说的是技术类岗位。非技术类岗位小公司在大公司面前没有任何选择的空间，优先考虑大公司，公司越大流程基本越规范，标准化规范化的流程对于非技术类岗位来说是非常重要的，而往往小公司都是混乱不堪的，考虑职业上的成长大公司是不二之选。</p>\n<p>最终怎么选择与个人情况强相关。如果兴趣爱好就是 IT 技术或者不愿意高强度工作那可以考虑小公司，否则优先选择大公司。</p>\n<h2 id=\"职业规划怎么做\"><a class=\"anchor\" href=\"#职业规划怎么做\">#</a> 职业规划怎么做？</h2>\n<p>首先理清楚工作的根本逻辑，根据战略咨询师巴德・卡德尔的三种准则，工作本质上是在能赚钱的、喜欢做的、擅长做的三者之间找平衡点。</p>\n<p>招聘市场的需求决定了工作的收入，也就是能赚钱的，个人技能即擅长做的决定了能否高效的完成工作，而个人兴趣是喜欢做的是工作动力的来源。</p>\n<p>行业趋势决定了人才供求关系，反映在招聘市场上就是多少钱。具体到 IT 行业现状就是低端人才溢出、中端人才相对饱和、高端人才稀缺。</p>\n<p>那怎么判断个人兴趣，最简单的方法就是做什么事情能够让你全神贯注、孜孜不倦就是你的个人兴趣。比如我某个合租舍友他就可以打一天游戏，这就是兴趣。另一个就是做这件事你是可以投入时间和精力但是不求回报的，做完你有满足感、成就感这就是个人兴趣。</p>\n<p>个人技能这里指的是你的优势，也就是在某个领域有专项技能或者有比同龄人更多的积累。</p>\n<h3 id=\"行业的选择\"><a class=\"anchor\" href=\"#行业的选择\">#</a> 行业的选择</h3>\n<p>首当其冲的就是一个问题，怎么知道一个行业是否有前途？最简单的方法就是去问这个行业的从业者。如果没有这样的朋友那就去找行业分析报告。</p>\n<p>接下来就是根据行业选择一座城市。比如说我从事 IT 行业，那在广州省内 IT 行业哪里用人多？哪里薪资高？那只能是珠三角，珠三角中只有广深企业多，招聘人数多，机会多，薪资高。</p>\n<p>最后是选择岗位，那就要了解这个行业的岗位都有哪些，都是在做什么，比如 IT 行业，你可以是后端工程师、数据分析师，也可以是个电话客服。</p>\n<h3 id=\"清晰的自我认知\"><a class=\"anchor\" href=\"#清晰的自我认知\">#</a> 清晰的自我认知</h3>\n<p>首先要思考自己以后想成为什么样的人，想过什么样的生活，而不是随大流选择行业和职业，做了几年后觉得这些不是自己想要的，然后推到重来。</p>\n<p>其次要明白自己的优点、缺点，性格上的特点，这些对于职业的选择非常的重要。比如一个肯钻研、行动力强、逻辑思维能力强但表达能力欠缺、交际能力较差的人相对来说就适合技术类岗位；一个全局观强，知识面广，逻辑思维能力强，沟通能力强但技术深度不够的人相对来说就适合产品类岗位。</p>\n<h3 id=\"职业生涯的规划\"><a class=\"anchor\" href=\"#职业生涯的规划\">#</a> 职业生涯的规划</h3>\n<ul>\n<li>\n<p>实习期：这一阶段是试错成本最低的时候，可以通过不同的实习对行业和工种进行选择，找到适合自己的行业和岗位，如果觉得不合适要换则每段实习的时间 4~6 个月为最佳，在这一阶段根据市场需求来进行选择，多尝试。</p>\n</li>\n<li>\n<p>前三年：这是职业生涯成长最快的时期，自己擅长做的事情在这个阶段是重点，个人能力的成长和资源积累在这个阶段会有一个量级的变化，不能放过任何能锻炼个人能力的机会。</p>\n</li>\n<li>\n<p>三到五年：这个阶段的打工人通常是公司里的中坚力量，由于经验的积累在市场上和公司里都有一定的溢价主动权。通常这一阶段的重点是对当前的工作继续精进的情况下提高自身的身价，常见手段就是跳槽，但也不是真的一定跳，可以通过面试的方式来对自己的身价做定位。</p>\n</li>\n<li>\n<p>五到八年：这几年会出现职业生涯的第一个转折点，常有两种情况，一个是想转型的，比如技术转非技术的，一个是继续往上走的，比如技术专家。</p>\n</li>\n</ul>\n<h2 id=\"谈谈我的职业规划\"><a class=\"anchor\" href=\"#谈谈我的职业规划\">#</a> 谈谈我的职业规划</h2>\n<p>五年内的短期目标，前三年先继续去传统行业小公司做开发，技术上 T 字形发展专精一个方向的同时，尽可能拓宽知识面，并且用这三年的时间时间靠近权力的中心，三到五年这段时间考相关的证，比如软考高级，在职称上达到副高级，同时积累市场、产品等非技术方面的知识。</p>\n<p>如果短期目标按时或者提前完成，那下一个阶段在五到八年要完成的事情是学历的提升，去考个非全日制研究生。</p>\n<p>长期目标是成为架构师，往技术管理岗走，架构师这个目标感觉通过个人努力是可以达到的，但是能否达到技术总监或者 CTO 就要看运气了。最终目标是通过人脉上积累能够有自己的团队，单干成为小老板。</p>\n<h2 id=\"it技术类优劣势\"><a class=\"anchor\" href=\"#it技术类优劣势\">#</a> IT 技术类优劣势</h2>\n<h3 id=\"优势\"><a class=\"anchor\" href=\"#优势\">#</a> 优势</h3>\n<ul>\n<li>\n<p>收入相对较高</p>\n<p>同等学历和工作经验情况下，IT 行业技术类岗位相对其它行业和同行业非技术类岗位收入都高。</p>\n</li>\n<li>\n<p>社交简单</p>\n<p>搞技术的人大部分都是直男，有啥说啥，一根筋。</p>\n</li>\n<li>\n<p>相对公平，靠能力吃饭</p>\n</li>\n</ul>\n<h3 id=\"劣势\"><a class=\"anchor\" href=\"#劣势\">#</a> 劣势</h3>\n<ul>\n<li>\n<p>如果从事互联网行业则青春饭严重</p>\n</li>\n<li>\n<p>社交圈小，积累人脉全靠运气</p>\n</li>\n</ul>\n<h2 id=\"技术类岗位\"><a class=\"anchor\" href=\"#技术类岗位\">#</a> 技术类岗位</h2>\n<h3 id=\"技术类管理\"><a class=\"anchor\" href=\"#技术类管理\">#</a> 技术类管理</h3>\n<p>技术管理岗包括 CTO、技术总监、运维总监、架构师等。这些职位与刚入职场的新人无关。</p>\n<h3 id=\"基础职位\"><a class=\"anchor\" href=\"#基础职位\">#</a> 基础职位</h3>\n<p>如果是软件公司则一般分为前端开发、后端开发、Android/iOS 开发、算法、测试、运维这几大类。以下所提及的岗位和技术栈仅供参考，根据公司规模大小不同，岗位分工、用人标准不一所需技术栈的广度和深度也不一样。</p>\n<ul>\n<li>\n<p>前端开发：一般说的是 web 前端，通常包括开发 PC 端 / 移动端页面，小程序。前端入门极为简单、天花板明显。由于培训班泛滥，导致前端出现两极分化。所需技术包括但不限于：html、css、javascript、typescript、webpack、vue3、react、angular、uni-app、element ui、ant design 等。</p>\n</li>\n<li>\n<p>后端开发：后端开发根据编程语言的不同可以分为 java 后端、c++ 后端、php 后端、.net 后端、python 后端、golang 后端等，不同语言所用的框架也不同。根据技术方向又可以分为业务、中间件、内核等。在小公司一般没有明确的角色分配，通常服务、中间件、数据库等都要自己搞，公司大一些后才会出现分工。</p>\n<ul>\n<li>java、php 后端是目前招聘最多的，但是依然是由于培训班的问题，招聘市场上已经泛滥成灾。</li>\n<li>.net 工程师在国内相当罕见，技术栈与 windows 深度绑定。且由于 windows 授权昂贵，只有少数公司选择.net 技术栈。</li>\n<li>cpp 后端一般只有业务场景特别需要高性能的公司会招聘，或者是有老旧项目需要的公司。主要原因是 c++ 上手难度非常大，对大部分编程新手非常劝退。</li>\n<li>python 后端招聘不多，胜在开发速度快，不考虑性能的情况下可以选择 python，曾经的知乎后端就是 python 开发的。通常 python 用于数据挖掘、数据分析。</li>\n<li>golang 生态发展稳健，兼顾性能和开发速度，目前很多中大厂后台开发语言已经开始转向 Go。招聘市场环境还可以。</li>\n</ul>\n</li>\n<li>\n<p>Android/iOS 开发：iOS 和安卓客户端开发岗位，相对来说 iOS 开发上手更快，安卓则难一点，主要原因要适配各厂商的各种机型，屏幕分辨率不同，并且不同厂商对安卓系统的定制也不一样，需要针对特定的系统做优化。但是不管是 iOS 开发还是安卓开发，现在的市场存量并不多，也是处于供过于求的状态。</p>\n</li>\n<li>\n<p>算法：算法是这几年来最卷的一个岗位之一，并且方向非常多。以我目前的了解大致上有：</p>\n<ul>\n<li>业务流算法：数据结构设计，排序，搜索等，是计算机专业的基础知识，一般中高级程序员都具有这种算法的开发设计能力。</li>\n<li>计算机视觉（CV）：\n<ul>\n<li>图像处理方向：基于 OpenCV 的图像处理算法，目前除了工业领域，其它场景有被深度学习取代的趋势。</li>\n<li>深度学习方向：目前来说是天坑，小厂几乎用不到，大厂神仙打架，985 硕起步，几乎人手顶会，非常的卷。</li>\n</ul>\n</li>\n<li>深度学习：两级分化，大部分是跑模型，调个参。大佬只有一小撮。</li>\n<li>计算机图形学：涉及图形渲染、三位图像重构、光追算法等等，不止是游戏行业，工业领域也有相关应用。</li>\n<li>自然语言处理（NLP）：除了头部，大部分的公司是没有专门的团队做 nlp 的，普通的会变成调参侠。</li>\n<li>音频信号处理：这个领域需要非常深的理论知识才能设计出好的算法，差不多也是中小公司基本绝迹的岗位。</li>\n<li>SLAM：集中在机器人上，一般需要有嵌入式的底子，这个方向非常的专精，旱的旱死涝的涝死。</li>\n<li>推荐算法：数学、机器学习、编程有一定要求，但相对而言是比较好入手的一个方向。</li>\n<li>大数据：量化模型的构建，一般是由其它相关领域与数学强相关的专业人员来做。</li>\n</ul>\n</li>\n<li>\n<p>测试：大致上可分为软件测试、功能测试、自动化测试、游戏测试、细嫩测试、测试开发等。招聘市场上通常以中大公司为主，小公司测试招的少，甚至没有。技术栈通常包括但不限于以下部分：</p>\n<ul>\n<li>编程语言：至少掌握 python、java 其中一种，能够编程和脚本编写</li>\n<li>测试框架：至少掌握一种主流测试框架，比如 Selenium、Appium、JUnit、TestNG 等。</li>\n<li>自动化测试工具：熟悉常用的自动化测试工具至少两种，比如 Jenkins、Travis CI、Appium Studio、Selenium IDE 等</li>\n<li>数据库：至少掌握一种数据库管理工具和 SQL 语句编写能力</li>\n<li>性能测试：熟悉性能测试的概念和方法，能够使用性能测试工具进行压力测试和负载测试，比如 JMeter、Gatling 等</li>\n<li>web：有前后端基础知识，比如：html、css、js、http、restful api 等</li>\n</ul>\n</li>\n<li>\n<p>运维：运维也包含众多岗位，Linux 运维工程师、网络工程师、IT 技术支持等。从技术方向上，运维工程师可以是网络技术、数据库、Linux 等方面。一般只有中大厂才会对运维类岗位进行细分，小公司的运维一般包揽全部活动。技术栈通常包括但不限于以下部分：</p>\n<ul>\n<li>操作系统：Windows、Linux 系统管理，故障排查，性能优化等</li>\n<li>编程语言：至少掌握 python、shell 其中一种，能够编写脚本</li>\n<li>数据库：至少掌握 MySql 或者 mariadb 其中一种，能够进行数据库优化，了解数据库的高性能高可用</li>\n<li>NoSql：掌握 redis</li>\n<li>网络协议：掌握 TCP/IP，HTTP 等，能够进行网络诊断，故障排查和优化</li>\n<li>虚拟化技术：Docker，K8S 等，熟悉容器的部署和管理</li>\n<li>负载均衡：掌握 Nginx、LVS、HAProxy</li>\n<li>监控和日志分析：Zabbix、日志系统 ELK (ElasticSearch,Logstash,Kibana)，能够进行系统监控和故障排查</li>\n<li>常见服务：掌握 SSH、FTP、DNS 等</li>\n</ul>\n</li>\n</ul>\n<hr />\n<p>TIPS：以下是非技术岗，基本与写代码没啥关系</p>\n<h2 id=\"产品类\"><a class=\"anchor\" href=\"#产品类\">#</a> 产品类</h2>\n<h3 id=\"产品类管理\"><a class=\"anchor\" href=\"#产品类管理\">#</a> 产品类管理</h3>\n<p>产品类管理岗有产品总监、项目总监等。</p>\n<h3 id=\"基础岗位\"><a class=\"anchor\" href=\"#基础岗位\">#</a> 基础岗位</h3>\n<p>基础岗位大致上有产品经理、产品专员、产品助理、产品策划、项目管理、项目助理等。</p>\n<ul>\n<li>产品经理：常见工作内容不限于需求分析、产品调研、可行性分析、原型设计、生命周期管理等等。由于产品这个岗位有与生俱来的创造性，很多人会被吸引，想着做出伟大的产品。这是目前非技术岗最卷的岗位之一。几乎所有专业的人都可以投递的一个岗位，竞争非常激烈，大厂对文凭卡的非常死，本科生基本非 985 不用，硕士研究生 211 也能卷进去。中厂不会对文凭卡的非常死，但也基本不会有大专生，竞争依旧恐怖，这里会出现双非一本、211 985、普通本科、双非硕士、211 硕士。小厂基本属于不去状态，小厂对产品这个岗位的培养性价值太低，但是相对的门槛也低，大专生也收，进去了能否锻炼到能力全看自身本事，大部分人属于打杂状态，真正能力有提升的一般一两年就跳槽了。</li>\n<li>产品专员：工作内容与产品经理差不多，要求相对低一些。</li>\n<li>产品助理：工作内容看上面两个安排，要求更低。入职中大厂的应届生基本需要经历这个时期。</li>\n<li>项目经理：管控项目的进度，需要直接与开发打交道，通常具有技术背景或开发人员出身。必须具有强执行力和对细节的掌控能力，同时沟通能力强，协调各方资源让项目如期上线。</li>\n<li>项目助理：与产品助理跟产品经理的关系同理。</li>\n</ul>\n<h2 id=\"设计类\"><a class=\"anchor\" href=\"#设计类\">#</a> 设计类</h2>\n<h3 id=\"设计类管理\"><a class=\"anchor\" href=\"#设计类管理\">#</a> 设计类管理</h3>\n<p>设计类管理岗位有设计总监、设计主管、交互设计主管、交互设计总监等。</p>\n<h3 id=\"基础岗位-2\"><a class=\"anchor\" href=\"#基础岗位-2\">#</a> 基础岗位</h3>\n<p>大体可以分为两大类：视觉设计类和交互设计类。</p>\n<p>视觉设计类又可分为 UI 设计师、平面设计师、视觉设计、插画设计、美术设计师、多媒体设计师、广告设计师、原画师、游戏特效、美工等</p>\n<p>交互设计类又可分为交互设计师、网页交互设计师等，在一些中小公司交互设计的工作会交给产品经理一并完成。</p>\n<p>设计类岗位常见技能如下：</p>\n<ul>\n<li>Photoshop</li>\n<li>Illustrator</li>\n<li>AE</li>\n<li>PR</li>\n<li>C4D</li>\n<li>3dmax</li>\n<li>AutoCAD</li>\n<li>Sketch</li>\n<li>Painter</li>\n<li>Dreamweaver</li>\n<li>Axure</li>\n<li>摄影</li>\n<li>绘画</li>\n</ul>\n<p>简单谈一下设计类的几个岗位：</p>\n<ul>\n<li>UI 设计师：就业市场非常饱和，薪资方面也呈两极分化。工作上有标准的流程和行业规范，设计上的规范性和可行性死这个岗位的考量标准。</li>\n<li>平面设计师：存在已久的老岗位，薪资上不去，工作上以线下业务为主，比如海报、印刷、画册等，杂活很多。</li>\n<li>视觉设计师：一般情况下是杂活最多的，公司里有设计类的活都可以往这里丢。</li>\n<li>插画师：工作内容以绘画为主，给公司绘制插图、设计动画形象等等。</li>\n<li>美工：通常来讲就是 P 图的，比如电商中制作店铺图片、详情页图片，是设计类岗位里比较低端的工种。最近几年也有让美工做视频的趋势。</li>\n</ul>\n<h2 id=\"运营类\"><a class=\"anchor\" href=\"#运营类\">#</a> 运营类</h2>\n<h3 id=\"运营类管理岗\"><a class=\"anchor\" href=\"#运营类管理岗\">#</a> 运营类管理岗</h3>\n<p>运营类管理岗位有运营总监、COO 等。</p>\n<h3 id=\"基础职位-2\"><a class=\"anchor\" href=\"#基础职位-2\">#</a> 基础职位</h3>\n<p>大致上有产品运营、用户运营、游戏运营、运营专员、新媒体运营、海外运营、内容编辑、文案策划等。</p>\n<h2 id=\"市场类\"><a class=\"anchor\" href=\"#市场类\">#</a> 市场类</h2>\n<h3 id=\"市场类管理\"><a class=\"anchor\" href=\"#市场类管理\">#</a> 市场类管理</h3>\n<p>市场内管理岗有市场总监、渠道总监、创意总监等</p>\n<h3 id=\"基础职位-3\"><a class=\"anchor\" href=\"#基础职位-3\">#</a> 基础职位</h3>\n<p>大致上有市场营销、市场策划、市场顾问、市场推广、品牌专员、广告专员、商务专员、网络营销等。</p>\n<h3 id=\"基础职位-4\"><a class=\"anchor\" href=\"#基础职位-4\">#</a> 基础职位</h3>\n<h2 id=\"销售类\"><a class=\"anchor\" href=\"#销售类\">#</a> 销售类</h2>\n<h3 id=\"销售类管理\"><a class=\"anchor\" href=\"#销售类管理\">#</a> 销售类管理</h3>\n<p>销售类管理岗包括销售总监、区域总监、团队经理等</p>\n<h3 id=\"基础职位-5\"><a class=\"anchor\" href=\"#基础职位-5\">#</a> 基础职位</h3>\n<p>大致上有销售专员、销售经理、销售顾问、客服代表、客户经理、渠道销售、电话销售等</p>\n<h2 id=\"职能类\"><a class=\"anchor\" href=\"#职能类\">#</a> 职能类</h2>\n<p>大致上可以分为人力资源类、行政类、财务类、法务类等</p>\n<ul>\n<li>人力资源：招聘经理、培训经理、交付管理经理、招聘专员、人力数据分析专员、薪资福利经理、绩效考核经理、培训经理等。</li>\n<li>行政：前台、行政、助理、文秘等</li>\n<li>财务：会计、出纳、财务、税务、审计等</li>\n<li>法务：法务、专利等</li>\n</ul>\n",
            "tags": [
                "科普",
                "职业规划"
            ]
        },
        {
            "id": "https://www.taoidle.com/2021/01/15/%E8%AE%A9%E6%88%91%E7%9C%8B%E7%9C%8B%E8%BF%98%E6%9C%89%E5%95%A5%E5%9D%91%E6%B2%A1%E5%A1%AB/",
            "url": "https://www.taoidle.com/2021/01/15/%E8%AE%A9%E6%88%91%E7%9C%8B%E7%9C%8B%E8%BF%98%E6%9C%89%E5%95%A5%E5%9D%91%E6%B2%A1%E5%A1%AB/",
            "title": "让我看看还有啥坑没填",
            "date_published": "2021-01-15T12:11:45.000Z",
            "content_html": "<h2 id=\"编程类\"><a class=\"anchor\" href=\"#编程类\">#</a> 编程类</h2>\n<ul>\n<li><s>opencv</s></li>\n<li><s>shell</s></li>\n<li><s>uboot</s></li>\n<li><s>linux</s></li>\n<li><s>docker</s></li>\n<li><s>tensorflow</s></li>\n<li><s>pytorch</s></li>\n<li><s>vue3</s></li>\n<li><s>php</s></li>\n<li><s>laravel</s></li>\n<li><s>redis</s></li>\n<li><s>kafka</s></li>\n<li><s>rabbitmq</s></li>\n<li><s>swift</s></li>\n<li><s>typescript</s></li>\n<li><s>nodejs</s></li>\n<li><s>postgresql</s></li>\n<li><s>vue3</s></li>\n<li><s>element ui</s></li>\n<li><s>angular</s></li>\n<li><s>material design</s></li>\n<li><s>ant design</s></li>\n<li><s>c#</s></li>\n<li><s>.net</s></li>\n<li><s>rust</s></li>\n<li><s>tauri</s></li>\n<li>c++ 20</li>\n<li>naive ui</li>\n</ul>\n<h2 id=\"电子类\"><a class=\"anchor\" href=\"#电子类\">#</a> 电子类</h2>\n<ul>\n<li><s>焊接</s></li>\n<li><s>stm32f1</s></li>\n<li><s>altium designer</s></li>\n<li><s>stm32f4</s></li>\n<li><s>stm32 hal</s></li>\n<li><s>free rtos</s></li>\n<li><s>rt thread</s></li>\n<li><s>uCOS</s></li>\n<li><s>stm32f0</s></li>\n<li><s>arduino</s></li>\n<li><s>esp8266</s></li>\n<li><s>esp32</s></li>\n<li>六层 Layout 设计</li>\n<li>高速 HDI 设计</li>\n</ul>\n<h2 id=\"电气类\"><a class=\"anchor\" href=\"#电气类\">#</a> 电气类</h2>\n<ul>\n<li><s>电路原理</s></li>\n<li><s>电工基础</s></li>\n<li><s>电子电力技术</s></li>\n<li>自控原理</li>\n<li>PLC</li>\n<li>工程力学</li>\n<li>电力系统分析</li>\n</ul>\n<h2 id=\"设计类\"><a class=\"anchor\" href=\"#设计类\">#</a> 设计类</h2>\n<ul>\n<li><s>Photoshop</s></li>\n<li><s>Axure</s></li>\n<li>墨刀</li>\n<li><s>Final Cut Pro</s></li>\n<li>C4D</li>\n<li><s>Fusion360</s></li>\n<li><s>AutoCAD</s></li>\n<li>Rhino</li>\n</ul>\n<h2 id=\"交叉学科\"><a class=\"anchor\" href=\"#交叉学科\">#</a> 交叉学科</h2>\n<ul>\n<li>资本论</li>\n<li>会计学基础</li>\n<li><s>经济学原理</s></li>\n<li>统计学</li>\n<li>货币金融学</li>\n<li>金融市场与金融机构基础</li>\n<li>投资学</li>\n<li><s>博弈论</s></li>\n<li>计量经济学</li>\n<li>证券市场 基本法律法规</li>\n<li>金融市场 基础知识</li>\n<li>量化交易</li>\n</ul>\n<h2 id=\"数码类\"><a class=\"anchor\" href=\"#数码类\">#</a> 数码类</h2>\n<ul>\n<li><s>手机</s></li>\n<li><s>音响</s></li>\n<li><s>耳机</s></li>\n<li><s>台式电脑</s></li>\n<li><s>笔记本电脑</s></li>\n<li><s>电视</s></li>\n<li>投影仪</li>\n</ul>\n<h2 id=\"生活类\"><a class=\"anchor\" href=\"#生活类\">#</a> 生活类</h2>\n<ul>\n<li><s>饮水机怎么选</s></li>\n<li><s>菜刀怎么选</s></li>\n<li><s>厨房锅具</s></li>\n<li><s>食用油</s></li>\n<li><s>汽车基础知识</s></li>\n<li>装修知识</li>\n<li><s>空调怎么选</s></li>\n<li><s>洗碗机怎么选</s></li>\n<li>冰箱怎么选</li>\n<li>床垫怎么选</li>\n</ul>\n<h2 id=\"博客文章\"><a class=\"anchor\" href=\"#博客文章\">#</a> 博客文章</h2>\n<ul>\n<li>嵌入式开发方式</li>\n<li><s>职业规划</s></li>\n<li>智能家居</li>\n<li><s>博客架构</s></li>\n<li><s>gpg</s></li>\n<li>图像处理</li>\n<li>git</li>\n<li><s>硬件密钥</s></li>\n<li>硬件科普</li>\n</ul>\n",
            "tags": [
                "TODO"
            ]
        },
        {
            "id": "https://www.taoidle.com/2020/10/22/Windows%E4%B8%8BClion+OpenCV%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/",
            "url": "https://www.taoidle.com/2020/10/22/Windows%E4%B8%8BClion+OpenCV%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/",
            "title": "Windows下Clion+OpenCV开发环境搭建",
            "date_published": "2020-10-22T04:11:18.000Z",
            "content_html": "<h3 id=\"准备\"><a class=\"anchor\" href=\"#准备\">#</a> 准备</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamV0YnJhaW5zLmNvbS9jbGlvbi8=\">Clion</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zb3VyY2Vmb3JnZS5uZXQvcHJvamVjdHMvbWluZ3ctdzY0L2ZpbGVzLw==\">MinGW</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbWFrZS5vcmcvZG93bmxvYWQv\">Cmake</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vcGVuY3Yub3JnL3JlbGVhc2VzLw==\">OpenCV</span></li>\n</ul>\n<h3 id=\"步骤\"><a class=\"anchor\" href=\"#步骤\">#</a> 步骤</h3>\n<ol>\n<li>\n<p>安装 Clion</p>\n</li>\n<li>\n<p>安装 MinGW 并将 MinGW\\bin 添加到环境变量</p>\n</li>\n<li>\n<p>安装 CMake</p>\n</li>\n<li>\n<p>解压 OpenCV 源码</p>\n</li>\n<li>\n<p>打开 CMake, 在第一个框中打开源码目录，第二个框为编译目录，点击 Configure</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_645ab42b1af5be15646efb3290064a98.jpg\" alt=\"\" /></p>\n<p>再次点击 Configure 红色消失</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_e4af1ce913054df34ee86ef4408fde7e.jpg\" alt=\"\" /></p>\n<p>点击 Generate</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_3c90537c4260f5537ea63ea0f55eafc6.jpg\" alt=\"\" /></p>\n</li>\n<li>\n<p>打开 CMD 进入到 MinGW-build 目录下，执行 mingw32-make</p>\n</li>\n<li>\n<p>上一步执行完成后执行 mingw32-make install，生成 install 文件夹</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_a5da3358b4fddbd6fc4dc897bd325052.jpg\" alt=\"\" /></p>\n</li>\n</ol>\n<h3 id=\"clion中使用opencv\"><a class=\"anchor\" href=\"#clion中使用opencv\">#</a> Clion 中使用 OpenCV</h3>\n<ul>\n<li>Clion 设置</li>\n</ul>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_ed7877bd36d1481e37c61faba10c778b.jpg\" alt=\"\" /></p>\n<ul>\n<li>CMakeLists.txt 文件配置</li>\n</ul>\n<pre><code>cmake_minimum_required(VERSION 3.17)\nproject(test)\nset(CMAKE_CXX_FLAGS &quot;$&#123;CMAKE_CXX_FLAGS&#125; -std=c++11&quot;)\nset(OpenCV_DIR &quot;C:\\\\OpenCV&quot;)\nset(CMAKE_MODULE_PATH $&#123;CMAKE_MODULE_PATH&#125; &quot;$&#123;CMAKE_SOURCE_DIR&#125;/cmake/&quot;)\nfind_package(OpenCV)\ninclude_directories($&#123;OpenCV_INCLUDE_DIRS&#125;)\nadd_executable(test camera_calibration_correct.cpp)\nset(OpenCV_LIBS opencv_core opencv_imgproc opencv_highgui opencv_imgcodecs)\ntarget_link_libraries(test $&#123;OpenCV_LIBS&#125;)\n</code></pre>\n",
            "tags": [
                "opencv",
                "图像处理"
            ]
        },
        {
            "id": "https://www.taoidle.com/2020/09/02/Python%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%20%E2%80%94%E2%80%94%20%E7%9B%B8%E6%9C%BA%E6%A0%87%E5%AE%9A%E3%80%81%E7%95%B8%E5%8F%98%E7%9F%AB%E6%AD%A3/",
            "url": "https://www.taoidle.com/2020/09/02/Python%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%20%E2%80%94%E2%80%94%20%E7%9B%B8%E6%9C%BA%E6%A0%87%E5%AE%9A%E3%80%81%E7%95%B8%E5%8F%98%E7%9F%AB%E6%AD%A3/",
            "title": "Python图像处理 —— 相机标定、畸变矫正",
            "date_published": "2020-09-02T09:12:15.000Z",
            "content_html": "<h2 id=\"实验数据\"><a class=\"anchor\" href=\"#实验数据\">#</a> 实验数据</h2>\n<ul>\n<li>标定图（黑白棋盘图）若干（不少于 10 张拍摄不同角度的图片，焦距不变）</li>\n</ul>\n<h2 id=\"过程\"><a class=\"anchor\" href=\"#过程\">#</a> 过程</h2>\n<ul>\n<li>每张图片提取角点信息</li>\n<li>每张图片提取亚像素角点信息</li>\n<li>相机标定</li>\n<li>畸变矫正</li>\n</ul>\n<h2 id=\"内参数矩阵-畸变系数\"><a class=\"anchor\" href=\"#内参数矩阵-畸变系数\">#</a> 内参数矩阵、畸变系数</h2>\n<ul>\n<li>这里保存为 json 文件</li>\n</ul>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"mtx\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token number\">3096.855023641478</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token number\">1029.4641305618723</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token number\">3091.0248015384295</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token number\">333.24889640636945</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token number\">1.0</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token property\">\"dist\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token number\">-0.102230276138444</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token number\">-6.080581251041141</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token number\">0.013564529498038387</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token number\">-0.0027957254737596593</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token number\">39.277124343630284</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"矫正前图像\"><a class=\"anchor\" href=\"#矫正前图像\">#</a> 矫正前图像</h2>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_46c192be1a69cf0a3d0a1e2d6e95eafb.jpg\" alt=\"\" /></p>\n<h2 id=\"矫正后图像\"><a class=\"anchor\" href=\"#矫正后图像\">#</a> 矫正后图像</h2>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_f77ee67a039c3902f6253c5f1cab1f8a.jpg\" alt=\"\" /></p>\n<h2 id=\"代码\"><a class=\"anchor\" href=\"#代码\">#</a> 代码</h2>\n<ul>\n<li>包括图片矫正、视频矫正</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> cv2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> glob</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> json</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CameraCalibration</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">calibration_init</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> pic_path<span class=\"token punctuation\">,</span> save_parameters<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\"># 亚像素角点的参数</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        criteria <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>TERM_CRITERIA_EPS <span class=\"token operator\">+</span> cv2<span class=\"token punctuation\">.</span>TERM_CRITERIA_MAX_ITER<span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.001</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\"># 标定板角点的位置</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        objp <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>width <span class=\"token operator\">*</span> height<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>float32<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        objp<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>mgrid<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>width<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>height<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>T<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\"># 存储点</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        obj_points<span class=\"token punctuation\">,</span> img_points <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        images <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">.</span>glob<span class=\"token punctuation\">(</span>pic_path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> images<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            gray <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2GRAY<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token comment\"># 棋盘格角点</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            ret<span class=\"token punctuation\">,</span> corners <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>findChessboardCorners<span class=\"token punctuation\">(</span>gray<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token comment\"># 存储角点</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token keyword\">if</span> ret<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                cv2<span class=\"token punctuation\">.</span>cornerSubPix<span class=\"token punctuation\">(</span>gray<span class=\"token punctuation\">,</span> corners<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> criteria<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                obj_points<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>objp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                img_points<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>corners<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token comment\"># 标定</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        ret<span class=\"token punctuation\">,</span> mtx<span class=\"token punctuation\">,</span> dist<span class=\"token punctuation\">,</span> rvecs<span class=\"token punctuation\">,</span> tvecs <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>calibrateCamera<span class=\"token punctuation\">(</span>obj_points<span class=\"token punctuation\">,</span> img_points<span class=\"token punctuation\">,</span> gray<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">if</span> save_parameters<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            self<span class=\"token punctuation\">.</span>__parameters_init<span class=\"token punctuation\">(</span>mtx<span class=\"token punctuation\">,</span> dist<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ret:\"</span><span class=\"token punctuation\">,</span> ret<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mtx:\\n\"</span><span class=\"token punctuation\">,</span> mtx<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 内参数矩阵</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dist:\\n\"</span><span class=\"token punctuation\">,</span> dist<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 畸变系数   distortion cofficients = (k_1,k_2,p_1,p_2,k_3)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rvecs:\\n\"</span><span class=\"token punctuation\">,</span> rvecs<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 旋转向量  # 外参数</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tvecs:\\n\"</span><span class=\"token punctuation\">,</span> tvecs<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 平移向量  # 外参数</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__parameters_init</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> mtx<span class=\"token punctuation\">,</span> dist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        parameters_path <span class=\"token operator\">=</span> <span class=\"token string\">'./parameters.json'</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span>parameters_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            os<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">(</span><span class=\"token string\">r'touch %s'</span> <span class=\"token operator\">%</span> parameters_path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            self<span class=\"token punctuation\">.</span>__write_parameters<span class=\"token punctuation\">(</span>mtx<span class=\"token punctuation\">,</span> dist<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            self<span class=\"token punctuation\">.</span>__write_parameters<span class=\"token punctuation\">(</span>mtx<span class=\"token punctuation\">,</span> dist<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@staticmethod</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__write_parameters</span><span class=\"token punctuation\">(</span>mtx<span class=\"token punctuation\">,</span> dist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./parameters.json\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            content <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"mtx\"</span><span class=\"token punctuation\">:</span> mtx<span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"dist\"</span><span class=\"token punctuation\">:</span> dist<span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">,</span> ensure_ascii<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        f<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CameraCorrect</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        self<span class=\"token punctuation\">.</span>__correct_init<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token comment\"># 畸变参数初始化</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__correct_init</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> parameters_file_path<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"./parameters.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span>parameters_file_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>parameters_file_path<span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                json_data <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>                self<span class=\"token punctuation\">.</span>mtx <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>json_data<span class=\"token punctuation\">[</span><span class=\"token string\">\"mtx\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>                self<span class=\"token punctuation\">.</span>dist <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>json_data<span class=\"token punctuation\">[</span><span class=\"token string\">\"dist\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token comment\"># 图片畸变校准</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">correct_pic</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> origin_path<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> target_path<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"./\"</span><span class=\"token punctuation\">,</span> file_name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"cor_pic\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                    file_format<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span>origin_path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        pic_height<span class=\"token punctuation\">,</span> pic_width <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        file_format <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>__calibration_pic_format<span class=\"token punctuation\">(</span>file_format<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        cv2<span class=\"token punctuation\">.</span>imwrite<span class=\"token punctuation\">(</span>target_path <span class=\"token operator\">+</span> file_name <span class=\"token operator\">+</span> <span class=\"token string\">\".\"</span> <span class=\"token operator\">+</span> file_format<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                    self<span class=\"token punctuation\">.</span>__distortion_correction<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> pic_width<span class=\"token punctuation\">,</span> pic_height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token comment\"># 视频畸变校准 (直接输出视频)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">correct_vid2vid</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> origin_path<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> target_path<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"./\"</span><span class=\"token punctuation\">,</span> file_name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"cor_vid\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>                        file_format<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"mp4\"</span><span class=\"token punctuation\">,</span> file_coding<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"mp4v\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        cap <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span>origin_path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token comment\"># 获取视频参数</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        fps<span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">,</span> vid_width<span class=\"token punctuation\">,</span> vid_height <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>__get_capture_attribute<span class=\"token punctuation\">(</span>cap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token comment\"># 格式编码校对</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>__calibration_format_coding<span class=\"token punctuation\">(</span>file_format<span class=\"token punctuation\">,</span> file_coding<span class=\"token punctuation\">)</span> <span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>            file_format<span class=\"token punctuation\">,</span> file_coding <span class=\"token operator\">=</span> <span class=\"token string\">\"mp4\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"mp4v\"</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        out <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoWriter<span class=\"token punctuation\">(</span>target_path <span class=\"token operator\">+</span> file_name <span class=\"token operator\">+</span> <span class=\"token string\">\".\"</span> <span class=\"token operator\">+</span> file_format<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>                              cv2<span class=\"token punctuation\">.</span>VideoWriter_fourcc<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>self<span class=\"token punctuation\">.</span>__get_vid_coding<span class=\"token punctuation\">(</span>file_coding<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> fps<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>                              <span class=\"token punctuation\">(</span>vid_width<span class=\"token punctuation\">,</span> vid_height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>            ret<span class=\"token punctuation\">,</span> img <span class=\"token operator\">=</span> cap<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>            <span class=\"token keyword\">if</span> ret<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>                img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>vid_width<span class=\"token punctuation\">,</span> vid_height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>                dst <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>__distortion_correction<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> vid_width<span class=\"token punctuation\">,</span> vid_height<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>                out<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>dst<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        cap<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>        out<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token comment\"># 视频畸变校准 (校准抽取所有帧)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">correct_vid2pic</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> origin_path<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> target_path<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"./\"</span><span class=\"token punctuation\">,</span> file_name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"cor_pic\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>                        file_format<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        file_format <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>__calibration_pic_format<span class=\"token punctuation\">(</span>file_format<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>        cap <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span>origin_path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>        fps<span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">,</span> vid_width<span class=\"token punctuation\">,</span> vid_height <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>__get_capture_attribute<span class=\"token punctuation\">(</span>cap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>            ret<span class=\"token punctuation\">,</span> img <span class=\"token operator\">=</span> cap<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>            <span class=\"token keyword\">if</span> ret<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>                img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>vid_width<span class=\"token punctuation\">,</span> vid_height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>                cv2<span class=\"token punctuation\">.</span>imwrite<span class=\"token punctuation\">(</span>target_path <span class=\"token operator\">+</span> file_name <span class=\"token operator\">+</span> <span class=\"token string\">\"_\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\".\"</span> <span class=\"token operator\">+</span> file_format<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>                            self<span class=\"token punctuation\">.</span>__distortion_correction<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> vid_width<span class=\"token punctuation\">,</span> vid_height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>        cap<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>        cv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>    <span class=\"token comment\"># 获取视频参数</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@staticmethod</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__get_capture_attribute</span><span class=\"token punctuation\">(</span>vid<span class=\"token punctuation\">:</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>        fps <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>vid<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FPS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 视频帧率</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>        count <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>vid<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_COUNT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 视频帧数</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>        width <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>vid<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_WIDTH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 视频宽度 vid.shape [1]</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>        height <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>vid<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_HEIGHT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 视频高度 vid.shape [0]</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>        <span class=\"token keyword\">return</span> fps<span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height</pre></td></tr><tr><td data-num=\"130\"></td><td><pre></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    <span class=\"token comment\"># 图片格式校对</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@staticmethod</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__calibration_pic_format</span><span class=\"token punctuation\">(</span>file_format<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>        <span class=\"token keyword\">if</span> file_format <span class=\"token operator\">==</span> <span class=\"token string\">\"jpg\"</span> <span class=\"token keyword\">or</span> file_format <span class=\"token operator\">==</span> <span class=\"token string\">\"png\"</span> <span class=\"token keyword\">or</span> file_format <span class=\"token operator\">==</span> <span class=\"token string\">\"bmp\"</span> <span class=\"token keyword\">or</span> file_format <span class=\"token operator\">==</span> <span class=\"token string\">\"tiff\"</span> <span class=\"token keyword\">or</span> file_format <span class=\"token operator\">==</span> <span class=\"token string\">\"tif\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>            <span class=\"token keyword\">return</span> file_format</pre></td></tr><tr><td data-num=\"136\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token string\">\"png\"</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>    <span class=\"token comment\"># 视频格式编码校对</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@staticmethod</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__calibration_format_coding</span><span class=\"token punctuation\">(</span>file_format<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> file_coding<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>        file_format<span class=\"token punctuation\">,</span> file_coding <span class=\"token operator\">=</span> file_format<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> file_coding<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>        <span class=\"token keyword\">if</span> file_format <span class=\"token operator\">==</span> <span class=\"token string\">\"mp4\"</span> <span class=\"token keyword\">and</span> file_coding <span class=\"token operator\">==</span> <span class=\"token string\">\"mp4v\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>        <span class=\"token keyword\">elif</span> file_format <span class=\"token operator\">==</span> <span class=\"token string\">\"avi\"</span> <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span>file_coding <span class=\"token operator\">==</span> <span class=\"token string\">\"yuv\"</span> <span class=\"token keyword\">or</span> file_coding <span class=\"token operator\">==</span> <span class=\"token string\">\"mpeg-1\"</span> <span class=\"token keyword\">or</span> file_coding <span class=\"token operator\">==</span> <span class=\"token string\">\"mpeg-4\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>        <span class=\"token keyword\">elif</span> file_format <span class=\"token operator\">==</span> <span class=\"token string\">\"ogv\"</span> <span class=\"token keyword\">and</span> file_coding <span class=\"token operator\">==</span> <span class=\"token string\">\"ogg vorbis\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>        <span class=\"token keyword\">elif</span> file_format <span class=\"token operator\">==</span> <span class=\"token string\">\"flv\"</span> <span class=\"token keyword\">and</span> file_coding <span class=\"token operator\">==</span> <span class=\"token string\">\"flash\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>    <span class=\"token comment\"># 获取编码参数</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@staticmethod</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__get_vid_coding</span><span class=\"token punctuation\">(</span>file_coding<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>        file_coding <span class=\"token operator\">=</span> file_coding<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>        <span class=\"token keyword\">if</span> file_coding <span class=\"token operator\">==</span> <span class=\"token string\">\"mp4v\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token string\">'mp4v'</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>        <span class=\"token keyword\">elif</span> file_coding <span class=\"token operator\">==</span> <span class=\"token string\">\"yuv\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token string\">'I420'</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>        <span class=\"token keyword\">elif</span> file_coding <span class=\"token operator\">==</span> <span class=\"token string\">\"mpeg-1\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token string\">'PIMI'</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>        <span class=\"token keyword\">elif</span> file_coding <span class=\"token operator\">==</span> <span class=\"token string\">\"mp4g-4\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token string\">'XVID'</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>        <span class=\"token keyword\">elif</span> file_coding <span class=\"token operator\">==</span> <span class=\"token string\">\"ogg vorbis\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token string\">'THEO'</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>        <span class=\"token keyword\">elif</span> file_coding <span class=\"token operator\">==</span> <span class=\"token string\">\"flash\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token string\">'FLV1'</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token string\">'mp4v'</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>    <span class=\"token comment\"># 畸变矫正</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__distortion_correction</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">,</span> origin_width<span class=\"token punctuation\">,</span> origin_height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>        <span class=\"token comment\"># 去畸变</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>        new_camera_mtx<span class=\"token punctuation\">,</span> roi <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>getOptimalNewCameraMatrix<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>mtx<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>dist<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>origin_width<span class=\"token punctuation\">,</span> origin_height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>                                                            <span class=\"token punctuation\">(</span>origin_width<span class=\"token punctuation\">,</span> origin_height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>        dst <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>undistort<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>mtx<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>dist<span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> new_camera_mtx<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>        <span class=\"token comment\"># 根据 ROI 区域裁剪图片</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>        x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height <span class=\"token operator\">=</span> roi</pre></td></tr><tr><td data-num=\"181\"></td><td><pre>        dst <span class=\"token operator\">=</span> dst<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">:</span>y <span class=\"token operator\">+</span> height<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">:</span>x <span class=\"token operator\">+</span> width<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>        dst <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span>dst<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>origin_width<span class=\"token punctuation\">,</span> origin_height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>        <span class=\"token keyword\">return</span> dst</pre></td></tr><tr><td data-num=\"184\"></td><td><pre></pre></td></tr><tr><td data-num=\"185\"></td><td><pre></pre></td></tr><tr><td data-num=\"186\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>    cal <span class=\"token operator\">=</span> CameraCalibration<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>    cal<span class=\"token punctuation\">.</span>calibration_init<span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"./pic/*.jpg\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>    cor <span class=\"token operator\">=</span> CameraCorrect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>    cor<span class=\"token punctuation\">.</span>correct_pic<span class=\"token punctuation\">(</span><span class=\"token string\">\"./pic/cm_flag_5.jpg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"./output_pic/\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>    cor<span class=\"token punctuation\">.</span>correct_vid2vid<span class=\"token punctuation\">(</span><span class=\"token string\">\"./vid/vid_demo_1.mp4\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"./output_vid/\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>    cor<span class=\"token punctuation\">.</span>correct_vid2pic<span class=\"token punctuation\">(</span><span class=\"token string\">\"./vid/vid_demo_1.mp4\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"./output_vid/\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "opencv",
                "python",
                "图像处理",
                "教程",
                "原创教程"
            ]
        },
        {
            "id": "https://www.taoidle.com/2020/07/02/manjaro%20npm%E6%8D%A2%E6%BA%90/",
            "url": "https://www.taoidle.com/2020/07/02/manjaro%20npm%E6%8D%A2%E6%BA%90/",
            "title": "manjaro npm换源",
            "date_published": "2020-07-02T13:29:20.000Z",
            "content_html": "<h2 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> pacman -S nodejs <span class=\"token function\">npm</span></pre></td></tr></table></figure><h2 id=\"换源\"><a class=\"anchor\" href=\"#换源\">#</a> 换源</h2>\n<ol>\n<li>\n<p>方法一：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> config <span class=\"token builtin class-name\">set</span> registry https://registry.npm.taobao.org</pre></td></tr></table></figure></li>\n</ol>\n<hr />\n<ol start=\"2\">\n<li>\n<p>方法二： 安装 cnpm 代替 npm</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g cnpm --registry<span class=\"token operator\">=</span>https://registry.npm.taobao.org</pre></td></tr></table></figure></li>\n</ol>\n",
            "tags": [
                "Linux",
                "manjaro",
                "nodejs",
                "npm"
            ]
        },
        {
            "id": "https://www.taoidle.com/2020/07/02/Python%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%20%E2%80%94%E2%80%94%20%E7%A9%BA%E5%9F%9F%E4%BF%A1%E6%81%AF%E9%9A%90%E8%97%8F%EF%BC%88LSB%E6%9B%BF%E6%8D%A2%EF%BC%89/",
            "url": "https://www.taoidle.com/2020/07/02/Python%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%20%E2%80%94%E2%80%94%20%E7%A9%BA%E5%9F%9F%E4%BF%A1%E6%81%AF%E9%9A%90%E8%97%8F%EF%BC%88LSB%E6%9B%BF%E6%8D%A2%EF%BC%89/",
            "title": "Python图像处理 —— 空域信息隐藏（LSB替换）",
            "date_published": "2020-07-02T06:40:04.000Z",
            "content_html": "<h2 id=\"算法描述\"><a class=\"anchor\" href=\"#算法描述\">#</a> 算法描述</h2>\n<ul>\n<li>LSB 即最低有效位，全称为 Leastsignificant Bit，LSB 隐写技术即就是通过修改 RGB 颜色分量的最低位二进制，进行信息的储存。</li>\n</ul>\n<h2 id=\"算法实现\"><a class=\"anchor\" href=\"#算法实现\">#</a> 算法实现</h2>\n<ul>\n<li>LSB 规律须知：奇数二进制最低有效位为 1，偶数为 0</li>\n<li>嵌入过程：先将嵌入信息转换为二进制流，逐个像素进行替换</li>\n<li>提取过程：先对像素进行提取，再将二进制流转为文本</li>\n</ul>\n<h2 id=\"算法缺点\"><a class=\"anchor\" href=\"#算法缺点\">#</a> 算法缺点</h2>\n<ol>\n<li>不可逆</li>\n<li>脆弱、不鲁棒</li>\n</ol>\n<h2 id=\"python代码\"><a class=\"anchor\" href=\"#python代码\">#</a> Python 代码</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> cv2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> width<span class=\"token operator\">=</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    bin_str <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'0b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>zfill<span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> bin_str</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    s <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>np<span class=\"token punctuation\">.</span>uint8<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    bin_str <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span>b <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token string\">'0b'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>zfill<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> b <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token builtin\">str</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token string\">'0b'</span> <span class=\"token operator\">+</span> bin_str<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>int8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">lsb_embed</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token comment\"># 获取通道数 F</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> channel <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>shape</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        s <span class=\"token operator\">=</span> encode<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            x <span class=\"token operator\">=</span> i <span class=\"token operator\">//</span> width</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            y <span class=\"token operator\">=</span> i <span class=\"token operator\">%</span> width</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            channel <span class=\"token operator\">=</span> i <span class=\"token operator\">//</span> <span class=\"token punctuation\">(</span>height <span class=\"token operator\">*</span> width<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            value <span class=\"token operator\">=</span> img<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> channel<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">%</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">%</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                img<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> channel<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value <span class=\"token operator\">-</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">%</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                img<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> channel<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        width<span class=\"token punctuation\">,</span> height <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>shape</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        s <span class=\"token operator\">=</span> encode<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            x <span class=\"token operator\">=</span> i <span class=\"token operator\">//</span> width</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            y <span class=\"token operator\">=</span> i <span class=\"token operator\">%</span> width</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            value <span class=\"token operator\">=</span> img<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">%</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">%</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                img<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value <span class=\"token operator\">-</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">%</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                img<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">return</span> img<span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">lsb_extract</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token comment\"># 获取通道数 F</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> channel <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>shape</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        s <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            x <span class=\"token operator\">=</span> i <span class=\"token operator\">//</span> width</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            y <span class=\"token operator\">=</span> i <span class=\"token operator\">%</span> width</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            channel <span class=\"token operator\">=</span> i <span class=\"token operator\">//</span> <span class=\"token punctuation\">(</span>height <span class=\"token operator\">*</span> width<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            value <span class=\"token operator\">=</span> img<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> channel<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token keyword\">if</span> value <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                s <span class=\"token operator\">+=</span> <span class=\"token string\">'0'</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                s <span class=\"token operator\">+=</span> <span class=\"token string\">'1'</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        width<span class=\"token punctuation\">,</span> height <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>shape</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        s <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            x <span class=\"token operator\">=</span> i <span class=\"token operator\">//</span> width</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>            y <span class=\"token operator\">=</span> i <span class=\"token operator\">%</span> width</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            value <span class=\"token operator\">=</span> img<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            <span class=\"token keyword\">if</span> value <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>                s <span class=\"token operator\">+=</span> <span class=\"token string\">'0'</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>                s <span class=\"token operator\">+=</span> <span class=\"token string\">'1'</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token keyword\">return</span> decode<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token comment\"># 嵌入</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    msg <span class=\"token operator\">=</span> <span class=\"token string\">\"hello world\"</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    pic_origin <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">'lenna.bmp'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    pic_embed<span class=\"token punctuation\">,</span> msg_len <span class=\"token operator\">=</span> lsb_embed<span class=\"token punctuation\">(</span>pic_origin<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    cv2<span class=\"token punctuation\">.</span>imwrite<span class=\"token punctuation\">(</span><span class=\"token string\">'pic_embed.bmp'</span><span class=\"token punctuation\">,</span> pic_embed<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token comment\"># 提取</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    pic_embed <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">'pic_embed.bmp'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    msg_extract <span class=\"token operator\">=</span> lsb_extract<span class=\"token punctuation\">(</span>pic_embed<span class=\"token punctuation\">,</span> msg_len<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>msg_extract<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"算法改进\"><a class=\"anchor\" href=\"#算法改进\">#</a> 算法改进</h2>\n<ol>\n<li>提取时无需输入信息长度 思路：将长度信息保存在图片某位置，在提取时先提取长度信息，再提取嵌入信息</li>\n<li>随机位置嵌入 思路：生成随机数即可，将随机数种子保存，用于保存信息的位置范围排除，其它位置范围里生成随机数</li>\n</ol>\n",
            "tags": [
                "opencv",
                "python",
                "图像处理",
                "教程",
                "原创教程"
            ]
        },
        {
            "id": "https://www.taoidle.com/2020/06/12/ubuntu20.04%E6%8D%A2%E6%BA%90/",
            "url": "https://www.taoidle.com/2020/06/12/ubuntu20.04%E6%8D%A2%E6%BA%90/",
            "title": "ubuntu20.04换源",
            "date_published": "2020-06-11T17:52:27.000Z",
            "content_html": "<p>依次执行以下命令</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token function\">vim</span>        安装vim编辑器</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span>  <span class=\"token function\">cp</span>   /etc/apt/sources.list   /etc/apt/sources.list.bak        备份源文件</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">sudo</span>  <span class=\"token function\">chmod</span>  <span class=\"token number\">777</span>  /etc/apt/sources.list         修改权限</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">sudo</span>  <span class=\"token function\">vim</span>   /etc/apt/sources.list       编辑源文件</pre></td></tr></table></figure><p>在 vim 编辑器中将原来内容替换为</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal universe</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates universe</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal multiverse</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates multiverse</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security universe</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security multiverse</pre></td></tr></table></figure><p>这里为清华源，可将链接替换为你喜欢的软件源 然后执行</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> list --upgradable </pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> upgrade</pre></td></tr></table></figure><p>结束语：啊，又水了一篇博文，快乐（不是</p>\n",
            "tags": [
                "Linux",
                "ubuntu",
                "ubuntu20.04"
            ]
        },
        {
            "id": "https://www.taoidle.com/2020/06/12/%E5%85%B3%E4%BA%8EUbuntu20.04%E5%AE%89%E8%A3%85arm-linux-gcc%E5%8F%91%E7%94%9F%E7%9A%84%E9%94%99%E8%AF%AF/",
            "url": "https://www.taoidle.com/2020/06/12/%E5%85%B3%E4%BA%8EUbuntu20.04%E5%AE%89%E8%A3%85arm-linux-gcc%E5%8F%91%E7%94%9F%E7%9A%84%E9%94%99%E8%AF%AF/",
            "title": "关于Ubuntu20.04安装arm-linux-gcc发生的错误",
            "date_published": "2020-06-11T17:30:58.000Z",
            "content_html": "<p>ubuntu20.04 安装 arm-linux-gcc 发生错误:libpng3 : Depends: libpng12-0 (&gt;= 1.2.5.0-2) but it is not installed</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_ffc711dadcd44f60ffc78cf327cc4886.jpg\" alt=\"\" /> 解决方法：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> add-apt-repository ppa:linuxuprising/libpng12</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> list --upgradable</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> --fix-broken <span class=\"token function\">install</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> gcc-arm-linux-gnueabi</pre></td></tr></table></figure>",
            "tags": [
                "ubuntu",
                "ARM",
                "arm-linux-gcc",
                "gcc"
            ]
        },
        {
            "id": "https://www.taoidle.com/2020/06/03/%E4%BD%BF%E7%94%A8esp-01s%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%94%9Fhomekit%E6%8E%A7%E5%88%B6/",
            "url": "https://www.taoidle.com/2020/06/03/%E4%BD%BF%E7%94%A8esp-01s%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%94%9Fhomekit%E6%8E%A7%E5%88%B6/",
            "title": "使用ESP-01/ESP-01S实现原生Homekit控制",
            "date_published": "2020-06-03T15:32:55.000Z",
            "content_html": "<h4 id=\"准备材料\"><a class=\"anchor\" href=\"#准备材料\">#</a> 准备材料：</h4>\n<p>从左到右分别为 ESP-01/ESP-01s 芯片 、 继电器模块 、 ESP-01/ESP-01s 烧录器</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/1591193142-WechatIMG4-scaled-e1591193170554.jpeg\" alt=\"\" /></p>\n<h4 id=\"准备固件\"><a class=\"anchor\" href=\"#准备固件\">#</a> 准备固件：</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1JhdmVuU3lzdGVtL2hhYS9yZWxlYXNlcy9kb3dubG9hZC8yLjQuNC9oYWFtYWluLmJpbg==\">haamain.bin</span> 、 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1N1cGVySG91c2UvZXNwLW9wZW4tcnRvcy9yYXcvbWFzdGVyL2Jvb3Rsb2FkZXIvZmlybXdhcmVfcHJlYnVpbHQvcmJvb3QuYmlu\">rboot.bin</span> 、 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1N1cGVySG91c2UvZXNwLW9wZW4tcnRvcy9yYXcvbWFzdGVyL2Jvb3Rsb2FkZXIvZmlybXdhcmVfcHJlYnVpbHQvYmxhbmtfY29uZmlnLmJpbg==\">blank_config.bin</span> 这里三个文件都需要下载 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1JhdmVuU3lzdGVtL2VzcC1ob21la2l0LWRldmljZXM=\">项目地址</span></p>\n<h4 id=\"准备刷写软件\"><a class=\"anchor\" href=\"#准备刷写软件\">#</a> 准备刷写软件：</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZXNwcmVzc2lmLmNvbS9zaXRlcy9kZWZhdWx0L2ZpbGVzL3Rvb2xzL2ZsYXNoX2Rvd25sb2FkX3Rvb2xfdjMuOC41XzAuemlw\">flash_download_tool</span></p>\n<h4 id=\"刷写固件\"><a class=\"anchor\" href=\"#刷写固件\">#</a> 刷写固件：</h4>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_dc60f654062ffaf51a78c08acd2bba99.jpg\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_17aaa84cfd343767b9ff2190f37112de.jpg\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_ae5295ddb67f9d167fb0cbc6e273d42b.jpg\" alt=\"\" /></p>\n<p>（这里 COM 口根据你实际选择） 点击 START 进行刷写 如下显示时为刷写完成</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_ed0e07c1fd2fb9b069d8406cadf05f73.jpg\" alt=\"\" /></p>\n<p>找到 HAA 开头的 WiFi 并连接</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_bc59846a058b421d0e9d6cb772b9d550.jpg\" alt=\"\" /></p>\n<p>在浏览器中输入 192.168.4.1 进入配置页面 复制下面配置文件输入到红框中</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"c\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"l\"</span><span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"b\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"g\"</span><span class=\"token operator\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"t\"</span><span class=\"token operator\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"a\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"t\"</span><span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"s\"</span><span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"0\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"r\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"g\"</span><span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"v\"</span><span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"1\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"r\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"g\"</span><span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"v\"</span><span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"b\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"g\"</span><span class=\"token operator\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_442a50992d699b66adc7d22091f84dd8.jpg\" alt=\"\" /></p>\n<p>选择你家的 WiFi 并在红框中输入密码</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_3601abf44598877a7b93a94c13d64c0e.jpg\" alt=\"\" /></p>\n<p>点击 Save 保存，耐心等待 7-10 分钟后芯片开始正常工作</p>\n<h4 id=\"配对苹果家庭\"><a class=\"anchor\" href=\"#配对苹果家庭\">#</a> 配对苹果家庭</h4>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_6a43f5d933a297c680519a2aab5b25e3.jpg\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_73a4d355793de9eb87f78bba7441b8c4.jpg\" alt=\"\" /> 配置文件意思</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"c\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"l\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token comment\">// 设置状态 LED 的 GPIO 引脚</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"b\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token comment\">// 按钮配置</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token property\">\"g\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token comment\">// 按钮的 GPIO 引脚</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token property\">\"t\"</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token comment\">// 时长</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token property\">\"a\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token comment\">// 附件配置</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token property\">\"t\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token comment\">// 物理类型</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token property\">\"s\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token comment\">// 启动后初始状态</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token property\">\"0\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 动作</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token property\">\"r\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>          <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token property\">\"g\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//GPIO</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token property\">\"v\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token comment\">// 值</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token property\">\"1\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 动作</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token property\">\"r\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>          <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token property\">\"g\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//GPIO</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token property\">\"v\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token comment\">// 值</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token property\">\"b\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>          <span class=\"token property\">\"g\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "Apple",
                "苹果",
                "esp8266",
                "esp01",
                "esp01s",
                "Homekit",
                "智能家居",
                "物联网"
            ]
        },
        {
            "id": "https://www.taoidle.com/2020/05/10/Android%20Studio%E8%8E%B7%E5%8F%96SHA1/",
            "url": "https://www.taoidle.com/2020/05/10/Android%20Studio%E8%8E%B7%E5%8F%96SHA1/",
            "title": "Android Studio获取SHA1",
            "date_published": "2020-05-10T08:11:21.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>使用高德地图，腾讯地图等地图 api 都需要用到 SHA1 值</p>\n<h2 id=\"步骤\"><a class=\"anchor\" href=\"#步骤\">#</a> 步骤</h2>\n<ol>\n<li>检查 Android Studio 工程下时候存在 keystore 类型文件，如果不存在则执行命令</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool -v -list -keystore keystore文件路径</pre></td></tr></table></figure><p>会出现错误</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool 错误: java.lang.Exception: 密钥库文件不存在</pre></td></tr></table></figure><ol start=\"2\">\n<li>创建密钥库文件</li>\n</ol>\n<p>在 Android Studio 中打开 Terminal，这里以创建一个 debug.keystore 为例，输入命令</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool -genkey -v -keystore debug.keystore -alias androiddebugkey -keyalg RSA -validity <span class=\"token number\">10000</span></pre></td></tr></table></figure><p>填写注册信息（可随意填写），设置密码，密码需记住后续获取 SHA1 需要用到密码</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_dda6a1e249ae12028b5cb20d65b16d4c.jpg\" alt=\"\" /></p>\n<p>查看 debug.keystore 是否生成，得到 SHA1 值（红框部分）</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool -list -v -keystore debug.keystore</pre></td></tr></table></figure><p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_523dfce26e74a850d2cd1eda3171290a.jpg\" alt=\"\" /></p>\n",
            "tags": [
                "android",
                "android studio"
            ]
        },
        {
            "id": "https://www.taoidle.com/2020/05/03/Python%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%20%E2%80%94%E2%80%94%20DCT%E5%8F%98%E6%8D%A2/",
            "url": "https://www.taoidle.com/2020/05/03/Python%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%20%E2%80%94%E2%80%94%20DCT%E5%8F%98%E6%8D%A2/",
            "title": "Python图像处理 —— DCT变换",
            "date_published": "2020-05-02T16:06:38.000Z",
            "content_html": "<h1 id=\"图像的dct变换\"><a class=\"anchor\" href=\"#图像的dct变换\">#</a> 图像的 DCT 变换</h1>\n<h2 id=\"python实现\"><a class=\"anchor\" href=\"#python实现\">#</a> python 实现</h2>\n<p>这里去除了图像的低频部分，进行 dct 变换后得到图像的骨架</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> cv2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 读取图像</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">'../res/img/baboon.bmp'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 灰度化</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2GRAY<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 显示原图</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 获取图像宽高</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>height<span class=\"token punctuation\">,</span> width <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>shape</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 对图像进行 dct 变换</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>img_dct <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>dct<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>float32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 去除部分低频信息</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>img_dct<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 进行反 dct 变换</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>img_idct <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>idct<span class=\"token punctuation\">(</span>img_dct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>uint8<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># 显示图像</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'img_dct'</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>img_dct<span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>uint8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'img_idct'</span><span class=\"token punctuation\">,</span> img_idct<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_f47ba882139a0929c17e72e8d408a598.jpg\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_4d2787e275882434e47a8ac40c2d711a.jpg\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_927e11e4879955a3bf4fdebb01ff5b73.jpg\" alt=\"\" /></p>\n<h2 id=\"cv-tool小工具中的操作\"><a class=\"anchor\" href=\"#cv-tool小工具中的操作\">#</a> CV Tool 小工具中的操作</h2>\n<h3 id=\"灰度图dct\"><a class=\"anchor\" href=\"#灰度图dct\">#</a> 灰度图 DCT</h3>\n<p>读取图像</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_79f735a75273ec5494159dfe4170b128.jpg\" alt=\"\" /></p>\n<p>进行灰度化</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_12d55d2288111f59e2fe8f7937987e5c.jpg\" alt=\"\" /></p>\n<p>选定 DCT 去除的信息，进行 DCT 变换</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_f26670cf8f60a325901e9e8217616207.jpg\" alt=\"\" /></p>\n<p>得到效果图</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_3b7437fbd0e276fcc1b281a85fd0a5da.jpg\" alt=\"\" /></p>\n<h3 id=\"彩色图像dct变换\"><a class=\"anchor\" href=\"#彩色图像dct变换\">#</a> 彩色图像 DCT 变换</h3>\n<p>打开图像</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_cd0232d0bcdb5fa3abe9279e639b63ee.jpg\" alt=\"\" /></p>\n<p>选定 DCT 去除的信息，进行 DCT 变换</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_392cc8c9f36cf5dadbb8fe641951f85e.jpg\" alt=\"\" /></p>\n<p>得到效果图</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_44c76d239bee25c7f0dfcaa3e9352451.jpg\" alt=\"\" /></p>\n",
            "tags": [
                "opencv",
                "pyqt5",
                "python",
                "图像处理",
                "教程"
            ]
        },
        {
            "id": "https://www.taoidle.com/2020/04/22/Git%E6%95%99%E7%A8%8B%20%E2%80%94%E2%80%94%20Git%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/",
            "url": "https://www.taoidle.com/2020/04/22/Git%E6%95%99%E7%A8%8B%20%E2%80%94%E2%80%94%20Git%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/",
            "title": "Git教程 —— Git的基本操作",
            "date_published": "2020-04-22T04:00:08.000Z",
            "content_html": "<h2 id=\"创建版本库\"><a class=\"anchor\" href=\"#创建版本库\">#</a> 创建版本库</h2>\n<p>在前边的例子中，我们已经创建过的版本库，这里我们来回顾一下，首先我们找了一个合适的地方创建了一个空目录，然后我们使用 git init 命令让该目录变成 git 仓库，这里我们看到 git 输出信息 Initalized empty Git repository，这是告诉我们这是一个空仓库。</p>\n<p>注意，细心的你可能发现在 git_demo 目录下有一个.git 目录（该文件是隐藏的，需要在查看中勾选隐藏的项目选项） .git 目录是 git 用来管理版本库的，如果乱改该目录下的文件 git 仓库会被破坏。</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>命令：git init</pre></td></tr></table></figure><p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/4aef82c398791fa.png\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/e9079bfaf294f0e.png\" alt=\"\" /></p>\n<h3 id=\"文件提交\"><a class=\"anchor\" href=\"#文件提交\">#</a> 文件提交</h3>\n<p>文件提交是将暂存区中所有的内容添加到分支中，在上面的例子中我们使用命令 git commit -m “create 1.c” 将暂存区的文件提交到分支 master，这里我们使用了参数 -m 参数后引号的内容是此次提交的标注。然后我们用 git status 查看状态，此时工作区内容已经干净了，暂存区的文件已经提交到了分支上，所以 git 告诉我们 working tree clean，并且我们用 git log 命令查看 git 的日志信息，在日志信息中明确记录了我们有过一次提交记录，此记录中注明了”create 1.c”。</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>命令：git commit</pre></td></tr></table></figure><p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/121c09c74678b10.png\" alt=\"\" /></p>\n<h3 id=\"版本回退\"><a class=\"anchor\" href=\"#版本回退\">#</a> 版本回退</h3>\n<p>到目前位置，我们的 git 上只提交了一个版本，现在我们对文件进行修改，我们用编辑器在 1.c 中写一个 hello world 程序然后保存退出，然后我们用 git status 查看状态，这里 git 输出信息文件处于 modified 状态，表示文件仅被修改，但没有做其它任何操作。接着我们将文件添加到暂存区并提交，然后再 git status 和 git log 看一下。</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/8d2cae96cabc9ca.png\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/b1299c0dbb11d65.png\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/4e592c7c30e6a94.png\" alt=\"\" /></p>\n<p>此时我们可以看到 git log 的输出信息上出现了两次 commit 这就是我们提交的两次版本，第一次我们创建了 1.c 文件然后提交，第二次我们在 1.c 中写入了一个 hello world 程序提交。我们不妨对 1.c 文件做第三次修改，我们封装一个函数专门用来输出 hello world，然后提交。</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/2c7fee8816f8b8f.png\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/c83237fb552a084.png\" alt=\"\" /></p>\n<p>这时，我们 master 分支上已经有三次提交记录了，我们看到这里我们的 1.c 有三个版本，分别为”create 1.c” “write hello world demo” “ add func_p”。那么如果我们不想要这个封装好的函数，要从”add func_p” 这个版本直接回到上一个版本”write hello world demo” 应该怎么做呢？别急，我们先看看 git log 给我们输出的信息都是什么。 首先我们看到日志的第一行</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>commit 8abb13d8fd51b4bd6f6b9aaedac4add3ed368de8</pre></td></tr></table></figure><p>这是 commit id 即版本号，当然你这串数字肯定和我的不一样，这一串数字是哈希值。 然后我们看第二行 Author ,Author 是提交者的信息即我们安装 Git 后最先设置的 Username <span class=\"exturl\" data-url=\"bWFpbHRvOmVtYWlsQGV4YW1wbGUuY29t\">email@example.com</span> 接着我们看第三行 Date , 很明显了，这一行就是提交的时间 最后我们看到了 add func_p 这就是我们在提交的时候标注的信息 当然，聪明的你一定想说那关键信息不就是版本号和提交标注吗？你直接给我输出这两个不就可以了吗，输出这么大堆东西看着头都大了。这肯定是可以的，我们在 git log 后加个参数 --pretty=oneline 试一下</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/49012411684ba30.png\" alt=\"\" /></p>\n<p>你看，加上参数之后 git 就只给我们输出版本号和标注了。了解了这些之后，我们回归正题，如何将版本退回到”wirte hello world demo” 在我们前面的学习中我们知道 git 里有个指针 HEAD 指向当前版本，我想你肯定猜到了，我们只需要让该指针指向上一个版本就可以了。那我们来学一个新命令 git reset --hard HEAD^ 这个命令是将 HEAD 指针指向上一个版本，那如果是指向上上个版本就是 git reset --hard HEAD^^。我们先来试一下，在命令行中输入这个命令</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/fb52be0f128a23d.png\" alt=\"\" /></p>\n<p>这是 git 输出信息 HEAD 指针已经指向了 write hello world demo 这个版本，为了验证是不是真的退回了上一个版本，我们 cat 1.c 一下看看</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/b05ed2e618d23cf.png\" alt=\"\" /></p>\n<p>从输出结果我们看到已经成功退回上一版，这时候你就有一个疑问了，要是以后版本多了比如出现了上千的版本那一直 HEAD^<sup>(若干个</sup>) 岂不是非常麻烦，这不必担心，如果是退回非常多个版本比如 20 个，那其实并不需要打 20 个 ^，我们可以这么写 HEAD~20，而且还有另一个办法，在前面我们说到了 commit id ，那我们是不是也可以通过 commit id 来退回版本呢？答案是肯定的，我们试试用 commit id 来退回到最初的版本。我们先 git log 看一下，我们看到 git log 的输出信息只剩下两个版本了，刚刚退回前的”add func_p” 版本已经不见了。我们找到”create 1.c” 版本，将 commit 后边的 id 号复制后填写到 git reset --hard id。在图中你看到我并没有填写整一串 id，这是因为 git 会自动帮我们找，所以我们填写前边几位就行了，当然也不能只填写一两位，在版本多了情况下 git 可能会找到多个版本，这时就无法确定是哪一个了。</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/f65d43654ec665e.png\" alt=\"\" /></p>\n<p>这个时候我们再来看一下 git log 发现只剩下一个版本了，但是这个时候你后悔了，你想回到”add func_p” 版本，那怎么办呢？还有办法吗？</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/92048a292d8d286.png\" alt=\"\" /></p>\n<p>当然办法还是有的，在你还没有关闭命令行的情况下你只需要往前翻，找到之前”add func_p” 的 commit id 就可以了，就像下边这样。我们找到了”add func_p” 的 commit id 并且跳了回去，此时我们不仅直接跳回了”add func_p” 版，而且顺带把中间版本也找回来了。</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/e58c5e029225fe6.png\" alt=\"\" /></p>\n<p>那如果说你在下班前退回了某个版本，然后关了笔记本电脑，回到家的时候你后悔了那怎么办？还有办法吗？在 git 中当然有办法了，git 给我们提供了一个命令叫 git reflog</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>命令: <span class=\"token function\">git</span> reflog</pre></td></tr></table></figure><p>这个命令记录了你每次命令。我们先退回到最初版，然后用 git reflog 看看信息。</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/665e04f99e70483.png\" alt=\"\" /></p>\n<p>在退回最初版后我们在 git reflog 中依然能够找到”add func_p” 版本的 commit id：8abb13d，那我们就 git reset --hard id 回到”add func_p” 版本：git reset --hard 8abb13d 然后 git log 看一下，成功回到”add func_p” 版本。</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/203af278603416a.png\" alt=\"\" /></p>\n<h3 id=\"撤销修改\"><a class=\"anchor\" href=\"#撤销修改\">#</a> 撤销修改</h3>\n<p>你在写完 1.c 后给这个 hello world 程序加了一行注释，正准备 add 的时候你觉得这行注释完全没有必要存在，这个时候你想撤销刚刚的修改应该怎么做呢？我们只需要对 1.c checkout ，怎么写这行命令呢？我们在命令行输入</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>命令：git checkout -- <span class=\"token number\">1</span>.c</pre></td></tr></table></figure><p>注意，这里要用两个 - 如果少了一个 - 的话表示的是切换到一个叫 1.c 的分支。</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/e6beb1dae77c36e.png\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/d1459e26da56b7f.png\" alt=\"\" /></p>\n<p>我们看到这里刚刚添加的注释已经被撤销了。那如果说这个文件已经 add 到了暂存区，但是还没 commit，这个时候你想撤销之前添加的注释，首先我们应该把暂存区的修改退回到工作区，然后在撤销刚刚对 1.c 的修改。具体怎么做，我们用命令 git reset HEAD 1.c 将 1.c 从暂存区中重新放回工作区，然后再 git checkout -- 1.c 撤销工作区中 1.c 的修改。</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/aff330497bacdaf.png\" alt=\"\" /></p>\n<p>在图中我们看到 git reset HEAD 1.c 之后暂存区中的 1.c 已经重新放回了工作区，而工作区的 1.c 是改动过的。这时我们在对 1.c 进行 git checkout -- 1.c 操作，撤销对 1.c 的修改，我们看看结果。</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/7f6563dd39ec7e0.png\" alt=\"\" /></p>\n<p>我们看到 1.c 中的注释已经成功撤销了。</p>\n<h3 id=\"删除文件\"><a class=\"anchor\" href=\"#删除文件\">#</a> 删除文件</h3>\n<p>某一天，你手滑把 1.c 给删了，那 git 是知道你把文件删了的，此时工作区和版本库是不一致，我们使用 git status 命令，git 会告诉你 1.c 被删除了</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/a6a0ba72ae4863b.png\" alt=\"\" /></p>\n<p>这时你想恢复文件，因为在版本库中 1.c 文件还是存在的，你只需要执行命令</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>命令：git checkout -- <span class=\"token number\">1</span>.c</pre></td></tr></table></figure><p>将版本库中版本恢复到工作区就可以了。是不是这样呢？我们执行一下命令，执行 git checkout -- 1.c 命令后 1.c 文件确实恢复了。</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/a8ea5564ea97dd6.png\" alt=\"\" /></p>\n<p>如果说你不是手滑删错了而是确实想把 1.c 文件删掉，那你在工作区删除 1.c 后你需要执行命令</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>命令：git <span class=\"token function\">rm</span> <span class=\"token number\">1</span>.c</pre></td></tr></table></figure><p>然后 commit 才能将 1.c 从版本库中删除。</p>\n",
            "tags": [
                "教程",
                "git"
            ]
        },
        {
            "id": "https://www.taoidle.com/2020/04/21/%E5%85%B3%E4%BA%8ECV%20Tool%E5%B0%8F%E5%B7%A5%E5%85%B7/",
            "url": "https://www.taoidle.com/2020/04/21/%E5%85%B3%E4%BA%8ECV%20Tool%E5%B0%8F%E5%B7%A5%E5%85%B7/",
            "title": "关于CV Tool小工具",
            "date_published": "2020-04-21T15:25:36.000Z",
            "content_html": "<h2 id=\"关于cv-tool\"><a class=\"anchor\" href=\"#关于cv-tool\">#</a> 关于 CV Tool</h2>\n<p>当前版本最新版本为 0.5.1.b4 软件仍处于测试阶段，图像功能基本完成，视频功能尚未完成 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1Rhb2lkbGUvQ1ZfVG9vbA==\">源码链接</span></p>\n<h2 id=\"运行环境\"><a class=\"anchor\" href=\"#运行环境\">#</a> 运行环境</h2>\n<p>Python 3.7 PyQt5.13.0 Numpy1.18.2 Matplotlib3.2.1 注：PyQt 在不同 python 版本下可能会出现不兼容的情况</p>\n<h2 id=\"安装环境\"><a class=\"anchor\" href=\"#安装环境\">#</a> 安装环境</h2>\n<p>安装 python3.7 和 pip 这里不在赘述 安装第三方库 pip3 install pyqt5<mark>5.13.0 numpy</mark>1.18.2 matplotlib==3.2.1</p>\n<h2 id=\"界面部分\"><a class=\"anchor\" href=\"#界面部分\">#</a> 界面部分</h2>\n<h3 id=\"图像处理界面如下所示\"><a class=\"anchor\" href=\"#图像处理界面如下所示\">#</a> 图像处理界面如下所示</h3>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_d9f01e88ed9c304a10405e488c6082a5.jpg\" alt=\"\" /> 左边为工具栏，可以选择工具栏里的功能对图像进行处理 当前版本工具栏一共分为 8 个部分 图像基本处理：恢复原图，上一步图像，灰度化，反相，二值化 ，自动二值化，亮度对比度 图像位置变换：水平镜像，垂直镜像，顺时针旋转 90 度，逆时针旋转 90 度 图像噪声添加：椒盐噪声，高斯噪声 图像滤波处理：均值滤波，中值滤波，方框滤波，高斯滤波，双边滤波 图像边缘检测：Canny 算子，Sobel 算子，Laplace 算子，Scharr 滤波器 图像形态学操作 ：膨胀，腐蚀，开运算，闭运算，顶帽，黑帽，形态学梯度 图像信息嵌入：LSB 嵌入 图像信息提取：LSB 提取 注：该版本为对中文嵌入进行处理，只能嵌入英文</p>\n<h3 id=\"视频处理界面如下所示\"><a class=\"anchor\" href=\"#视频处理界面如下所示\">#</a> 视频处理界面如下所示</h3>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_b9c5ac975cc3a4a205735a8de70f3007.jpg\" alt=\"\" /> 注：当前视频功能尚未完成，这部分暂不做说明</p>\n<h3 id=\"直方图显示界面如下所示\"><a class=\"anchor\" href=\"#直方图显示界面如下所示\">#</a> 直方图显示界面如下所示</h3>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_db768a2d1346824f391a225d1963ec17.jpg\" alt=\"\" /></p>\n<h3 id=\"操作实例\"><a class=\"anchor\" href=\"#操作实例\">#</a> 操作实例</h3>\n<p>开打图像 <img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_e511343b09cc081918455191d329be43.jpg\" alt=\"\" /> <img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_8a64d3c5f7e42c22f145188efe2dd4d0.jpg\" alt=\"\" /> 观察图像直方图 <img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_4956b5644d05df7dc42b1162af8868db.jpg\" alt=\"\" /> <img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_ebfc8d39d885a5a334f7e9f3ce18cec8.jpg\" alt=\"\" /> 图像边缘检测 <img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_a6573ae844443aaab4ef86004a375d17.jpg\" alt=\"\" /> <img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_8b20c24dd48de19270a5f357ee87b98d.jpg\" alt=\"\" /> <img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_dfbd626bdfbcc6335077925eff52d090.jpg\" alt=\"\" /> 图像信息嵌入 <img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_d8c562da0b6ebde95f1d8743a573e18e.jpg\" alt=\"\" /> 图像信息提取 <img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_7313b0e3c6a563e4dfc43acee6e44bd2.jpg\" alt=\"\" /> <img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_cab210e0c8713d42f348dbc0d16548db.jpg\" alt=\"\" /> <img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_9ffff702eea373601860ff1c8884f309.jpg\" alt=\"\" /> <img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_84a023c42a22b7523a734d5733710baf.jpg\" alt=\"\" /></p>\n",
            "tags": [
                "opencv",
                "pyqt5",
                "python",
                "计算机视觉"
            ]
        },
        {
            "id": "https://www.taoidle.com/2020/03/16/Git%E6%95%99%E7%A8%8B%20%E2%80%94%E2%80%94%20%E7%89%88%E6%9C%AC%E5%BA%93%E3%80%81%E5%B7%A5%E4%BD%9C%E5%8C%BA%E5%92%8C%E6%9A%82%E5%AD%98%E5%8C%BA/",
            "url": "https://www.taoidle.com/2020/03/16/Git%E6%95%99%E7%A8%8B%20%E2%80%94%E2%80%94%20%E7%89%88%E6%9C%AC%E5%BA%93%E3%80%81%E5%B7%A5%E4%BD%9C%E5%8C%BA%E5%92%8C%E6%9A%82%E5%AD%98%E5%8C%BA/",
            "title": "Git教程 —— 版本库、工作区和暂存区",
            "date_published": "2020-03-16T02:17:41.000Z",
            "content_html": "<h2 id=\"git的基本工作流程\"><a class=\"anchor\" href=\"#git的基本工作流程\">#</a> Git 的基本工作流程</h2>\n<ol>\n<li>创建 Git 工作目录和版本库</li>\n<li>添加修改删除文件</li>\n<li>git add 命令将文件修改添加到暂存区</li>\n<li>git commit 命令将暂存区所有内容提交到当前分支（创建版本库时 git 自动创建一个 master 分支）</li>\n</ol>\n<h2 id=\"版本库\"><a class=\"anchor\" href=\"#版本库\">#</a> 版本库</h2>\n<p>版本库又名仓库，英文名 repository，可简单理解为一个文件目录，目录里所有的文件都受 Git 管理。Git 会记录该目录下文件的修改删除，这些记录在将来需要恢复某个记录文件时起到至关重要的作用。</p>\n<h2 id=\"文件添加\"><a class=\"anchor\" href=\"#文件添加\">#</a> 文件添加</h2>\n<p>文件添加指的是将文件添加到暂存区，这里我们回顾一下前面的例子，在前边的例子中，我们使用了 git add 1.c 命令将我们的文件 1.c 添加到了暂存区，然后我们使用了 git status 命令来查看项目状态，这里 git 给我们输出的信息在分支 master 中没有任何提交记录，但是 1.c 文已经添加到了暂存区。 命令：git add filename</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/edb84957b223d6a.jpeg\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/034069cb3a181ff.jpeg\" alt=\"\" /></p>\n<h2 id=\"暂存区\"><a class=\"anchor\" href=\"#暂存区\">#</a> 暂存区</h2>\n<p>英文名 stage 或 index，一般在.git 目录下的 index 文件中，所以暂存区有时也被称为索引（index）。</p>\n<h2 id=\"工作区\"><a class=\"anchor\" href=\"#工作区\">#</a> 工作区</h2>\n<p>就是你在电脑里能看到的目录。</p>\n<h2 id=\"一个简单的示例\"><a class=\"anchor\" href=\"#一个简单的示例\">#</a> 一个简单的示例</h2>\n<p>我们通过一个简单的示例来理解上面几个概念。 首先，我们打开 Git Bash，在桌面上创建一个目录文件叫 git_demo，然后进入 git_demo 目录。这个时候 git_demo 就是我们的工作目录。此时我们的 Git 自动帮我们创建了第一个分支 master 以及一个指向 master 的指针 HEAD。</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/e9a350a6a586253.jpeg\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/3702b46d7173cbf.jpeg\" alt=\"\" /></p>\n<p>接着，我们输入 git init 命令，在 git_demo 目录下创建版本库，此时你会发现在 git_demo 目录下多了一个隐藏文件夹 .git , 该文件夹就是我们的版本库。</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/63d96c143a063ca.jpeg\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/1c84c81e4ca26e5.jpeg\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/572ecd978d78681.jpeg\" alt=\"\" /></p>\n<p>然后，我们使用 touch 1.c 命令在工作区里创建一个.c 文件，并用 git add 1.c 将文件添加到暂存区。我们使用命令 git status 查看文件状态，git log 查看 git 日志，看到文件尚未被提交，在 git 日志中 master 分支没有任何提交记录，得知我们添加的 1.c 文件仍在暂存区。</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/e437e7368ffb667.jpeg\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/d6ebcb7047443eb.jpeg\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/bf1a70e8ce730db.jpeg\" alt=\"\" /></p>\n<p>最后，我们使用 git commit 命令将暂存区内容提交到分支 master 中。这里 git commit -m “create 1.c” 中”” 中内容为此次提交的说明。我们用 git status 和 git log 看一下提交之后文件处于什么状态。通过 git status 我们看到当我们一旦提交后没有做任何修改，那么工作区就是干净的。在 git log 中我们的 master 分支上出现了第一次提交记录，该提交记录的说明是 create 1.c。</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/8f1c4bdc7d73fe6.jpeg\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/1f5f2e6a346d0e0.jpeg\" alt=\"\" /></p>\n<p>到这里，我们的版本库暂存区和工作区的内容就讲完了，但是我们不妨继续做实验加深对 git 的理解。接下来我们对 1.c 进行修改，比如我们写个 hello world 程序，然后我们用 git add 1.c 把它添加到暂存区，然后我们继续对 1.c 程序进行修改，比如写一行注释，最后我们 git commit 一下把东西提交。</p>\n<p>此时我们使用 git status 查看状态发现我们对 1.c 的第二次修改并没有被提交，而且使用 git diff HEAD -- 1.c 命令查看文件不同时 git 明确的给我们指出来这多了一行 //hello world，这是为什么呢？这里我们需要清楚一个概念，在 git 的管理中，git 对于版本的控制实质上是对修改进行追踪。什么意思呢？你对文件的增删改对 git 来说都只是修改，git 并不会追踪文件的本身。</p>\n<p>我们回到刚刚的实验，最初我们在 1.c 中写了一个 hello world 程序，然后我们把 1.c 添加到了暂存区，这里实际上并不是把 1.c 文件添加到了暂存区，而是将 1.c 文件的修改提交到了暂存区，然后我们后面对 1.c 写了一行注释，这个改动并没有被添加，所以 commit 后版本库和工作区是不一致的。</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/46086c6030d0a2f.jpeg\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/1846795b60e6210.jpeg\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/ac72b20e5bce2da.jpeg\" alt=\"\" /></p>\n",
            "tags": [
                "教程",
                "git"
            ]
        },
        {
            "id": "https://www.taoidle.com/2020/02/28/%E4%BD%BF%E7%94%A8Arduino+VsCode%E7%9A%84%E6%96%B9%E5%BC%8F%E5%BC%80%E5%8F%91Nodemcu/",
            "url": "https://www.taoidle.com/2020/02/28/%E4%BD%BF%E7%94%A8Arduino+VsCode%E7%9A%84%E6%96%B9%E5%BC%8F%E5%BC%80%E5%8F%91Nodemcu/",
            "title": "使用Arduino+VsCode的方式开发Nodemcu",
            "date_published": "2020-02-28T09:40:36.000Z",
            "content_html": "<p><strong>前言</strong></p>\n<p>为什么用 Vscode？很简单，Arduino IDE 的编辑器不好用。废话不多说，来看怎么配置。</p>\n<p><strong>0、Nodemcu 连接电脑</strong></p>\n<p>根据你 Nodemcu 的版本打上串口驱动，如果是后期新购买的 Nodemcu 那驱动有两个版本，一个是 CH340 一个是 CP2102。安装完驱动程序后将 Nodemcu 连接电脑，在电脑的设备管理器中找到端口选项，如下图相似则安装成功。</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/11e3e749bddf136.png\" alt=\"\" /></p>\n<p><strong>1、安装配置 ArduinoIDE</strong></p>\n<p>在<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5hcmR1aW5vLmNj\"> arduino 官网</span>下载对应系统版本的安装文件，下载安装 arduino IDE。</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/9cb2adac62db237.png\" alt=\"\" /></p>\n<p>打开 arduino IDE，左上角 File 选项，找到 Preferences，在 Preferences 窗口的 Settings 框中找到选项 Additional Boards Manager URLs，添加保存链接：<span class=\"exturl\" data-url=\"aHR0cDovL2FyZHVpbm8uZXNwODI2Ni5jb20vc3RhYmxlL3BhY2thZ2VfZXNwODI2NmNvbV9pbmRleC5qc29u\">http://arduino.esp8266.com/stable/package_esp8266com_index.json</span></p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/75385e5626cb974.png\" alt=\"\" /></p>\n<p>左上角 Tools 选项，找到 Board，Boards Manager... ，在 Boards Manager 框中搜索 esp8266，下载 ESP8266 Community，由于我国网络环境这里下载非常缓慢，需要小工具加速，这里不再赘述。</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/f6a54e83be0f8a2.png\" alt=\"\" /></p>\n<p><strong>2、安装配置 VsCode</strong></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20v\">VsCode 官网</span>下载对应系统版本的安装包安装 VsCode，打开 VsCode，在左边 Extensions 选项中搜索下载 Arduino 插件。</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/063850dde8de024.png\" alt=\"\" /></p>\n<p>在左上角选项 File-&gt;Preferences-&gt;Settings 进入设置页面，在 User 或者 Workspace 中找到 Arduino configuration，我们这里在 User 中配置，点击 Edit in settings.json</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/e7eb7fdf1744d55.png\" alt=\"\" /></p>\n<p>在 settings.json 文件中添加以下内容，根据你的实际情况做改动。然后保存 settings.json</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"arduino.path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"D:\\\\Program Files (x86)\\\\Arduino\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 这里是你安装 Arduino 的文件路径</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token property\">\"C_Cpp.intelliSenseEngine\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Tag Parser\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token property\">\"editor.tabSize\"</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token property\">\"editor.insertSpaces\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token property\">\"files.autoGuessEncoding\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token property\">\"arduino.logLevel\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"info\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token property\">\"editor.detectIndentation\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><p>接下来我们在电脑桌面创建一个 blink 文件夹，在 VsCode 中 File-&gt;Open Folder 打开这个文件夹，创建一个 blink.ino 文件</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/d728560e6db68b7.png\" alt=\"\" /></p>\n<p>在 VsCode 底部看到 COM6（你前边设备管理器中对应的串口号），在 COM6 旁边找到对应板型，点击搜索 Nodemcu，找到 1.0 版本选择保存</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/9fb83cc008f143d.png\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/8a03f6905cc7ee9.png\" alt=\"\" /></p>\n<p>在刚刚创建的 blink.ino 文件中编写代码如下</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>LED_BUILTIN<span class=\"token punctuation\">,</span>OUTPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function\">digitalWrite</span><span class=\"token punctuation\">(</span>LED_BUILTIN<span class=\"token punctuation\">,</span>HIGH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">digitalWrite</span><span class=\"token punctuation\">(</span>LED_BUILTIN<span class=\"token punctuation\">,</span>LOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>保存 blink.ino，找到右上角上传图标，将文件编译烧写到 Nodemcu，烧写完成后 Nodemcu 上 LED 闪烁。</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/7092344df660ad5.png\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/3274fb883e94c2a.png\" alt=\"\" /></p>\n",
            "tags": [
                "vscode",
                "arduino",
                "esp8266",
                "nodemcu"
            ]
        },
        {
            "id": "https://www.taoidle.com/2020/02/24/Git%E6%95%99%E7%A8%8B%20%E2%80%94%E2%80%94%20Git%E7%AE%80%E4%BB%8B/",
            "url": "https://www.taoidle.com/2020/02/24/Git%E6%95%99%E7%A8%8B%20%E2%80%94%E2%80%94%20Git%E7%AE%80%E4%BB%8B/",
            "title": "Git教程 —— Git简介",
            "date_published": "2020-02-24T07:54:12.000Z",
            "content_html": "<h2 id=\"一-git简介\"><a class=\"anchor\" href=\"#一-git简介\">#</a> <strong>一、Git 简介</strong></h2>\n<p><strong>1、Git 是什么</strong> Git (读音为 /gɪt/。) 是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。 [1] Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。（百度百科）</p>\n<p><strong>（1）集中式版本控制系统</strong> 集中式版本控制系统的版本库集中存放在中央服务器的，干活的时候首先从中央服务器中获取最新的版本，然后干完活后在推送给中央服务器，本地没有版本库的修改记录。所以集中式版本控制器在没有联网的情况下是不能工作的。</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/1587996764-%E5%9B%BE%E7%89%871.png\" alt=\"\" /></p>\n<p><strong>（2）分布式版本控制系统</strong> 分布式版本控制系统中没有中央服务器，在自己的电脑上是有版本库的，在你工作时不需要联网。但是分布式版本控制系统中需要有一台电脑充当中央服务器，以便于不同电脑修改的交换。</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/1587996849-%E5%9B%BE%E7%89%872.png\" alt=\"\" /></p>\n<p><strong>2、为什么要使用版本控制系统？</strong> 编写文档、代码等文件的你一定有过这样的经历，对每次重要的修改都保存了一份新的文件</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/1587997204-%E5%9B%BE%E7%89%873.png\" alt=\"\" /></p>\n<p>这种做法相当简陋而且缺点非常明显，如果是多人协作的时候文档的命名不一定能反映出修改的内容，而且对存储空间的利用相当的不合理。这对生产需求来说是相当致命的，所以我们有了版本控制管理器。 版本控制器记录每次文件的改动，使用起来类似于如下效果</p>\n<p>版本</p>\n<p>文件名</p>\n<p>用户</p>\n<p>修改日期</p>\n<p>说明</p>\n<p>1</p>\n<p>linux.doc</p>\n<p>老王</p>\n<p>2020.1.5 8.54</p>\n<p>linux 教程最初版</p>\n<p>2</p>\n<p>linux.doc</p>\n<p>老王</p>\n<p>2020.1.6 14.43</p>\n<p>增加了文件权限相关内容</p>\n<p>3</p>\n<p>linux.doc</p>\n<p>张三</p>\n<p>2020.1.7 11.27</p>\n<p>删除了硬件基础中老旧的硬件型号</p>\n<p>4</p>\n<p>linux.doc</p>\n<p>李四</p>\n<p>2020.1.8 18.36</p>\n<p>对硬件基础中主板相关部分增加了新型号</p>\n<p>5</p>\n<p>linux.doc</p>\n<p>老王</p>\n<p>2020.1.9 16.09</p>\n<p>增加了常用命令内容</p>\n<p>这样你既可以方便的管理一个文件的多个版本，也可以跟同事协同工作，是不是非常方便？于是你开始使用 Git 进行版本管理，开启了新世界的大门。</p>\n<p><strong>3、安装 Git</strong></p>\n<p><strong>（1）Linux 安装 Git</strong></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Debian/Ubuntu: <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> <span class=\"token function\">git</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Fedora/Red Hat/CentOS: <span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> git-core</pre></td></tr></table></figure><p>其它版本 linux 从 Git 官网下载源码后解压，然后通过 ./config , make , sudo make install 安装，这里不在赘述。</p>\n<p><strong>(2) Windows 安装 Git</strong></p>\n<p>从<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQtc2NtLmNvbS8=\"> Git 官网</span>下载安装包进行安装，安装之后找到 Git Bash　打开后弹出命令行窗口即安装成功。</p>\n<p><strong>(3) MacOS 安装 Git</strong></p>\n<p>1、安装 homebrew，brew 安装 Git。下边给出安装命令，在终端中输入</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>homebrew：/usr/bin/ruby -e <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">curl</span> -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install<span class=\"token variable\">)</span></span>\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>git: brew <span class=\"token function\">install</span> <span class=\"token function\">git</span></pre></td></tr></table></figure><p>2、在 APP Store 中下载 Xcode，Xcode 自带 git 在完成安装之后我们要对 git 进行进一步的设置，打开 Git Bash，在命令行中输入以下命令：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> config --global user.name “username” username为你的用户名</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">git</span> config --global user.email “email@example.com” email@example.com为你的邮箱地址</pre></td></tr></table></figure><p>注意：global 参数是全局设置，表示该电脑上所有的 git 仓库都使用此用户名和邮箱地址</p>\n",
            "tags": [
                "教程",
                "git"
            ]
        }
    ]
}