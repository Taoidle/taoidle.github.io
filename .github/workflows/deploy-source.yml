name: HEXO_DEPLOY

on:
  push:
    branches:
      - source

env:
  GIT_USER: taoidle
  GIT_EMAIL: me@mail.taoidle.com
  # THEME_REPO: amehime/hexo-theme-shoka
  # THEME_BRANCH: master
  DEPLOY_REPO: taoidle/taoidle.github.io
  DEPLOY_BRANCH: master

jobs:
  build:
    name: Build on node ${{ matrix.node_version }} and ${{ matrix.os }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest]
        node_version: [16.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # - name: Checkout theme repo
      #   uses: actions/checkout@v2
      #   with:
      #     repository: ${{ env.THEME_REPO }}
      #     ref: ${{ env.THEME_BRANCH }}
      #     path: themes/shoka

      - name: Checkout deploy repo
        uses: actions/checkout@v2
        with:
          repository: ${{ env.DEPLOY_REPO }}
          ref: ${{ env.DEPLOY_BRANCH }}
          path: .deploy_git

      - name: Use Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node_version }}

      - name: Configuration environment
        env:
          HEXO_DEPLOY_PRI: ${{secrets.HEXO_DEPLOY_PRI}}
        run: |
          sudo timedatectl set-timezone "Asia/Shanghai"
          mkdir -p ~/.ssh/
          echo "$HEXO_DEPLOY_PRI" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          git config --global user.name $GIT_USER
          git config --global user.email $GIT_EMAIL
        # cp _config.theme.yml themes/shoka/_config.yml
          
      - name: Install dependencies
        run: |
          npm install

      - name: Deploy hexo
        run: |
          npm run deploy

      - name: Read Version
        id: version
        uses: ashley-taylor/read-json-property-action@v1.0
        with:
          path: ./package.json
          property: version
      - name: archive release
        uses: thedoctor0/zip-release@main
        with:
          type: 'zip'
          filename: 'source.zip'
          exclusions: '*.git* /*node_modules/* .editorconfig'
      - name: Create Github Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{steps.version.outputs.value}}
          release_name: Source V${{steps.version.outputs.value}}
          draft: false
          prerelease: false
