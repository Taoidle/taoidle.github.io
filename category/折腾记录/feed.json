{
    "version": "https://jsonfeed.org/version/1",
    "title": "null • All posts by \"折腾记录\" category",
    "description": "(づ●─●)づ让我看看再学点什么好",
    "home_page_url": "https://www.taoidle.com",
    "items": [
        {
            "id": "https://www.taoidle.com/2024/12/20/WSL%E9%95%9C%E5%83%8F%E5%A4%8D%E5%88%B6%20&%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/",
            "url": "https://www.taoidle.com/2024/12/20/WSL%E9%95%9C%E5%83%8F%E5%A4%8D%E5%88%B6%20&%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/",
            "title": "WSL镜像复制 & 常用命令",
            "date_published": "2024-12-20T08:21:42.000Z",
            "content_html": "<h1 id=\"场景\"><a class=\"anchor\" href=\"#场景\">#</a> 场景</h1>\n<p>需要多开同个系统，比如开两个 Debian</p>\n<h1 id=\"流程\"><a class=\"anchor\" href=\"#流程\">#</a> 流程</h1>\n<ul>\n<li>注：以下以 Debian 为例</li>\n</ul>\n<h2 id=\"发行版设置\"><a class=\"anchor\" href=\"#发行版设置\">#</a> 发行版设置</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 停止 Debian</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>wsl -t Debain</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>wsl --terminate Debian</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 取消注册并删除 Debian</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>wsl --unregister Debian</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 设置 Debian 为默认发行版</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>wsl --set-default Debian</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>wsl -s Debian</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 将 Debian 挪到喜欢的位置</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>wsl --mange Debian --move /path</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 将 Debian 设置为稀疏磁盘，允许自动回收磁盘空间</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>wsl --manage Debian -s <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>wsl --manage Debian --set-sparse <span class=\"token boolean\">true</span></pre></td></tr></table></figure><h2 id=\"镜像导出\"><a class=\"anchor\" href=\"#镜像导出\">#</a> 镜像导出</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 将 Debian 发行版导出为 debian-image.tar</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>wsl --export Debian debian-image.tar </pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 将 Debian 发行版导出为 debian-image.vhdx</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>wsl --export Debian debian-image.vhdx --vhd</pre></td></tr></table></figure><h2 id=\"镜像导入\"><a class=\"anchor\" href=\"#镜像导入\">#</a> 镜像导入</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 导入 debian-image.tar 镜像为 Debian-Main</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>wsl --import Debian-Main /path/to/install /path/to/debian-image.tar</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 导入 debian-image.vhdx 镜像为 Debian-Main</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>wsl --import Debian-Main /path/to/install /path/to/debian-image.vhdx --vhd</pre></td></tr></table></figure><h1 id=\"常见问题\"><a class=\"anchor\" href=\"#常见问题\">#</a> 常见问题</h1>\n<ul>\n<li>\n<p>导出后的镜像登录默认为 root 而不是之前设置的普通用户？</p>\n<p>编辑 /etc/wsl.conf，添加配置</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token assign-left variable\">default</span><span class=\"token operator\">=</span>username</pre></td></tr></table></figure></li>\n</ul>\n",
            "tags": [
                "wsl"
            ]
        },
        {
            "id": "https://www.taoidle.com/2024/11/21/Win11%E6%89%BE%E4%B8%8D%E5%88%B0%E6%9C%AC%E5%9C%B0%E7%BB%84%E7%AD%96%E7%95%A5%E7%BC%96%E8%BE%91%E5%99%A8(gpedit.msc)/",
            "url": "https://www.taoidle.com/2024/11/21/Win11%E6%89%BE%E4%B8%8D%E5%88%B0%E6%9C%AC%E5%9C%B0%E7%BB%84%E7%AD%96%E7%95%A5%E7%BC%96%E8%BE%91%E5%99%A8(gpedit.msc)/",
            "title": "Win11找不到本地组策略编辑器(gpedit.msc)",
            "date_published": "2024-11-21T03:08:40.000Z",
            "content_html": "<h1 id=\"解决方式\"><a class=\"anchor\" href=\"#解决方式\">#</a> 解决方式</h1>\n<p>以管理员方式打开 cmd，运行以下命令：</p>\n<pre><code class=\"language-bat\">FOR %F IN (&quot;%SystemRoot%\\servicing\\Packages\\Microsoft-Windows-GroupPolicy-ClientTools-Package~*.mum&quot;) DO ( DISM /Online /NoRestart /Add-Package:&quot;%F&quot; )\n\nFOR %F IN (&quot;%SystemRoot%\\servicing\\Packages\\Microsoft-Windows-GroupPolicy-ClientExtensions-Package~*.mum&quot;) DO ( DISM /Online /NoRestart /Add-Package:&quot;%F&quot; )\n</code></pre>\n<p>等命令运行完成，Win + R 输入 gpedit.msc，回车即可打开本地组策略编辑器</p>\n",
            "tags": [
                "windows"
            ]
        },
        {
            "id": "https://www.taoidle.com/2024/11/20/Yubikey&Canokey%20PIV%20%E9%85%8D%E7%BD%AE/",
            "url": "https://www.taoidle.com/2024/11/20/Yubikey&Canokey%20PIV%20%E9%85%8D%E7%BD%AE/",
            "title": "Yubikey&Canokey PIV 配置",
            "date_published": "2024-11-20T03:40:23.000Z",
            "content_html": "<h1 id=\"准备\"><a class=\"anchor\" href=\"#准备\">#</a> 准备</h1>\n<ul>\n<li>Yubikey &amp; Canokey</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXJzLnl1Ymljby5jb20veXViaWNvLXBpdi10b29sL1JlbGVhc2VzLw==\">yubico-piv-tool</span> &amp; <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXJzLnl1Ymljby5jb20veXViaWtleS1tYW5hZ2VyL1JlbGVhc2VzLw==\">ykman</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2J1cHRjenEvV2luQ3J5cHRTU0hBZ2VudA==\">WinCryptSSHAgent</span>  (Windows Only)</li>\n</ul>\n<h1 id=\"生成私钥及证书\"><a class=\"anchor\" href=\"#生成私钥及证书\">#</a> 生成私钥及证书</h1>\n<h2 id=\"ca-私钥和证书\"><a class=\"anchor\" href=\"#ca-私钥和证书\">#</a> CA 私钥和证书</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>openssl genpkey -algorithm RSA -out ca_private_key.pem -pkeyopt rsa_keygen_bits:2048</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>openssl req -new -x509 -key ca_private_key.pem -out ca_cert.pem -days <span class=\"token number\">3650</span> -subj <span class=\"token string\">\"/C=CN/ST=Guangdong/L=Guangzhou/O=XXX/OU=XXX/CN=taoidle\"</span></pre></td></tr></table></figure><h2 id=\"rsa-私钥和csr\"><a class=\"anchor\" href=\"#rsa-私钥和csr\">#</a> RSA 私钥和 CSR</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>openssl genpkey -algorithm RSA -out rsa_private_key.pem -pkeyopt rsa_keygen_bits:2048</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>openssl req -new -key rsa_private_key.pem -out csr.pem -subj <span class=\"token string\">\"/C=CN/ST=Guangdong/L=Guangzhou/O=XXX/OU=XXX/CN=taoidle\"</span></pre></td></tr></table></figure><h2 id=\"使用ca签发csr\"><a class=\"anchor\" href=\"#使用ca签发csr\">#</a> 使用 CA 签发 CSR</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>openssl x509 -req -in csr.pem -CA ca_cert.pem -CAkey ca_private_key.pem -CAcreateserial -out signed_cert.pem -days <span class=\"token number\">3650</span></pre></td></tr></table></figure><h2 id=\"证书验证\"><a class=\"anchor\" href=\"#证书验证\">#</a> 证书验证</h2>\n<h3 id=\"csr验证\"><a class=\"anchor\" href=\"#csr验证\">#</a> CSR 验证</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>openssl req -in csr.pem -noout -text</pre></td></tr></table></figure><h3 id=\"验证生成证书\"><a class=\"anchor\" href=\"#验证生成证书\">#</a> 验证生成证书</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>openssl x509 -in signed_cert.pem -noout -text</pre></td></tr></table></figure><h3 id=\"证书链验证\"><a class=\"anchor\" href=\"#证书链验证\">#</a> 证书链验证</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>openssl verify -CAfile ca_cert.pem signed_cert.pem</pre></td></tr></table></figure><h3 id=\"自签证书链验证\"><a class=\"anchor\" href=\"#自签证书链验证\">#</a> 自签证书链验证</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>openssl verify -CAfile signed_cert.pem signed_cert.pem</pre></td></tr></table></figure><ul>\n<li><code>ca_private_key.pem</code> ：CA 私钥。</li>\n<li><code>ca_cert.pem</code> ：自签名 CA 证书。</li>\n<li><code>rsa_private_key.pem</code> ： RSA 私钥。</li>\n<li><code>csr.pem</code> ：证书签名请求。</li>\n<li><code>signed_cert.pem</code> ：CA 签发的证书。</li>\n</ul>\n<h1 id=\"yubikey-piv\"><a class=\"anchor\" href=\"#yubikey-piv\">#</a> Yubikey PIV</h1>\n<h2 id=\"yubico-piv-tool\"><a class=\"anchor\" href=\"#yubico-piv-tool\">#</a> yubico-piv-tool</h2>\n<h3 id=\"导入私钥\"><a class=\"anchor\" href=\"#导入私钥\">#</a> 导入私钥</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yubico-piv-tool -a import-key -s 9a -i rsa_private_key.pem</pre></td></tr></table></figure><h3 id=\"导入证书\"><a class=\"anchor\" href=\"#导入证书\">#</a> 导入证书</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yubico-piv-tool -a import-key -s 9a -i signed_cert.pem</pre></td></tr></table></figure><h2 id=\"ykman\"><a class=\"anchor\" href=\"#ykman\">#</a> ykman</h2>\n<ul>\n<li>把 rsa_private_key.pem、signed_cert.pem cat 出来，对应到私钥、证书，输入后留空一行然后 ctrl+c 取消后输入 pin</li>\n</ul>\n<h3 id=\"导入私钥-2\"><a class=\"anchor\" href=\"#导入私钥-2\">#</a> 导入私钥</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ykman piv keys <span class=\"token function\">import</span> 9a -</pre></td></tr></table></figure><h3 id=\"导入证书-2\"><a class=\"anchor\" href=\"#导入证书-2\">#</a> 导入证书</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ykman piv certificates <span class=\"token function\">import</span> 9a -</pre></td></tr></table></figure><h1 id=\"canokey-piv\"><a class=\"anchor\" href=\"#canokey-piv\">#</a> Canokey PIV</h1>\n<h2 id=\"yubico-piv-tool-2\"><a class=\"anchor\" href=\"#yubico-piv-tool-2\">#</a> yubico-piv-tool</h2>\n<h3 id=\"导入私钥-3\"><a class=\"anchor\" href=\"#导入私钥-3\">#</a> 导入私钥</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yubico-piv-tool -r canokey -a import-key -s 9a -i rsa_private_key.pem</pre></td></tr></table></figure><h3 id=\"导入证书-3\"><a class=\"anchor\" href=\"#导入证书-3\">#</a> 导入证书</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yubico-piv-tool -r canokey -a import-key -s 9a -i signed_cert.pem</pre></td></tr></table></figure><h2 id=\"ykman-2\"><a class=\"anchor\" href=\"#ykman-2\">#</a> ykman</h2>\n<ul>\n<li>把 rsa_private_key.pem、signed_cert.pem cat 出来，对应到私钥、证书，输入后留空一行然后 ctrl+c 取消后输入 pin</li>\n</ul>\n<h3 id=\"导入私钥-4\"><a class=\"anchor\" href=\"#导入私钥-4\">#</a> 导入私钥</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ykman -r canokey piv keys <span class=\"token function\">import</span> 9a -</pre></td></tr></table></figure><h3 id=\"导入证书-4\"><a class=\"anchor\" href=\"#导入证书-4\">#</a> 导入证书</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ykman -r canokey piv certificates <span class=\"token function\">import</span> 9a -</pre></td></tr></table></figure><h1 id=\"ssh自动登录\"><a class=\"anchor\" href=\"#ssh自动登录\">#</a> SSH 自动登录</h1>\n<h2 id=\"windows\"><a class=\"anchor\" href=\"#windows\">#</a> Windows</h2>\n<p>下载 WinCryptSSHAgent，启动后右键托盘图标 ， <code>show public key</code> 。将公钥放到服务器.ssh/authorized_keys</p>\n",
            "tags": [
                "yubikey",
                "canokeys"
            ]
        },
        {
            "id": "https://www.taoidle.com/2023/07/16/Brew%20Error%20Miscellaneous/",
            "url": "https://www.taoidle.com/2023/07/16/Brew%20Error%20Miscellaneous/",
            "title": "Brew Error Miscellaneous",
            "date_published": "2023-07-16T05:10:53.000Z",
            "content_html": "<h2 id=\"brew-services-error\"><a class=\"anchor\" href=\"#brew-services-error\">#</a> Brew Services Error</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Error: uninitialized constant Homebrew::Service::System</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>/opt/homebrew/Library/Taps/homebrew/homebrew-services/cmd/services.rb:61:in <span class=\"token variable\"><span class=\"token variable\">`</span>services'</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>/opt/homebrew/Library/Homebrew/brew.rb:94:in <span class=\"token variable\">`</span></span><span class=\"token operator\">&lt;</span>main<span class=\"token operator\">></span>'</pre></td></tr></table></figure><h2 id=\"issue\"><a class=\"anchor\" href=\"#issue\">#</a> Issue</h2>\n<ul>\n<li>an unmaintained mirror</li>\n</ul>\n<h2 id=\"fix\"><a class=\"anchor\" href=\"#fix\">#</a> Fix</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> -C <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span>brew --repo homebrew/services<span class=\"token variable\">)</span></span>\"</span> remote set-url origin https://github.com/Homebrew/homebrew-services.git</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>brew update</pre></td></tr></table></figure>",
            "tags": [
                "Arm",
                "Apple",
                "苹果",
                "MacOS",
                "Brew"
            ]
        },
        {
            "id": "https://www.taoidle.com/2023/01/08/WSL%20%EF%BC%9ASystem%20has%20not%20been%20booted%20with%20systemd%20as%20init%20system%20(PID%201)/",
            "url": "https://www.taoidle.com/2023/01/08/WSL%20%EF%BC%9ASystem%20has%20not%20been%20booted%20with%20systemd%20as%20init%20system%20(PID%201)/",
            "title": "WSL ：System has not been booted with systemd as init system (PID 1)",
            "date_published": "2023-01-08T05:01:23.000Z",
            "content_html": "<h2 id=\"systemd-error\"><a class=\"anchor\" href=\"#systemd-error\">#</a> Systemd Error</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>System has not been booted with systemd as init system <span class=\"token punctuation\">(</span>PID <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>. Can't operate.</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Failed to connect to bus: Host is down</pre></td></tr></table></figure><h2 id=\"issue\"><a class=\"anchor\" href=\"#issue\">#</a> Issue</h2>\n<ul>\n<li>\n<p>Release of WSL doesn't support Systemd.</p>\n</li>\n<li>\n<p>Systemd is now officially supported in Ubuntu on many WSL systems.</p>\n</li>\n</ul>\n<h2 id=\"fix\"><a class=\"anchor\" href=\"#fix\">#</a> Fix</h2>\n<p>Start Ubuntu (or other Systemd) distribution under WSL</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> /etc/wsl.conf</pre></td></tr></table></figure><p>Add the following:</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>boot<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token assign-left variable\">systemd</span><span class=\"token operator\">=</span>true</pre></td></tr></table></figure><p>Open Powershell:</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wsl --shutdown</pre></td></tr></table></figure><p>or</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wsl --terminate <span class=\"token operator\">&lt;</span>Distro<span class=\"token operator\">></span></pre></td></tr></table></figure><p>WSL List only distributions that are currently running:</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wsl --list --running</pre></td></tr></table></figure><p>Start:</p>\n<p>Run the specified distribution.</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wsl --distribution <span class=\"token operator\">&lt;</span>Distro<span class=\"token operator\">></span></pre></td></tr></table></figure>",
            "tags": [
                "wsl",
                "systemd"
            ]
        },
        {
            "id": "https://www.taoidle.com/2022/11/02/%E5%8D%9A%E5%AE%A2%E5%8F%8A%E7%9B%B8%E5%85%B3%E6%9C%8D%E5%8A%A1/",
            "url": "https://www.taoidle.com/2022/11/02/%E5%8D%9A%E5%AE%A2%E5%8F%8A%E7%9B%B8%E5%85%B3%E6%9C%8D%E5%8A%A1/",
            "title": "博客及相关服务",
            "date_published": "2022-11-02T06:21:50.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>本文对我博客架构及相关服务的记录和补充。</p>\n<h2 id=\"正文\"><a class=\"anchor\" href=\"#正文\">#</a> 正文</h2>\n<p><s>众所周知</s>，我早期为 Wordpress 用户，用 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21hc2hpcm96eC9zYWt1cmE=\">Sakura</span> 主题，后期使用了基于 Sakara 重构的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21pcmFpLW1hbW9yaS9TYWt1cmFpcm8=\">Sakurairo</span>；同期，由 sakura 的随机封面功能，网上没看到比较符合我 xp 的，所以自己搓了个随即图服务。在 Wordpress 时期，我的博客和随即图服务在同一台服务器上，然后套了个 cdn。</p>\n<p>迁移到 hexo 主要原因是<s> Wordpress 太慢了</s> <span class=\"spoiler bulr\" title=\"你知道得太多了\">学生优惠无了</span>。</p>\n<p>于是现在变成了这样：</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/about_blog&amp;services(1).png\" alt=\"\" /></p>\n<p>本地写完 push 到 github 仓库 source 分支，触发 github action 进行构建，构建完分别 deploy 到 github 仓库的 master 分支和腾讯云存储桶。</p>\n<p>在访问的时，先通过阿里云 dns 做分流，国内流量走到腾讯云上，国外流量走到 github page。</p>\n<p>图片资源同理，通过阿里云 dns 做分流，国内走又拍云（通过又拍云联盟白嫖免费额度）。</p>\n<p>至于原本的图片 API 则拆成两个，国内使用<a href=\"https://www.taoidle.com/2022/07/10/%E8%85%BE%E8%AE%AF%E4%BA%91%E5%87%BD%E6%95%B0%E9%9A%8F%E6%9C%BA%E5%9B%BEapi%E5%AE%9E%E7%8E%B0\">腾讯云 SCF</a>，国外使用<a href=\"https://www.taoidle.com/2022/05/24/%E4%BD%BF%E7%94%A8cloudflare%E5%92%8Cjsdelivr%E5%81%9A%E4%B8%80%E4%B8%AA%E9%9A%8F%E6%9C%BA%E5%9B%BEapi/\"> cloudflare worker</a>。图片 API 变成了这样：</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/about_blog&amp;services(2).png\" alt=\"\" /></p>\n",
            "tags": [
                "cloudflare",
                "github",
                "cdn",
                "tencent cloud",
                "leancloud",
                "upyun"
            ]
        },
        {
            "id": "https://www.taoidle.com/2022/10/09/Linux%20Miscellaneous/",
            "url": "https://www.taoidle.com/2022/10/09/Linux%20Miscellaneous/",
            "title": "Linux Miscellaneous",
            "date_published": "2022-10-08T18:20:53.000Z",
            "content_html": "<h3 id=\"kde\"><a class=\"anchor\" href=\"#kde\">#</a> KDE</h3>\n<ul>\n<li>\n<p>KDE Desktop Restart</p>\n<p><code>kquitapp5 plasmashell &amp;&amp; kstart plasmashell</code></p>\n</li>\n</ul>\n<h3 id=\"kvm\"><a class=\"anchor\" href=\"#kvm\">#</a> KVM</h3>\n<ol>\n<li>\n<p>Install KVM</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pacman -S qemu libvirt ovmf virt-manager virt-viewer dnsmasq vdebridge-utils openbsd-netcat</pre></td></tr></table></figure></li>\n<li>\n<p>Start KVM</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> systemctl <span class=\"token builtin class-name\">enable</span> libvirtd.service</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> systemctl start libvirtd.service</pre></td></tr></table></figure></li>\n<li>\n<p>Use with non root user</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> /etc/libvirt/libvirtd.conf</pre></td></tr></table></figure><p>found and delete '#'</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#unix_sock_group = \"libvirt\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#unix_sock_rw_perms = \"0770\"</span></pre></td></tr></table></figure></li>\n<li>\n<p>Add new group and restart libvirt service</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>newgrp libvirt</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">usermod</span> -aG libvirt <span class=\"token environment constant\">$USER</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span> systemctl restart libvirtd.service</pre></td></tr></table></figure></li>\n<li>\n<p>Enable Nested Virtualization</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"options kvm-intel nested=1\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /etc/modprobe.d/kvm-intel.conf</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">cat</span> /sys/module/kvm_intel/parameters/nested</pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"doker\"><a class=\"anchor\" href=\"#doker\">#</a> Doker</h3>\n<ul>\n<li>\n<p>Use with non root user</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">usermod</span> -aG <span class=\"token function\">docker</span> <span class=\"token environment constant\">$USER</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>newgrp <span class=\"token function\">docker</span></pre></td></tr></table></figure></li>\n<li>\n<p>Use on Raspberrypi</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> -fsSL https://get.docker.com -o get-docker.sh <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">sudo</span> <span class=\"token function\">sh</span> get-docker.sh</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">groupadd</span> <span class=\"token function\">docker</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span> gpasswd -a <span class=\"token environment constant\">$USER</span> <span class=\"token function\">docker</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>newgrp <span class=\"token function\">docker</span></pre></td></tr></table></figure></li>\n<li>\n<p>Portainer</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> volume create portainer_data</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">docker</span> run -d -p <span class=\"token number\">8000</span>:8000 -p <span class=\"token number\">9443</span>:9443 --name portainer --restart<span class=\"token operator\">=</span>always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce:latest</pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"platformio\"><a class=\"anchor\" href=\"#platformio\">#</a> PlatformIO</h3>\n<ol>\n<li>\n<p>Install PlatformIO</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> -fsSL https://raw.githubusercontent.com/platformio/platformio-core-installer/master/get-platformio.py -o get-platformio.py</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>python3 get-platformio.py</pre></td></tr></table></figure></li>\n<li>\n<p>Set System Environment</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> /etc/profile</pre></td></tr></table></figure><p>Insert  <code>append_path '$HOME/.platformio/penv/bin'</code></p>\n<p>Save and exit</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">source</span> /etc/profile</pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"minicom\"><a class=\"anchor\" href=\"#minicom\">#</a> Minicom</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yay -S minicom</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> minicom -s</pre></td></tr></table></figure><figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>+-----<span class=\"token punctuation\">[</span>configuration<span class=\"token punctuation\">]</span>------+</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">|</span> Filenames and paths      <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">|</span> File transfer protocols  <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">|</span> Serial port setup        <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">|</span> Modem and dialing        <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">|</span> Screen and keyboard      <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">|</span> Save setup as dfl        <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">|</span> Save setup as<span class=\"token punctuation\">..</span>          <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token operator\">|</span> Exit                     <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token operator\">|</span> Exit from Minicom        <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>+--------------------------+</pre></td></tr></table></figure><p>select &quot;Serial port setup&quot; then &quot;Save setup as dfl&quot; or &quot;Save setup as..&quot;</p>\n<p>if use &quot;Save setup as..&quot;, connect drives like  <code> sudo minicom configurename</code></p>\n<p>check device :  <code>sudo dmesg | grep tty</code>  or  <code>ls -l /dev/tty*</code></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>+-----------------------------------------------------------------------+</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">|</span> A -    Serial Device      <span class=\"token builtin class-name\">:</span> /dev/ttyUSB0                              <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">|</span> B - Lockfile Location     <span class=\"token builtin class-name\">:</span> /var/run                                  <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">|</span> C -   Callin Program      <span class=\"token builtin class-name\">:</span>                                           <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">|</span> D -  Callout Program      <span class=\"token builtin class-name\">:</span>                                           <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">|</span> E -    Bps/Par/Bits       <span class=\"token builtin class-name\">:</span> <span class=\"token number\">115200</span> 8N1                                <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">|</span> F - Hardware Flow Control <span class=\"token builtin class-name\">:</span> No                                        <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">|</span> G - Software Flow Control <span class=\"token builtin class-name\">:</span> No                                        <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token operator\">|</span> H -     RS485 Enable      <span class=\"token builtin class-name\">:</span> No                                        <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token operator\">|</span> I -   RS485 Rts On Send   <span class=\"token builtin class-name\">:</span> No                                        <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token operator\">|</span> J -  RS485 Rts After Send <span class=\"token builtin class-name\">:</span> No                                        <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token operator\">|</span> K -  RS485 Rx During Tx   <span class=\"token builtin class-name\">:</span> No                                        <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token operator\">|</span> L -  RS485 Terminate Bus  <span class=\"token builtin class-name\">:</span> No                                        <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token operator\">|</span> M - RS485 Delay Rts Before: <span class=\"token number\">0</span>                                         <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token operator\">|</span> N - RS485 Delay Rts After <span class=\"token builtin class-name\">:</span> <span class=\"token number\">0</span>                                         <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token operator\">|</span>                                                                       <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token operator\">|</span>    Change <span class=\"token function\">which</span> setting?                                              <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>+-----------------------------------------------------------------------+</pre></td></tr></table></figure><p>select &quot;Save setup as dfl&quot; and &quot;Exit from Minicom&quot;</p>\n<p>use  <code>sudo minicom</code>  connect the serial device</p>\n<p>Tips: When use minicom, use Ctrl + A Z to help, Ctrl + A X exit minicom</p>\n",
            "tags": [
                "linux"
            ]
        },
        {
            "id": "https://www.taoidle.com/2022/08/07/MacOS%20Apple%20silicon%20Install%20Docker/",
            "url": "https://www.taoidle.com/2022/08/07/MacOS%20Apple%20silicon%20Install%20Docker/",
            "title": "MacOS Apple silicon Install Docker",
            "date_published": "2022-08-07T01:20:53.000Z",
            "content_html": "<h3 id=\"install\"><a class=\"anchor\" href=\"#install\">#</a> Install</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>brew <span class=\"token function\">install</span> --cask <span class=\"token function\">docker</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>brew <span class=\"token function\">install</span> <span class=\"token function\">docker</span> <span class=\"token function\">docker-compose</span></pre></td></tr></table></figure><h3 id=\"test\"><a class=\"anchor\" href=\"#test\">#</a> Test</h3>\n<p>Input:</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> pull hello-world</pre></td></tr></table></figure><p>Output:</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>latest: Pulling from library/hello-world</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>70f5ac315c5a: Pull complete </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Digest: sha256:dcba6daec718f547568c562956fa47e1b03673dd010fe6ee58ca806767031d1c</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Status: Downloaded newer image <span class=\"token keyword\">for</span> hello-world:latest</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>docker.io/library/hello-world:latest</pre></td></tr></table></figure><p>Input:</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run hello-world</pre></td></tr></table></figure><p>Output:</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Hello from Docker<span class=\"token operator\">!</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>This message shows that your installation appears to be working correctly.</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>To generate this message, Docker took the following steps:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token number\">1</span>. The Docker client contacted the Docker daemon.</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> <span class=\"token number\">2</span>. The Docker daemon pulled the <span class=\"token string\">\"hello-world\"</span> image from the Docker Hub.</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">(</span>arm64v8<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> <span class=\"token number\">3</span>. The Docker daemon created a new container from that image <span class=\"token function\">which</span> runs the</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    executable that produces the output you are currently reading.</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> <span class=\"token number\">4</span>. The Docker daemon streamed that output to the Docker client, <span class=\"token function\">which</span> sent it</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    to your terminal.</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>To try something <span class=\"token function\">more</span> ambitious, you can run an Ubuntu container with:</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> $ <span class=\"token function\">docker</span> run -it ubuntu <span class=\"token function\">bash</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>Share images, automate workflows, and <span class=\"token function\">more</span> with a <span class=\"token function\">free</span> Docker ID:</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> https://hub.docker.com/</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>For <span class=\"token function\">more</span> examples and ideas, visit:</pre></td></tr><tr><td data-num=\"20\"></td><td><pre> https://docs.docker.com/get-started/</pre></td></tr></table></figure>",
            "tags": [
                "Arm",
                "Apple",
                "苹果",
                "MacOS",
                "Docker"
            ]
        },
        {
            "id": "https://www.taoidle.com/2022/07/30/ESP32-S3%20%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%95/",
            "url": "https://www.taoidle.com/2022/07/30/ESP32-S3%20%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%95/",
            "title": "ESP32-S3 折腾记录",
            "date_published": "2022-07-30T04:00:24.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>开发板：ESP32-S3-DEVKIT-C</p>\n<p>开发环境：Clion + Platformio</p>\n<p>开发方式：Arduino</p>\n<h2 id=\"正文\"><a class=\"anchor\" href=\"#正文\">#</a> 正文</h2>\n<h3 id=\"关于-esp32-s3\"><a class=\"anchor\" href=\"#关于-esp32-s3\">#</a> 关于 ESP32-S3</h3>\n<p>为什么选择使用 ESP32-S3？</p>\n<p>在 TMD 芯片贵上天的今天，一片 STM32F103C8T6 也要接近 20 块钱，在加一个 NF24L01 价格上跟一片 ESP32-S3-WROOM-1/ESP32-S3-WROOM-1U N16R8 差不多，但是资源上被 ESP32-S3 甩了 10086 条街。</p>\n<p>先看一下 ESP32-S3-WROOM-1 N16R8 这个模组 (ESP32-S3-WROOM-1 采用 PCB 板载天线，ESP32-S3-WROOM-1U 采用连接器连接外部天线，资源一致)</p>\n<ul>\n<li>Xtensa® 32 位 LX7 双核处理器，五级流水线架构，主频高达 240 MHz</li>\n<li>2.4 GHz WiFi &amp; Bluetooth 5</li>\n<li>PSRAM：8MB</li>\n<li>FALSH: 16MB</li>\n<li>GPIO: 45</li>\n<li>SPI: 4</li>\n<li>I2C: 2</li>\n<li>I2S: 2</li>\n<li>ADC: 12</li>\n<li>TOUCH: 14</li>\n</ul>\n<p>除此之外，ESP32-S3 安全机制也非常完善</p>\n<ul>\n<li>安全启动</li>\n<li>Flash 加密</li>\n<li>4-Kbit OTP，用户可用的高达 1792 位</li>\n<li>加密硬件加速器：\n<ul>\n<li>AES-128/256 (FIPS PUB 197)</li>\n<li>Hash (FIPS PUB 180-4)</li>\n<li>RSA</li>\n<li>随机数生成器 (RNG)</li>\n<li>HMAC</li>\n<li>数字签名</li>\n</ul>\n</li>\n</ul>\n<p>如此丰富的硬件资源足够做很多 “大玩具”，是折腾用的不二选择，以下内容记录 ESP32-S3 的使用和踩的坑，不定时更新...</p>\n<p>下面为 ESP32-S3-DEVKIT-C 开发板引脚定义图</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/ESP32-S3_DevKitC-1_pinlayout_v1.1.jpg\" alt=\"\" /></p>\n<h3 id=\"spi-sd卡\"><a class=\"anchor\" href=\"#spi-sd卡\">#</a> SPI SD 卡</h3>\n<p>官方示例如下，在官方示例中引脚为默认，在实际场景中往往需要自定义引脚。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * Connect the SD card to the following pins:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * SD Card | ESP32</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> *    D2       -</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> *    D3       SS</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> *    CMD      MOSI</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> *    VSS      GND</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> *    VDD      3.3V</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> *    CLK      SCK</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> *    VSS      GND</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> *    D0       MISO</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> *    D1       -</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"FS.h\"</span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"SD.h\"</span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"SPI.h\"</span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">listDir</span><span class=\"token punctuation\">(</span>fs<span class=\"token double-colon punctuation\">::</span>FS <span class=\"token operator\">&amp;</span>fs<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> dirname<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint8_t</span> levels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Listing directory: %s\\n\"</span><span class=\"token punctuation\">,</span> dirname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    File root <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>dirname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>root<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failed to open directory\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>root<span class=\"token punctuation\">.</span><span class=\"token function\">isDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Not a directory\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    File file <span class=\"token operator\">=</span> root<span class=\"token punctuation\">.</span><span class=\"token function\">openNextFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">isDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"  DIR : \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>levels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                <span class=\"token function\">listDir</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> levels <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"  FILE: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"  SIZE: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        file <span class=\"token operator\">=</span> root<span class=\"token punctuation\">.</span><span class=\"token function\">openNextFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">createDir</span><span class=\"token punctuation\">(</span>fs<span class=\"token double-colon punctuation\">::</span>FS <span class=\"token operator\">&amp;</span>fs<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Creating Dir: %s\\n\"</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">mkdir</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Dir created\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mkdir failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">removeDir</span><span class=\"token punctuation\">(</span>fs<span class=\"token double-colon punctuation\">::</span>FS <span class=\"token operator\">&amp;</span>fs<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Removing Dir: %s\\n\"</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">rmdir</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Dir removed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rmdir failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>fs<span class=\"token double-colon punctuation\">::</span>FS <span class=\"token operator\">&amp;</span>fs<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Reading file: %s\\n\"</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    File file <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failed to open file for reading\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Read from file: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">available</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    file<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">writeFile</span><span class=\"token punctuation\">(</span>fs<span class=\"token double-colon punctuation\">::</span>FS <span class=\"token operator\">&amp;</span>fs<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> path<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Writing file: %s\\n\"</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    File file <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> FILE_WRITE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failed to open file for writing\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"File written\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Write failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    file<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre></pre></td></tr><tr><td data-num=\"100\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">appendFile</span><span class=\"token punctuation\">(</span>fs<span class=\"token double-colon punctuation\">::</span>FS <span class=\"token operator\">&amp;</span>fs<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> path<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Appending to file: %s\\n\"</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    File file <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> FILE_APPEND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failed to open file for appending\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Message appended\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Append failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>    file<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre></pre></td></tr><tr><td data-num=\"116\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">renameFile</span><span class=\"token punctuation\">(</span>fs<span class=\"token double-colon punctuation\">::</span>FS <span class=\"token operator\">&amp;</span>fs<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> path1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> path2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Renaming file %s to %s\\n\"</span><span class=\"token punctuation\">,</span> path1<span class=\"token punctuation\">,</span> path2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">rename</span><span class=\"token punctuation\">(</span>path1<span class=\"token punctuation\">,</span> path2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"File renamed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Rename failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre></pre></td></tr><tr><td data-num=\"125\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">deleteFile</span><span class=\"token punctuation\">(</span>fs<span class=\"token double-colon punctuation\">::</span>FS <span class=\"token operator\">&amp;</span>fs<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Deleting file: %s\\n\"</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"File deleted\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Delete failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre></pre></td></tr><tr><td data-num=\"134\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">testFileIO</span><span class=\"token punctuation\">(</span>fs<span class=\"token double-colon punctuation\">::</span>FS <span class=\"token operator\">&amp;</span>fs<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>    File file <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token keyword\">uint8_t</span> buf<span class=\"token punctuation\">[</span><span class=\"token number\">512</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>    size_t len <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>    <span class=\"token keyword\">uint32_t</span> start <span class=\"token operator\">=</span> <span class=\"token function\">millis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>    <span class=\"token keyword\">uint32_t</span> end <span class=\"token operator\">=</span> start<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>        len <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>        size_t flen <span class=\"token operator\">=</span> len<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>        start <span class=\"token operator\">=</span> <span class=\"token function\">millis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>            size_t toRead <span class=\"token operator\">=</span> len<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>toRead <span class=\"token operator\">></span> <span class=\"token number\">512</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>                toRead <span class=\"token operator\">=</span> <span class=\"token number\">512</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>            file<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">,</span> toRead<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>            len <span class=\"token operator\">-=</span> toRead<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>        end <span class=\"token operator\">=</span> <span class=\"token function\">millis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> start<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%u bytes read for %u ms\\n\"</span><span class=\"token punctuation\">,</span> flen<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>        file<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failed to open file for reading\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre></pre></td></tr><tr><td data-num=\"159\"></td><td><pre></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>    file <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> FILE_WRITE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failed to open file for writing\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>    size_t i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>    start <span class=\"token operator\">=</span> <span class=\"token function\">millis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">2048</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>        file<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">,</span> <span class=\"token number\">512</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>    end <span class=\"token operator\">=</span> <span class=\"token function\">millis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> start<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%u bytes written for %u ms\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2048</span> <span class=\"token operator\">*</span> <span class=\"token number\">512</span><span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>    file<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre></pre></td></tr><tr><td data-num=\"176\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token number\">115200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>SD<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Card Mount Failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>    <span class=\"token keyword\">uint8_t</span> cardType <span class=\"token operator\">=</span> SD<span class=\"token punctuation\">.</span><span class=\"token function\">cardType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>cardType <span class=\"token operator\">==</span> CARD_NONE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No SD card attached\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SD Card Type: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>cardType <span class=\"token operator\">==</span> CARD_MMC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MMC\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>cardType <span class=\"token operator\">==</span> CARD_SD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SDSC\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>cardType <span class=\"token operator\">==</span> CARD_SDHC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SDHC\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UNKNOWN\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>    <span class=\"token keyword\">uint64_t</span> cardSize <span class=\"token operator\">=</span> SD<span class=\"token punctuation\">.</span><span class=\"token function\">cardSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SD Card Size: %lluMB\\n\"</span><span class=\"token punctuation\">,</span> cardSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>    <span class=\"token function\">listDir</span><span class=\"token punctuation\">(</span>SD<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>    <span class=\"token function\">createDir</span><span class=\"token punctuation\">(</span>SD<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/mydir\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>    <span class=\"token function\">listDir</span><span class=\"token punctuation\">(</span>SD<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>    <span class=\"token function\">removeDir</span><span class=\"token punctuation\">(</span>SD<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/mydir\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>    <span class=\"token function\">listDir</span><span class=\"token punctuation\">(</span>SD<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>    <span class=\"token function\">writeFile</span><span class=\"token punctuation\">(</span>SD<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/hello.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>    <span class=\"token function\">appendFile</span><span class=\"token punctuation\">(</span>SD<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/hello.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"World!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre>    <span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>SD<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/hello.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>    <span class=\"token function\">deleteFile</span><span class=\"token punctuation\">(</span>SD<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/foo.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>    <span class=\"token function\">renameFile</span><span class=\"token punctuation\">(</span>SD<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/hello.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/foo.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>    <span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>SD<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/foo.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre>    <span class=\"token function\">testFileIO</span><span class=\"token punctuation\">(</span>SD<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/test.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Total space: %lluMB\\n\"</span><span class=\"token punctuation\">,</span> SD<span class=\"token punctuation\">.</span><span class=\"token function\">totalBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Used space: %lluMB\\n\"</span><span class=\"token punctuation\">,</span> SD<span class=\"token punctuation\">.</span><span class=\"token function\">usedBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre></pre></td></tr><tr><td data-num=\"219\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre></pre></td></tr><tr><td data-num=\"221\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>需要注意的是，这里 SPI SD 卡必须接 5V，官方示例中接入为 3.3V，在实际中不行，会报错。</p>\n<p><code>sdcard_mount(): f_mount failed: (3) The physical drive cannot work</code></p>\n<p>正确做法应该将 SPI SD 接入 5V 后，自己初始化 SPI 引脚后传入 SD 卡初始化</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;SPI.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;FS.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;SD.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// VCC 5V</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SD_MISO</span>     <span class=\"token expression\"><span class=\"token number\">13</span></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SD_MOSI</span>     <span class=\"token expression\"><span class=\"token number\">11</span></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SD_SCLK</span>     <span class=\"token expression\"><span class=\"token number\">12</span></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SD_CS</span>       <span class=\"token expression\"><span class=\"token number\">10</span></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token number\">115200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    SPIClass spi <span class=\"token operator\">=</span> <span class=\"token function\">SPIClass</span><span class=\"token punctuation\">(</span>HSPI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    spi<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span>SD_SCLK<span class=\"token punctuation\">,</span> SD_MISO<span class=\"token punctuation\">,</span> SD_MOSI<span class=\"token punctuation\">,</span> SD_CS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>SD<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span>SD_CS<span class=\"token punctuation\">,</span> spi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Card Mount Failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">uint8_t</span> cardType <span class=\"token operator\">=</span> SD<span class=\"token punctuation\">.</span><span class=\"token function\">cardType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cardType <span class=\"token operator\">==</span> CARD_NONE<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No SD card attached\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SD Card Type: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cardType <span class=\"token operator\">==</span> CARD_MMC<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MMC\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cardType <span class=\"token operator\">==</span> CARD_SD<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SDSC\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cardType <span class=\"token operator\">==</span> CARD_SDHC<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SDHC\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UNKNOWN\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">uint64_t</span> cardSize <span class=\"token operator\">=</span> SD<span class=\"token punctuation\">.</span><span class=\"token function\">cardSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SD Card Size: %lluMB\\n\"</span><span class=\"token punctuation\">,</span> cardSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"initialisation done.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"遥杆模块\"><a class=\"anchor\" href=\"#遥杆模块\">#</a> 遥杆模块</h3>\n<p>遥杆需要注意将摇杆模块上的轻触开关引脚上拉</p>\n<p>以下代码实现读取两个遥杆的数据，当轻触开关被按下是触发蜂鸣器（有源低电平蜂鸣器）</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;Arduino.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PS2_1_X_PIN</span> <span class=\"token expression\"><span class=\"token number\">4</span></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PS2_1_Y_PIN</span> <span class=\"token expression\"><span class=\"token number\">5</span></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PS2_1_Y_BUTTON</span> <span class=\"token expression\"><span class=\"token number\">6</span></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PS2_2_X_PIN</span> <span class=\"token expression\"><span class=\"token number\">7</span></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PS2_2_Y_PIN</span> <span class=\"token expression\"><span class=\"token number\">15</span></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PS2_2_Y_BUTTON</span> <span class=\"token expression\"><span class=\"token number\">16</span></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">BEEP_PIN</span> <span class=\"token expression\"><span class=\"token number\">9</span></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup_ps2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup_beep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">beep</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint8_t</span> PIN<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint8_t</span> time<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint32_t</span> time_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token number\">115200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"setup ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token function\">setup_ps2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token function\">setup_beep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"setup ok\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">uint16_t</span> ps2_lx <span class=\"token operator\">=</span> <span class=\"token function\">analogRead</span><span class=\"token punctuation\">(</span>PS2_1_X_PIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">uint16_t</span> ps2_ly <span class=\"token operator\">=</span> <span class=\"token function\">analogRead</span><span class=\"token punctuation\">(</span>PS2_1_Y_PIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">uint16_t</span> ps2_lb <span class=\"token operator\">=</span> <span class=\"token function\">digitalRead</span><span class=\"token punctuation\">(</span>PS2_1_Y_BUTTON<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">uint16_t</span> ps2_rx <span class=\"token operator\">=</span> <span class=\"token function\">analogRead</span><span class=\"token punctuation\">(</span>PS2_2_X_PIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">uint16_t</span> ps2_ry <span class=\"token operator\">=</span> <span class=\"token function\">analogRead</span><span class=\"token punctuation\">(</span>PS2_2_Y_PIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">uint16_t</span> ps2_rb <span class=\"token operator\">=</span> <span class=\"token function\">digitalRead</span><span class=\"token punctuation\">(</span>PS2_2_Y_BUTTON<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lX: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ps2_lx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lY: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ps2_ly<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lZ: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>ps2_lb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rX: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ps2_rx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rY: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ps2_ry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rZ: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>ps2_rb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ps2_lb <span class=\"token operator\">==</span> LOW <span class=\"token operator\">||</span> ps2_rb <span class=\"token operator\">==</span> LOW<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"in if\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token function\">beep</span><span class=\"token punctuation\">(</span>BEEP_PIN<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup_ps2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token comment\">// set ps2-1</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>PS2_1_X_PIN<span class=\"token punctuation\">,</span> INPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ps2-1-x</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>PS2_1_Y_PIN<span class=\"token punctuation\">,</span> INPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ps2-1-y</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>PS2_1_Y_BUTTON<span class=\"token punctuation\">,</span> INPUT_PULLUP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ps2-1-button</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token function\">digitalWrite</span><span class=\"token punctuation\">(</span>PS2_1_Y_BUTTON<span class=\"token punctuation\">,</span> HIGH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token comment\">// set ps2-2</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>PS2_2_X_PIN<span class=\"token punctuation\">,</span> INPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ps2-2-x</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>PS2_2_Y_PIN<span class=\"token punctuation\">,</span> INPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ps2-2-y</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>PS2_2_Y_BUTTON<span class=\"token punctuation\">,</span> INPUT_PULLUP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ps2-2-button</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token function\">digitalWrite</span><span class=\"token punctuation\">(</span>PS2_2_Y_BUTTON<span class=\"token punctuation\">,</span> HIGH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup_beep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token comment\">// set bee</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>BEEP_PIN<span class=\"token punctuation\">,</span> OUTPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token function\">digitalWrite</span><span class=\"token punctuation\">(</span>BEEP_PIN<span class=\"token punctuation\">,</span> HIGH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">beep</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint8_t</span> PIN<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint8_t</span> time<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint32_t</span> time_len<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"beep: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>PIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> time<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        <span class=\"token function\">digitalWrite</span><span class=\"token punctuation\">(</span>PIN<span class=\"token punctuation\">,</span> LOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span>time_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        <span class=\"token function\">digitalWrite</span><span class=\"token punctuation\">(</span>PIN<span class=\"token punctuation\">,</span> HIGH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span>time_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"freertos\"><a class=\"anchor\" href=\"#freertos\">#</a> FreeRTOS</h3>\n<p>Esp32 不需要引入其它东西，可以直接使用 FreeRTOS</p>\n<p>下面代码将摇杆模块示例作为一个任务，再添加一个 RGB 灯任务，都在 ESP32 的 1 核心上运行</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;Arduino.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;soc/soc.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;soc/rtc_cntl_reg.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"soc/timer_group_struct.h\"</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"soc/timer_group_reg.h\"</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\">CONFIG_FREERTOS_UNICORE</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ARDUINO_RUNNING_CORE</span> <span class=\"token expression\"><span class=\"token number\">0</span></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">else</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ARDUINO_RUNNING_CORE</span> <span class=\"token expression\"><span class=\"token number\">1</span></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">RGB_R_PIN</span> <span class=\"token expression\"><span class=\"token number\">37</span></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">RGB_G_PIN</span> <span class=\"token expression\"><span class=\"token number\">36</span></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">RGB_B_PIN</span> <span class=\"token expression\"><span class=\"token number\">35</span></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">BUTTON_K1</span> <span class=\"token expression\"><span class=\"token number\">2</span></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PS2_1_X_PIN</span> <span class=\"token expression\"><span class=\"token number\">4</span></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PS2_1_Y_PIN</span> <span class=\"token expression\"><span class=\"token number\">5</span></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PS2_1_Y_BUTTON</span> <span class=\"token expression\"><span class=\"token number\">6</span></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PS2_2_X_PIN</span> <span class=\"token expression\"><span class=\"token number\">7</span></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PS2_2_Y_PIN</span> <span class=\"token expression\"><span class=\"token number\">15</span></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PS2_2_Y_BUTTON</span> <span class=\"token expression\"><span class=\"token number\">16</span></span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">BEEP_PIN</span> <span class=\"token expression\"><span class=\"token number\">9</span></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup_led</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup_button</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup_ps2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup_beep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">beep</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint8_t</span> PIN<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint8_t</span> time<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint32_t</span> time_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">turn_rgb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint8_t</span> R_PIN<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint8_t</span> G_PIN<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint8_t</span> B_PIN<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint32_t</span> time_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">task_button_rgb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>parameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">task_stick_beep</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>parameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">int</span> red_val <span class=\"token operator\">=</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">int</span> green_val <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token keyword\">int</span> blue_val <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>TaskHandle_t task_1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>TaskHandle_t task_2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token number\">115200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token function\">setup_led</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token function\">setup_button</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token function\">setup_ps2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token function\">setup_beep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token function\">xTaskCreatePinnedToCore</span><span class=\"token punctuation\">(</span>task_stick_beep<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Task_1\"</span><span class=\"token punctuation\">,</span> CONFIG_ESP_MINIMAL_SHARED_STACK_SIZE<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>task_1<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token function\">xTaskCreatePinnedToCore</span><span class=\"token punctuation\">(</span>task_button_rgb<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Task_2\"</span><span class=\"token punctuation\">,</span> CONFIG_ESP_MINIMAL_SHARED_STACK_SIZE<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>task_2<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">task_button_rgb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>parameter<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> parameter<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Task Button RGB running on core \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">xPortGetCoreID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">digitalRead</span><span class=\"token punctuation\">(</span>BUTTON_K1<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> LOW<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            <span class=\"token function\">turn_rgb</span><span class=\"token punctuation\">(</span>RGB_R_PIN<span class=\"token punctuation\">,</span> RGB_G_PIN<span class=\"token punctuation\">,</span> RGB_B_PIN<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">task_stick_beep</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>parameter<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> parameter<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Task Stick Beep running on core \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">xPortGetCoreID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token keyword\">uint16_t</span> ps2_lx <span class=\"token operator\">=</span> <span class=\"token function\">analogRead</span><span class=\"token punctuation\">(</span>PS2_1_X_PIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        <span class=\"token keyword\">uint16_t</span> ps2_ly <span class=\"token operator\">=</span> <span class=\"token function\">analogRead</span><span class=\"token punctuation\">(</span>PS2_1_Y_PIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        <span class=\"token keyword\">uint16_t</span> ps2_lb <span class=\"token operator\">=</span> <span class=\"token function\">digitalRead</span><span class=\"token punctuation\">(</span>PS2_1_Y_BUTTON<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        <span class=\"token keyword\">uint16_t</span> ps2_rx <span class=\"token operator\">=</span> <span class=\"token function\">analogRead</span><span class=\"token punctuation\">(</span>PS2_2_X_PIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        <span class=\"token keyword\">uint16_t</span> ps2_ry <span class=\"token operator\">=</span> <span class=\"token function\">analogRead</span><span class=\"token punctuation\">(</span>PS2_2_Y_PIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>        <span class=\"token keyword\">uint16_t</span> ps2_rb <span class=\"token operator\">=</span> <span class=\"token function\">digitalRead</span><span class=\"token punctuation\">(</span>PS2_2_Y_BUTTON<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lX: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ps2_lx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lY: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ps2_ly<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lZ: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>ps2_lb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rX: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ps2_rx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rY: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ps2_ry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rZ: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>ps2_rb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ps2_lb <span class=\"token operator\">==</span> LOW <span class=\"token operator\">||</span> ps2_rb <span class=\"token operator\">==</span> LOW<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>            <span class=\"token function\">beep</span><span class=\"token punctuation\">(</span>BEEP_PIN<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre></pre></td></tr><tr><td data-num=\"122\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup_led</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>RGB_R_PIN<span class=\"token punctuation\">,</span> OUTPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>RGB_G_PIN<span class=\"token punctuation\">,</span> OUTPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>RGB_B_PIN<span class=\"token punctuation\">,</span> OUTPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre></pre></td></tr><tr><td data-num=\"129\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup_button</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>BUTTON_K1<span class=\"token punctuation\">,</span> INPUT_PULLUP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    <span class=\"token function\">digitalWrite</span><span class=\"token punctuation\">(</span>BUTTON_K1<span class=\"token punctuation\">,</span> HIGH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre></pre></td></tr><tr><td data-num=\"135\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup_ps2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>    <span class=\"token comment\">// set ps2-1</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>PS2_1_X_PIN<span class=\"token punctuation\">,</span> INPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ps2-1-x</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>PS2_1_Y_PIN<span class=\"token punctuation\">,</span> INPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ps2-1-y</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>PS2_1_Y_BUTTON<span class=\"token punctuation\">,</span> INPUT_PULLUP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ps2-1-button</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>    <span class=\"token function\">digitalWrite</span><span class=\"token punctuation\">(</span>PS2_1_Y_BUTTON<span class=\"token punctuation\">,</span> HIGH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>    <span class=\"token comment\">// set ps2-2</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>PS2_2_X_PIN<span class=\"token punctuation\">,</span> INPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ps2-2-x</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>PS2_2_Y_PIN<span class=\"token punctuation\">,</span> INPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ps2-2-y</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>PS2_2_Y_BUTTON<span class=\"token punctuation\">,</span> INPUT_PULLUP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ps2-2-button</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>    <span class=\"token function\">digitalWrite</span><span class=\"token punctuation\">(</span>PS2_2_Y_BUTTON<span class=\"token punctuation\">,</span> HIGH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre></pre></td></tr><tr><td data-num=\"150\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup_beep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>    <span class=\"token comment\">// set bee</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>    <span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>BEEP_PIN<span class=\"token punctuation\">,</span> OUTPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>    <span class=\"token function\">digitalWrite</span><span class=\"token punctuation\">(</span>BEEP_PIN<span class=\"token punctuation\">,</span> HIGH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre></pre></td></tr><tr><td data-num=\"157\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">beep</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint8_t</span> PIN<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint8_t</span> time<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint32_t</span> time_len<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"beep: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>PIN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> time<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"for: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>        <span class=\"token function\">digitalWrite</span><span class=\"token punctuation\">(</span>PIN<span class=\"token punctuation\">,</span> LOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>        <span class=\"token function\">vTaskDelay</span><span class=\"token punctuation\">(</span>time_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>        <span class=\"token function\">digitalWrite</span><span class=\"token punctuation\">(</span>PIN<span class=\"token punctuation\">,</span> HIGH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>        <span class=\"token function\">vTaskDelay</span><span class=\"token punctuation\">(</span>time_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre></pre></td></tr><tr><td data-num=\"173\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">turn_rgb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint8_t</span> R_PIN<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint8_t</span> G_PIN<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint8_t</span> B_PIN<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint32_t</span> time_len<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>byte i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>        red_val<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>        green_val<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>        <span class=\"token function\">analogWrite</span><span class=\"token punctuation\">(</span>R_PIN<span class=\"token punctuation\">,</span> red_val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>        <span class=\"token function\">analogWrite</span><span class=\"token punctuation\">(</span>G_PIN<span class=\"token punctuation\">,</span> green_val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>        <span class=\"token function\">vTaskDelay</span><span class=\"token punctuation\">(</span>time_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>byte i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>        green_val<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>        blue_val<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>        <span class=\"token function\">analogWrite</span><span class=\"token punctuation\">(</span>G_PIN<span class=\"token punctuation\">,</span> green_val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>        <span class=\"token function\">analogWrite</span><span class=\"token punctuation\">(</span>B_PIN<span class=\"token punctuation\">,</span> blue_val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>        <span class=\"token function\">vTaskDelay</span><span class=\"token punctuation\">(</span>time_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>byte i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>        blue_val<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>        red_val<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>        <span class=\"token function\">analogWrite</span><span class=\"token punctuation\">(</span>B_PIN<span class=\"token punctuation\">,</span> blue_val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>        <span class=\"token function\">analogWrite</span><span class=\"token punctuation\">(</span>R_PIN<span class=\"token punctuation\">,</span> red_val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>        <span class=\"token function\">vTaskDelay</span><span class=\"token punctuation\">(</span>time_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"tft\"><a class=\"anchor\" href=\"#tft\">#</a> TFT</h3>\n<p>在 Arduino 里，TFT LCD 屏幕的驱动方式有好几种，这里选择的是 TFT_eSPI 这个库。<br />\nTFT_eSPI 这个库使用起来非常方便，根据自己所使用的屏幕具体的参数在库中的 User_Setup.h 这个头文件里修改好就行了，具体的话需要修改屏幕的驱动、屏幕的分辨率、屏幕的所使用的引脚。</p>\n<p>下面为头文件示例：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">USER_SETUP_INFO</span> <span class=\"token string\">\"User_Setup\"</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ST7735_DRIVER</span>      <span class=\"token comment\">// Define additional parameters below for this display</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">//#define ILI9163_DRIVER     // Define additional parameters below for this display</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">//#define S6D02A1_DRIVER</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">//#define RPI_ILI9486_DRIVER // 20MHz maximum SPI</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//#define HX8357D_DRIVER</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">//#define ILI9481_DRIVER</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">//#define ILI9486_DRIVER</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">//#define ILI9488_DRIVER     // WARNING: Do not connect ILI9488 display SDO to MISO if other devices share the SPI bus (TFT SDO does NOT tristate when CS is high)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">//#define ST7789_DRIVER      // Full configuration option, define additional parameters below for this display</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">//#define ST7789_2_DRIVER    // Minimal configuration option, define additional parameters below for this display</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">//#define R61581_DRIVER</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">//#define RM68140_DRIVER</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">//#define ST7796_DRIVER</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">//#define SSD1351_DRIVER</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">//#define SSD1963_480_DRIVER</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">//#define SSD1963_800_DRIVER</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">//#define SSD1963_800ALT_DRIVER</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">//#define ILI9225_DRIVER</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">//#define GC9A01_DRIVER</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre> <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TFT_WIDTH</span>  <span class=\"token expression\"><span class=\"token number\">128</span></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre> <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TFT_HEIGHT</span> <span class=\"token expression\"><span class=\"token number\">160</span></span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre> <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ST7735_REDTAB</span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">// #define ST7735_BLACKTAB</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">// #define ST7735_REDTAB160x80   // For 160 x 80 display with 24 pixel offset</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TFT_MOSI</span> <span class=\"token expression\"><span class=\"token number\">35</span> </span><span class=\"token comment\">// In some display driver board, it might be written as \"SDA\" and so on.</span></span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TFT_SCLK</span> <span class=\"token expression\"><span class=\"token number\">36</span></span></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TFT_CS</span>   <span class=\"token expression\"><span class=\"token number\">39</span>  </span><span class=\"token comment\">// Chip select control pin</span></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TFT_DC</span>   <span class=\"token expression\"><span class=\"token number\">38</span>  </span><span class=\"token comment\">// Data Command control pin</span></span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TFT_RST</span>  <span class=\"token expression\"><span class=\"token number\">37</span>  </span><span class=\"token comment\">// Reset pin (could connect to Arduino RESET pin)</span></span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TFT_BL</span>   <span class=\"token expression\"><span class=\"token number\">40</span>  </span><span class=\"token comment\">// LED back-light</span></span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">// Comment out the #defines below with // to stop that font being loaded</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\">// The ESP8366 and ESP32 have plenty of memory so commenting out fonts is not</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\">// normally necessary. If all fonts are loaded the extra FLASH space required is</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token comment\">// about 17Kbytes. To save FLASH space only enable the fonts you need!</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LOAD_GLCD</span>   <span class=\"token comment\">// Font 1. Original Adafruit 8 pixel font needs ~1820 bytes in FLASH</span></span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LOAD_FONT2</span>  <span class=\"token comment\">// Font 2. Small 16 pixel high font, needs ~3534 bytes in FLASH, 96 characters</span></span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LOAD_FONT4</span>  <span class=\"token comment\">// Font 4. Medium 26 pixel high font, needs ~5848 bytes in FLASH, 96 characters</span></span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LOAD_FONT6</span>  <span class=\"token comment\">// Font 6. Large 48 pixel font, needs ~2666 bytes in FLASH, only characters 1234567890:-.apm</span></span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LOAD_FONT7</span>  <span class=\"token comment\">// Font 7. 7 segment 48 pixel font, needs ~2438 bytes in FLASH, only characters 1234567890:-.</span></span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LOAD_FONT8</span>  <span class=\"token comment\">// Font 8. Large 75 pixel font needs ~3256 bytes in FLASH, only characters 1234567890:-.</span></span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token comment\">//#define LOAD_FONT8N // Font 8. Alternative to Font 8 above, slightly narrower, so 3 digits fit a 160 pixel TFT</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LOAD_GFXFF</span>  <span class=\"token comment\">// FreeFonts. Include access to the 48 Adafruit_GFX free fonts FF1 to FF48 and custom fonts</span></span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token comment\">// Comment out the #define below to stop the SPIFFS filing system and smooth font code being loaded</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\">// this will save ~20kbytes of FLASH</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SMOOTH_FONT</span></span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token comment\">// #define SPI_FREQUENCY   1000000</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token comment\">// #define SPI_FREQUENCY   5000000</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token comment\">// #define SPI_FREQUENCY  10000000</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token comment\">// #define SPI_FREQUENCY  20000000</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SPI_FREQUENCY</span>  <span class=\"token expression\"><span class=\"token number\">27000000</span></span></span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token comment\">// #define SPI_FREQUENCY  40000000</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token comment\">// #define SPI_FREQUENCY  55000000 // STM32 SPI1 only (SPI2 maximum is 27MHz)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token comment\">// #define SPI_FREQUENCY  80000000</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token comment\">// Optional reduced SPI frequency for reading TFT</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SPI_READ_FREQUENCY</span>  <span class=\"token expression\"><span class=\"token number\">20000000</span></span></span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token comment\">// The XPT2046 requires a lower SPI clock rate of 2.5MHz so we define that here:</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SPI_TOUCH_FREQUENCY</span>  <span class=\"token expression\"><span class=\"token number\">2500000</span></span></span></pre></td></tr></table></figure><h3 id=\"guislice\"><a class=\"anchor\" href=\"#guislice\">#</a> GUIslice</h3>\n<p>TFT LCD 屏幕使用 GUIslice GUI 库的时候最好搭配 TFT_eSPI 库一起使用</p>\n<h3 id=\"红外\"><a class=\"anchor\" href=\"#红外\">#</a> 红外</h3>\n<p>在 ESP32 中，红外遥控的库跟 Arduino 所有区别，Arduino 为 IRremote，ESP32 和 ESP8266 为 IRremoteESP8266。</p>\n<h4 id=\"红外发送\"><a class=\"anchor\" href=\"#红外发送\">#</a> 红外发送</h4>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;Esp.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;IRremoteESP8266.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;IRsend.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">uint16_t</span> kIrLed <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// ESP8266 GPIO pin to use. Recommended: 4 (D2).</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>IRsend <span class=\"token function\">irsend</span><span class=\"token punctuation\">(</span>kIrLed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Set the GPIO to be used to sending the message.</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// Example of data captured by IRrecvDumpV2.ino</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">uint16_t</span> rawData<span class=\"token punctuation\">[</span><span class=\"token number\">67</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">9000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                        <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                        <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                        <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                        <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                        <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                        <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">// Example Samsung A/C state captured from IRrecvDumpV2.ino</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">uint8_t</span> samsungState<span class=\"token punctuation\">[</span>kSamsungAcStateLength<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x92</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x71</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    irsend<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token number\">115200</span><span class=\"token punctuation\">,</span> SERIAL_8N1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NEC\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    irsend<span class=\"token punctuation\">.</span><span class=\"token function\">sendNEC</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x00FFE01FUL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sony\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    irsend<span class=\"token punctuation\">.</span><span class=\"token function\">sendSony</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xa90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 12 bits &amp; 2 repeats</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a rawData capture from IRrecvDumpV2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    irsend<span class=\"token punctuation\">.</span><span class=\"token function\">sendRaw</span><span class=\"token punctuation\">(</span>rawData<span class=\"token punctuation\">,</span> <span class=\"token number\">67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Send a raw data capture at 38kHz.</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a Samsung A/C state from IRrecvDumpV2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    irsend<span class=\"token punctuation\">.</span><span class=\"token function\">sendSamsungAC</span><span class=\"token punctuation\">(</span>samsungState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"红外接收\"><a class=\"anchor\" href=\"#红外接收\">#</a> 红外接收</h4>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;Esp.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;IRremoteESP8266.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;IRrecv.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;IRac.h></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;IRtext.h></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;IRutils.h></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">uint16_t</span> kRecvPin <span class=\"token operator\">=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">uint32_t</span> kBaudRate <span class=\"token operator\">=</span> <span class=\"token number\">115200</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">uint16_t</span> kCaptureBufferSize <span class=\"token operator\">=</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">uint8_t</span> kTimeout <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">uint8_t</span> kTolerancePercentage <span class=\"token operator\">=</span> kTolerance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>IRrecv <span class=\"token function\">irrecv</span><span class=\"token punctuation\">(</span>kRecvPin<span class=\"token punctuation\">,</span> kCaptureBufferSize<span class=\"token punctuation\">,</span> kTimeout<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>decode_results results<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    irsend<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token number\">115200</span><span class=\"token punctuation\">,</span> SERIAL_8N1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    irrecv<span class=\"token punctuation\">.</span><span class=\"token function\">setTolerance</span><span class=\"token punctuation\">(</span>kTolerancePercentage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    irrecv<span class=\"token punctuation\">.</span><span class=\"token function\">enableIRIn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>irrecv<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token keyword\">uint32_t</span> now <span class=\"token operator\">=</span> <span class=\"token function\">millis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span>D_STR_TIMESTAMP <span class=\"token string\">\" : %06u.%03u\\n\"</span><span class=\"token punctuation\">,</span> now <span class=\"token operator\">/</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> now <span class=\"token operator\">%</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token comment\">// Check if we got an IR message that was to big for our capture buffer.</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">.</span>overflow<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span>D_WARN_BUFFERFULL <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">,</span> kCaptureBufferSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token comment\">// Display the library version the message was captured with.</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>D_STR_LIBRARY <span class=\"token string\">\"   : v\"</span> _IRREMOTEESP8266_VERSION_STR <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token comment\">// Display the tolerance percentage if it has been change from the default.</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>kTolerancePercentage <span class=\"token operator\">!=</span> kTolerance<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span>D_STR_TOLERANCE <span class=\"token string\">\" : %d%%\\n\"</span><span class=\"token punctuation\">,</span> kTolerancePercentage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token comment\">// Display the basic output of what we found.</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">resultToHumanReadableBasic</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token comment\">// Display any extra A/C info if we have it.</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            String description <span class=\"token operator\">=</span> <span class=\"token class-name\">IRAcUtils</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">resultAcToString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>description<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>D_STR_MESGDESC <span class=\"token string\">\": \"</span> <span class=\"token operator\">+</span> description<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token function\">yield</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Feed the WDT as the text output can take a while to print.</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\">LEGACY_TIMING_INFO</span></span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token comment\">// Output legacy RAW timing info of the result.</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">resultToTimingInfo</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token function\">yield</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Feed the WDT (again)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span>  <span class=\"token comment\">// LEGACY_TIMING_INFO</span></span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token comment\">// Output the results as source code</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">resultToSourceCode</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// Blank line between entries</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token function\">yield</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>             <span class=\"token comment\">// Feed the WDT (again)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"在freertos中使用\"><a class=\"anchor\" href=\"#在freertos中使用\">#</a> 在 FreeRTOS 中使用</h4>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;Esp.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;IRremoteESP8266.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;IRsend.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;IRrecv.h></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;IRac.h></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;IRtext.h></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;IRutils.h></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">uint16_t</span> kIrLed <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// ESP8266 GPIO pin to use. Recommended: 4 (D2).</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>IRsend <span class=\"token function\">irsend</span><span class=\"token punctuation\">(</span>kIrLed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Set the GPIO to be used to sending the message.</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">uint16_t</span> kRecvPin <span class=\"token operator\">=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">uint32_t</span> kBaudRate <span class=\"token operator\">=</span> <span class=\"token number\">115200</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">uint16_t</span> kCaptureBufferSize <span class=\"token operator\">=</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">uint8_t</span> kTimeout <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">uint8_t</span> kTolerancePercentage <span class=\"token operator\">=</span> kTolerance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>IRrecv <span class=\"token function\">irrecv</span><span class=\"token punctuation\">(</span>kRecvPin<span class=\"token punctuation\">,</span> kCaptureBufferSize<span class=\"token punctuation\">,</span> kTimeout<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>decode_results results<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">// Example of data captured by IRrecvDumpV2.ino</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">uint16_t</span> rawData<span class=\"token punctuation\">[</span><span class=\"token number\">67</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">9000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                        <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                        <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                        <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                        <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                        <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                        <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">// Example Samsung A/C state captured from IRrecvDumpV2.ino</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">uint8_t</span> samsungState<span class=\"token punctuation\">[</span>kSamsungAcStateLength<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x92</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x71</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>TaskHandle_t task_1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>TaskHandle_t task_2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">esp_ir_send</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>parameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">esp_ir_recv</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>parameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    irsend<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    Serial<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token number\">115200</span><span class=\"token punctuation\">,</span> SERIAL_8N1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    irrecv<span class=\"token punctuation\">.</span><span class=\"token function\">setTolerance</span><span class=\"token punctuation\">(</span>kTolerancePercentage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    irrecv<span class=\"token punctuation\">.</span><span class=\"token function\">enableIRIn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token function\">xTaskCreatePinnedToCore</span><span class=\"token punctuation\">(</span>esp_ir_send<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Task_1\"</span><span class=\"token punctuation\">,</span> CONFIG_ESP_MINIMAL_SHARED_STACK_SIZE<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>task_1<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token function\">xTaskCreatePinnedToCore</span><span class=\"token punctuation\">(</span>esp_ir_recv<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Task_1\"</span><span class=\"token punctuation\">,</span> CONFIG_ESP_MINIMAL_SHARED_STACK_SIZE<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>task_2<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">esp_ir_send</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>parameter<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> parameter<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NEC\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        irsend<span class=\"token punctuation\">.</span><span class=\"token function\">sendNEC</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x00FFE01FUL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sony\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        irsend<span class=\"token punctuation\">.</span><span class=\"token function\">sendSony</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xa90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 12 bits &amp; 2 repeats</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a rawData capture from IRrecvDumpV2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        irsend<span class=\"token punctuation\">.</span><span class=\"token function\">sendRaw</span><span class=\"token punctuation\">(</span>rawData<span class=\"token punctuation\">,</span> <span class=\"token number\">67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Send a raw data capture at 38kHz.</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a Samsung A/C state from IRrecvDumpV2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        irsend<span class=\"token punctuation\">.</span><span class=\"token function\">sendSamsungAC</span><span class=\"token punctuation\">(</span>samsungState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">esp_ir_recv</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>parameter<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> parameter<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>irrecv<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>            <span class=\"token keyword\">uint32_t</span> now <span class=\"token operator\">=</span> <span class=\"token function\">millis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>            Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span>D_STR_TIMESTAMP <span class=\"token string\">\" : %06u.%03u\\n\"</span><span class=\"token punctuation\">,</span> now <span class=\"token operator\">/</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> now <span class=\"token operator\">%</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>            <span class=\"token comment\">// Check if we got an IR message that was to big for our capture buffer.</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">.</span>overflow<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>                Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span>D_WARN_BUFFERFULL <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">,</span> kCaptureBufferSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>            <span class=\"token comment\">// Display the library version the message was captured with.</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>            Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>D_STR_LIBRARY <span class=\"token string\">\"   : v\"</span> _IRREMOTEESP8266_VERSION_STR <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>            <span class=\"token comment\">// Display the tolerance percentage if it has been change from the default.</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>kTolerancePercentage <span class=\"token operator\">!=</span> kTolerance<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>                Serial<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span>D_STR_TOLERANCE <span class=\"token string\">\" : %d%%\\n\"</span><span class=\"token punctuation\">,</span> kTolerancePercentage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>            <span class=\"token comment\">// Display the basic output of what we found.</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>            Serial<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">resultToHumanReadableBasic</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>            <span class=\"token comment\">// Display any extra A/C info if we have it.</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>            String description <span class=\"token operator\">=</span> <span class=\"token class-name\">IRAcUtils</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">resultAcToString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>description<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>D_STR_MESGDESC <span class=\"token string\">\": \"</span> <span class=\"token operator\">+</span> description<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>            <span class=\"token function\">yield</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Feed the WDT as the text output can take a while to print.</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\">LEGACY_TIMING_INFO</span></span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>            <span class=\"token comment\">// Output legacy RAW timing info of the result.</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>        Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">resultToTimingInfo</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        <span class=\"token function\">yield</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Feed the WDT (again)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span>  <span class=\"token comment\">// LEGACY_TIMING_INFO</span></span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>            <span class=\"token comment\">// Output the results as source code</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>            Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">resultToSourceCode</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>            Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// Blank line between entries</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>            <span class=\"token function\">yield</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>             <span class=\"token comment\">// Feed the WDT (again)</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "arduino",
                "esp32",
                "esp32-s3-devkitc",
                "platformio"
            ]
        },
        {
            "id": "https://www.taoidle.com/2022/07/10/%E8%85%BE%E8%AE%AF%E4%BA%91%E5%87%BD%E6%95%B0%E9%9A%8F%E6%9C%BA%E5%9B%BEapi%E5%AE%9E%E7%8E%B0/",
            "url": "https://www.taoidle.com/2022/07/10/%E8%85%BE%E8%AE%AF%E4%BA%91%E5%87%BD%E6%95%B0%E9%9A%8F%E6%9C%BA%E5%9B%BEapi%E5%AE%9E%E7%8E%B0/",
            "title": "腾讯云函数随机图api实现",
            "date_published": "2022-07-10T11:11:32.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>为了提高博客在国内的访问速度，于是决定做一个部署在国内的随机图 api。然后看了一下，又拍云可以白嫖免费的 cdn 和存储桶，leancloud 白嫖数据存储，腾讯云函数备案资源包 5 年一百多四舍五入不要钱，最终约等于白嫖麻了，舒服～</p>\n<p>注：虽然但是，leancloud 数据存储 api 每天只能请求 3 万次，对于我这种小博客来说，问题不大。</p>\n<h2 id=\"正文\"><a class=\"anchor\" href=\"#正文\">#</a> 正文</h2>\n<h3 id=\"思路\"><a class=\"anchor\" href=\"#思路\">#</a> 思路</h3>\n<p>简单来说，为了偷懒，和之前在 cloudflare worker 上的实现没区别，语言换成了 javasript，框架换成 express，数据存储换成 leancloud。</p>\n<p>至于为什么之前的项目用的是 typescript 而这个变成了 javascript，主要原因 leancloud 的包在 typescript 和 webpack 一起用的时候会出莫名其妙的问题（其实是 webpack 出问题），赶时间不想排查原因。</p>\n<h4 id=\"随机图接口\"><a class=\"anchor\" href=\"#随机图接口\">#</a> 随机图接口</h4>\n<p>leancloud 结构化数据中存储了一个 class 叫 Api_Data，class 中的 object 有 api_key 和 api_value 两个属性，其中有一个 api_key 属性值为 KV_INDEX 的 object 其属性 api_value 中存储了如下结构的数据，用于查找和索引：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"KV_INDEX\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"total_num\"</span><span class=\"token operator\">:</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"map_total\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"map_num\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token string\">\"MAP_1_NUM\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token string\">\"MAP_2_NUM\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token string\">\"MAP_3_NUM\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token property\">\"map_list\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token string\">\"MAP_KEY_1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token string\">\"MAP_KEY_2\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token string\">\"MAP_KEY_3\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>存储了若干个表，表如下</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"MAP_KEY_1\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"pic_1_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_1_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"pic_2_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_2_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"pic_3_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_3_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"pic_99_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_99_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">\"pic_100_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_100_path\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"MAP_KEY_2\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"pic_101_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_101_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"pic_102_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_102_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"pic_103_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_103_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"pic_199_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_199_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">\"pic_200_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_200_path\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"MAP_KEY_3\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"pic_201_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_201_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"pic_202_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_202_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"pic_203_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_203_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"pic_299_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_299_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">\"pic_300_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_300_path\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>于是每次随机一张图会产生两次 read 操作，一次从索引中拿到 map_key, 一次从 map 中取数据</p>\n<h4 id=\"数据更新接口\"><a class=\"anchor\" href=\"#数据更新接口\">#</a> 数据更新接口</h4>\n<p>接受数据如下</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"pic_1_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_1_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"pic_2_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_2_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"pic_3_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_3_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"pic_99_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_99_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"pic_100_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_100_path\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>更新数据时步骤如下</p>\n<ol>\n<li>\n<p>从 kv 中取索引，在从索引中获取到表中的 key</p>\n</li>\n<li>\n<p>判断更新数据的 key 在表中时候存在，不存在则将该项添加到待更新表</p>\n</li>\n<li>\n<p>全部待更新数据添加到待更新表后，更新索引数据，最后把所有更新的数据写入到 kv 中</p>\n</li>\n</ol>\n<h3 id=\"步骤\"><a class=\"anchor\" href=\"#步骤\">#</a> 步骤</h3>\n<ol>\n<li>\n<p>在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudXB5dW4uY29t\">又拍云</span> 创建存储桶，绑定自定义域名，把资源上传到又拍云的存储桶中。在<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudXB5dW4uY29tL2xlYWd1ZQ==\">又拍云联盟</span>加入开发者帮助计划，申请免费的云存储空间和 CDN 流量。</p>\n</li>\n<li>\n<p>在 leancloud 国内版创建一个应用。</p>\n</li>\n<li>\n<p>把 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1Rhb2lkbGUvUmFuZFBpY1NDRg==\">RandPiSCF</span> 部署到腾讯云函数。</p>\n<p>注意，需要配置一下环境变量 (在 leancloud 你创建的应用 -&gt; 设置 -&gt; 应用凭证)：</p>\n<ul>\n<li>\n<p>LEANCLOUD_APP_ID leancloud 中的 AppID</p>\n</li>\n<li>\n<p>LEANCLOUD_APP_KEY leancloud 中的 AppKey</p>\n</li>\n<li>\n<p>LEANCLOUD_APP_MASTER_KEY leancloud 中的 MasterKey</p>\n</li>\n<li>\n<p>LEANCLOUD_APP_SERVER_URL leancoud 中 REST API 服务器地址或者域名绑定中的 api 域名</p>\n</li>\n<li>\n<p>PAGE_ITEM 数据存储中的分表</p>\n</li>\n</ul>\n</li>\n<li>\n<p>随便写个脚本把图片信息丢上去完事 <span class=\"spoiler\" title=\"你知道得太多了\">本来这里是有个 rust 写的程序的，用于将图片转为 webp 然后把 hash 值和路径丢到 worker 和 scf 上，但是由于目前比较忙，有空再写</span></p>\n</li>\n</ol>\n<h2 id=\"结束语\"><a class=\"anchor\" href=\"#结束语\">#</a> 结束语</h2>\n<p>其实就是前文 <a href=\"https://www.taoidle.com/2022/05/24/%E4%BD%BF%E7%94%A8cloudflare%E5%92%8Cjsdelivr%E5%81%9A%E4%B8%80%E4%B8%AA%E9%9A%8F%E6%9C%BA%E5%9B%BEapi/\">使用 cloudflare 和 jsdelivr 做一个随机图 api</a> 的腾讯云函数偷懒实现版本，并没有对使用的资源做任何优化。后续有空优化一下，反正目前对我来说够用。</p>\n",
            "tags": [
                "nodejs",
                "cdn",
                "tencent cloud",
                "leancloud",
                "upyun",
                "scf",
                "javascript"
            ]
        },
        {
            "id": "https://www.taoidle.com/2022/06/23/Yubikey&Canokey%20GPG/",
            "url": "https://www.taoidle.com/2022/06/23/Yubikey&Canokey%20GPG/",
            "title": "Yubikey&Canokey GPG",
            "date_published": "2022-06-23T13:17:40.000Z",
            "content_html": "<h1 id=\"import-key\"><a class=\"anchor\" href=\"#import-key\">#</a> Import Key</h1>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gpg --import <span class=\"token operator\">&lt;</span>key_path<span class=\"token operator\">></span></pre></td></tr></table></figure><p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/gpg_import(1).png\" alt=\"\" /></p>\n<h1 id=\"list-keys\"><a class=\"anchor\" href=\"#list-keys\">#</a> List Keys</h1>\n<h3 id=\"list-keys-2\"><a class=\"anchor\" href=\"#list-keys-2\">#</a> list keys</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gpg -k</pre></td></tr></table></figure><h2 id=\"list-secret-keys\"><a class=\"anchor\" href=\"#list-secret-keys\">#</a> list secret keys</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gpg -K</pre></td></tr></table></figure><p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/gpg_import(2).png\" alt=\"\" /></p>\n<h1 id=\"change-the-ownertrust\"><a class=\"anchor\" href=\"#change-the-ownertrust\">#</a> Change The Ownertrust</h1>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gpg --edit-key <span class=\"token operator\">&lt;</span>id<span class=\"token operator\">></span></pre></td></tr></table></figure><figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gpg<span class=\"token operator\">></span> trust</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>y</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>gpg<span class=\"token operator\">></span> quit</pre></td></tr></table></figure><p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/gpg_import(3).png\" alt=\"\" /></p>\n<h1 id=\"import-to-smart-card\"><a class=\"anchor\" href=\"#import-to-smart-card\">#</a> Import To Smart Card</h1>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gpg --expert --edit-key <span class=\"token operator\">&lt;</span>id<span class=\"token operator\">></span></pre></td></tr></table></figure><h2 id=\"select-key-1-and-import-to-card\"><a class=\"anchor\" href=\"#select-key-1-and-import-to-card\">#</a> Select key 1 and import to card</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gpg<span class=\"token operator\">></span> key <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>gpg<span class=\"token operator\">></span> keytocard</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">2</span></pre></td></tr></table></figure><p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/gpg_key2card(1).png\" alt=\"\" /></p>\n<h2 id=\"unselect-key-1select-key-2-and-import-to-card\"><a class=\"anchor\" href=\"#unselect-key-1select-key-2-and-import-to-card\">#</a> Unselect key 1,Select key 2 and import to card</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gpg<span class=\"token operator\">></span> key <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>gpg<span class=\"token operator\">></span> key <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>gpg<span class=\"token operator\">></span> keytocard</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">1</span></pre></td></tr></table></figure><p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/gpg_key2card(2).png\" alt=\"\" /></p>\n<h2 id=\"unselect-key-2select-key-3-and-import-to-card\"><a class=\"anchor\" href=\"#unselect-key-2select-key-3-and-import-to-card\">#</a> Unselect key 2,Select key 3 and import to card</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gpg<span class=\"token operator\">></span> key <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>gpg<span class=\"token operator\">></span> key <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>gpg<span class=\"token operator\">></span> keytocard</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>gpg<span class=\"token operator\">></span> quit</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>y</pre></td></tr></table></figure><p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/gpg_key2card(3).png\" alt=\"\" /></p>\n<h1 id=\"print-card-status\"><a class=\"anchor\" href=\"#print-card-status\">#</a> Print Card Status</h1>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gpg --card-status</pre></td></tr></table></figure><p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/gpg_card_status.png\" alt=\"\" /></p>\n<h1 id=\"bind-smart-card\"><a class=\"anchor\" href=\"#bind-smart-card\">#</a> Bind Smart Card</h1>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gpg-connect-agent <span class=\"token string\">\"scd serialno\"</span> <span class=\"token string\">\"learn --force\"</span> /bye</pre></td></tr></table></figure><h1 id=\"set-touch-on\"><a class=\"anchor\" href=\"#set-touch-on\">#</a> Set Touch On</h1>\n<p>for yubikey &amp; conokey , the gpg touch default settting is off. use ykman change this setting.</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Signature Key</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>ykman openpgp keys set-touch sig on</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># Authentication Key</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>ykman openpgp keys set-touch aut on</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># Encryption Key</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>ykman openpgp keys set-touch enc on</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># Attachment Key</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>ykman openpgp keys set-touch att on</pre></td></tr></table></figure>",
            "tags": [
                "gpg",
                "yubikey",
                "canokeys"
            ]
        },
        {
            "id": "https://www.taoidle.com/2022/05/24/%E4%BD%BF%E7%94%A8cloudflare%E5%92%8Cjsdelivr%E5%81%9A%E4%B8%80%E4%B8%AA%E9%9A%8F%E6%9C%BA%E5%9B%BEapi/",
            "url": "https://www.taoidle.com/2022/05/24/%E4%BD%BF%E7%94%A8cloudflare%E5%92%8Cjsdelivr%E5%81%9A%E4%B8%80%E4%B8%AA%E9%9A%8F%E6%9C%BA%E5%9B%BEapi/",
            "title": "使用cloudflare和jsdelivr做一个随机图api",
            "date_published": "2022-05-24T08:34:24.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>博客最近进行迁移，原本使用 wordpress，现迁移至 hexo。从原来的腾讯云轻量应用服务器迁移到 cloudflare page。既然如此，那原本部署在腾讯云上使用 python 搭建的随即图 api 也没必要存在了。做随机图 api 的初衷只是因为想要自己喜欢的图。</p>\n<p>注：博主的图片只有不到 30 张，小样本使用，数量较少。</p>\n<h2 id=\"正文\"><a class=\"anchor\" href=\"#正文\">#</a> 正文</h2>\n<h3 id=\"思路\"><a class=\"anchor\" href=\"#思路\">#</a> 思路</h3>\n<p><s>比较简单，cloudflare kv 有 1G 空间，把 hash 和图片对应的路径存进 kv 里，然后 worker 从 kv 里随机取一个出来跳转到 jsdelivr 就行了</s></p>\n<h4 id=\"随机图接口\"><a class=\"anchor\" href=\"#随机图接口\">#</a> 随机图接口</h4>\n<p>由于 cloudflare kv 的免费额度限制，write、delete、list 每天只有 1000 次，而 read 有 10 万次， 所以尽可能将 kv 操作使用 read 来实现。</p>\n<p>kv 中存储了一个 index 数据，用来查找数据，如下：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"KV_INDEX\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"total_num\"</span><span class=\"token operator\">:</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"map_total\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"map_num\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token string\">\"MAP_1_NUM\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token string\">\"MAP_2_NUM\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token string\">\"MAP_3_NUM\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token property\">\"map_list\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token string\">\"MAP_KEY_1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token string\">\"MAP_KEY_2\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token string\">\"MAP_KEY_3\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>存储了若干个表，表如下</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"MAP_KEY_1\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"pic_1_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_1_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"pic_2_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_2_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"pic_3_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_3_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"pic_99_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_99_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">\"pic_100_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_100_path\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"MAP_KEY_2\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"pic_101_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_101_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"pic_102_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_102_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"pic_103_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_103_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"pic_199_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_199_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">\"pic_200_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_200_path\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"MAP_KEY_3\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"pic_201_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_201_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"pic_202_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_202_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"pic_203_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_203_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"pic_299_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_299_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">\"pic_300_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_300_path\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>于是每次随机一张图会产生两次 read 操作，一次从索引中拿到 map_key, 一次从 map 中取数据</p>\n<h4 id=\"数据更新接口\"><a class=\"anchor\" href=\"#数据更新接口\">#</a> 数据更新接口</h4>\n<p>接受数据如下</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"pic_1_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_1_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"pic_2_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_2_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"pic_3_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_3_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"pic_99_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_99_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"pic_100_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_100_path\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>更新数据时步骤如下</p>\n<ol>\n<li>\n<p>从 kv 中取索引，在从索引中获取到表中的 key</p>\n</li>\n<li>\n<p>判断更新数据的 key 在表中时候存在，不存在则将该项添加到待更新表</p>\n</li>\n<li>\n<p>全部待更新数据添加到待更新表后，更新索引数据，最后把所有更新的数据写入到 kv 中</p>\n</li>\n</ol>\n<h3 id=\"资源消耗\"><a class=\"anchor\" href=\"#资源消耗\">#</a> 资源消耗</h3>\n<h4 id=\"随机图接口-2\"><a class=\"anchor\" href=\"#随机图接口-2\">#</a> 随机图接口</h4>\n<p>于是每次随机一张图会产生两次 read 操作，一次从索引中拿到 map_key, 一次从 map 中取数据，以每天 cloudflare kv 每天 10 万次免费的 read，一天可以请求随机图接口 5 万次</p>\n<h4 id=\"数据更新接口-2\"><a class=\"anchor\" href=\"#数据更新接口-2\">#</a> 数据更新接口</h4>\n<p>假设 kv 中每个表存储 1000 条数据，kv 中已有一个表存储 100 条数据，更新的数据有 2000 条，更新时会读取索引值一次，读取已存在的所有表（这里为一次），更新的信息为 已经存在的表 1 增加了 900 条数据，创建表 2 及表 2 1000 条数据，创建表 3 及表 3 100 条数据，索引值更新。此时会对 kv 做 4 次写入，总共是 2 次读取，4 次写入。</p>\n<h3 id=\"步骤\"><a class=\"anchor\" href=\"#步骤\">#</a> 步骤</h3>\n<ol>\n<li>\n<p>在 github 上创建一个空仓库用于存放图片，然后将自己喜欢的图片提交到该仓库即可，然后就可以在 jsdelivr 上取到该仓库的文件</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>https://cdn.assets.taoidle.com/gh/github用户名/仓库名@分支</pre></td></tr></table></figure></li>\n<li>\n<p>克隆 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1Rhb2lkbGUvUmFuZFBpY1dvcmtlcg==\">RandPicWorker</span> 这个项目，在项目根目录下执行 yarn 打好依赖。然后使用以下命令登录 cloudflare</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">yarn</span> run wrangler login</pre></td></tr></table></figure></li>\n<li>\n<p>在 cloudflare 上创建一个 kv namespace</p>\n</li>\n<li>\n<p>填写项目里 wrangler.toml 文件缺少的信息</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/Snipaste_2022-05-25_22-30-06.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>执行 package.json scripts 里的 publish 命令</p>\n</li>\n<li>\n<p>随便写个脚本把图片信息丢上去完事 <span class=\"spoiler\" title=\"你知道得太多了\">本来这里是有个 rust 写的程序的，用于将图片转为 webp 然后把 hash 值和路径丢到 worker 上，但是由于目前比较忙，有空再写</span></p>\n</li>\n</ol>\n<h2 id=\"结束语\"><a class=\"anchor\" href=\"#结束语\">#</a> 结束语</h2>\n<p>代码过于简单没啥好说的，好久没写博客了上来水一篇</p>\n<hr />\n<p>端午假期稍微更新了一下</p>\n",
            "tags": [
                "nodejs",
                "cloudflare",
                "cloudflare worker",
                "github",
                "cdn",
                "typescript"
            ]
        },
        {
            "id": "https://www.taoidle.com/2020/10/22/Windows%E4%B8%8BClion+OpenCV%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/",
            "url": "https://www.taoidle.com/2020/10/22/Windows%E4%B8%8BClion+OpenCV%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/",
            "title": "Windows下Clion+OpenCV开发环境搭建",
            "date_published": "2020-10-22T04:11:18.000Z",
            "content_html": "<h3 id=\"准备\"><a class=\"anchor\" href=\"#准备\">#</a> 准备</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamV0YnJhaW5zLmNvbS9jbGlvbi8=\">Clion</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zb3VyY2Vmb3JnZS5uZXQvcHJvamVjdHMvbWluZ3ctdzY0L2ZpbGVzLw==\">MinGW</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbWFrZS5vcmcvZG93bmxvYWQv\">Cmake</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vcGVuY3Yub3JnL3JlbGVhc2VzLw==\">OpenCV</span></li>\n</ul>\n<h3 id=\"步骤\"><a class=\"anchor\" href=\"#步骤\">#</a> 步骤</h3>\n<ol>\n<li>\n<p>安装 Clion</p>\n</li>\n<li>\n<p>安装 MinGW 并将 MinGW\\bin 添加到环境变量</p>\n</li>\n<li>\n<p>安装 CMake</p>\n</li>\n<li>\n<p>解压 OpenCV 源码</p>\n</li>\n<li>\n<p>打开 CMake, 在第一个框中打开源码目录，第二个框为编译目录，点击 Configure</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_645ab42b1af5be15646efb3290064a98.jpg\" alt=\"\" /></p>\n<p>再次点击 Configure 红色消失</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_e4af1ce913054df34ee86ef4408fde7e.jpg\" alt=\"\" /></p>\n<p>点击 Generate</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_3c90537c4260f5537ea63ea0f55eafc6.jpg\" alt=\"\" /></p>\n</li>\n<li>\n<p>打开 CMD 进入到 MinGW-build 目录下，执行 mingw32-make</p>\n</li>\n<li>\n<p>上一步执行完成后执行 mingw32-make install，生成 install 文件夹</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_a5da3358b4fddbd6fc4dc897bd325052.jpg\" alt=\"\" /></p>\n</li>\n</ol>\n<h3 id=\"clion中使用opencv\"><a class=\"anchor\" href=\"#clion中使用opencv\">#</a> Clion 中使用 OpenCV</h3>\n<ul>\n<li>Clion 设置</li>\n</ul>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_ed7877bd36d1481e37c61faba10c778b.jpg\" alt=\"\" /></p>\n<ul>\n<li>CMakeLists.txt 文件配置</li>\n</ul>\n<pre><code>cmake_minimum_required(VERSION 3.17)\nproject(test)\nset(CMAKE_CXX_FLAGS &quot;$&#123;CMAKE_CXX_FLAGS&#125; -std=c++11&quot;)\nset(OpenCV_DIR &quot;C:\\\\OpenCV&quot;)\nset(CMAKE_MODULE_PATH $&#123;CMAKE_MODULE_PATH&#125; &quot;$&#123;CMAKE_SOURCE_DIR&#125;/cmake/&quot;)\nfind_package(OpenCV)\ninclude_directories($&#123;OpenCV_INCLUDE_DIRS&#125;)\nadd_executable(test camera_calibration_correct.cpp)\nset(OpenCV_LIBS opencv_core opencv_imgproc opencv_highgui opencv_imgcodecs)\ntarget_link_libraries(test $&#123;OpenCV_LIBS&#125;)\n</code></pre>\n",
            "tags": [
                "opencv",
                "图像处理"
            ]
        },
        {
            "id": "https://www.taoidle.com/2020/07/02/manjaro%20npm%E6%8D%A2%E6%BA%90/",
            "url": "https://www.taoidle.com/2020/07/02/manjaro%20npm%E6%8D%A2%E6%BA%90/",
            "title": "manjaro npm换源",
            "date_published": "2020-07-02T13:29:20.000Z",
            "content_html": "<h2 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> pacman -S nodejs <span class=\"token function\">npm</span></pre></td></tr></table></figure><h2 id=\"换源\"><a class=\"anchor\" href=\"#换源\">#</a> 换源</h2>\n<ol>\n<li>\n<p>方法一：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> config <span class=\"token builtin class-name\">set</span> registry https://registry.npm.taobao.org</pre></td></tr></table></figure></li>\n</ol>\n<hr />\n<ol start=\"2\">\n<li>\n<p>方法二： 安装 cnpm 代替 npm</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g cnpm --registry<span class=\"token operator\">=</span>https://registry.npm.taobao.org</pre></td></tr></table></figure></li>\n</ol>\n",
            "tags": [
                "Linux",
                "manjaro",
                "nodejs",
                "npm"
            ]
        },
        {
            "id": "https://www.taoidle.com/2020/06/12/ubuntu20.04%E6%8D%A2%E6%BA%90/",
            "url": "https://www.taoidle.com/2020/06/12/ubuntu20.04%E6%8D%A2%E6%BA%90/",
            "title": "ubuntu20.04换源",
            "date_published": "2020-06-11T17:52:27.000Z",
            "content_html": "<p>依次执行以下命令</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token function\">vim</span>        安装vim编辑器</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span>  <span class=\"token function\">cp</span>   /etc/apt/sources.list   /etc/apt/sources.list.bak        备份源文件</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">sudo</span>  <span class=\"token function\">chmod</span>  <span class=\"token number\">777</span>  /etc/apt/sources.list         修改权限</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">sudo</span>  <span class=\"token function\">vim</span>   /etc/apt/sources.list       编辑源文件</pre></td></tr></table></figure><p>在 vim 编辑器中将原来内容替换为</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal universe</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates universe</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal multiverse</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates multiverse</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security universe</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security multiverse</pre></td></tr></table></figure><p>这里为清华源，可将链接替换为你喜欢的软件源 然后执行</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> list --upgradable </pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> upgrade</pre></td></tr></table></figure><p>结束语：啊，又水了一篇博文，快乐（不是</p>\n",
            "tags": [
                "Linux",
                "ubuntu",
                "ubuntu20.04"
            ]
        },
        {
            "id": "https://www.taoidle.com/2020/06/12/%E5%85%B3%E4%BA%8EUbuntu20.04%E5%AE%89%E8%A3%85arm-linux-gcc%E5%8F%91%E7%94%9F%E7%9A%84%E9%94%99%E8%AF%AF/",
            "url": "https://www.taoidle.com/2020/06/12/%E5%85%B3%E4%BA%8EUbuntu20.04%E5%AE%89%E8%A3%85arm-linux-gcc%E5%8F%91%E7%94%9F%E7%9A%84%E9%94%99%E8%AF%AF/",
            "title": "关于Ubuntu20.04安装arm-linux-gcc发生的错误",
            "date_published": "2020-06-11T17:30:58.000Z",
            "content_html": "<p>ubuntu20.04 安装 arm-linux-gcc 发生错误:libpng3 : Depends: libpng12-0 (&gt;= 1.2.5.0-2) but it is not installed</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_ffc711dadcd44f60ffc78cf327cc4886.jpg\" alt=\"\" /> 解决方法：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> add-apt-repository ppa:linuxuprising/libpng12</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> list --upgradable</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> --fix-broken <span class=\"token function\">install</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> gcc-arm-linux-gnueabi</pre></td></tr></table></figure>",
            "tags": [
                "ubuntu",
                "ARM",
                "arm-linux-gcc",
                "gcc"
            ]
        },
        {
            "id": "https://www.taoidle.com/2020/05/10/Android%20Studio%E8%8E%B7%E5%8F%96SHA1/",
            "url": "https://www.taoidle.com/2020/05/10/Android%20Studio%E8%8E%B7%E5%8F%96SHA1/",
            "title": "Android Studio获取SHA1",
            "date_published": "2020-05-10T08:11:21.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>使用高德地图，腾讯地图等地图 api 都需要用到 SHA1 值</p>\n<h2 id=\"步骤\"><a class=\"anchor\" href=\"#步骤\">#</a> 步骤</h2>\n<ol>\n<li>检查 Android Studio 工程下时候存在 keystore 类型文件，如果不存在则执行命令</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool -v -list -keystore keystore文件路径</pre></td></tr></table></figure><p>会出现错误</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool 错误: java.lang.Exception: 密钥库文件不存在</pre></td></tr></table></figure><ol start=\"2\">\n<li>创建密钥库文件</li>\n</ol>\n<p>在 Android Studio 中打开 Terminal，这里以创建一个 debug.keystore 为例，输入命令</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool -genkey -v -keystore debug.keystore -alias androiddebugkey -keyalg RSA -validity <span class=\"token number\">10000</span></pre></td></tr></table></figure><p>填写注册信息（可随意填写），设置密码，密码需记住后续获取 SHA1 需要用到密码</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_dda6a1e249ae12028b5cb20d65b16d4c.jpg\" alt=\"\" /></p>\n<p>查看 debug.keystore 是否生成，得到 SHA1 值（红框部分）</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool -list -v -keystore debug.keystore</pre></td></tr></table></figure><p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_523dfce26e74a850d2cd1eda3171290a.jpg\" alt=\"\" /></p>\n",
            "tags": [
                "android",
                "android studio"
            ]
        }
    ]
}