{
    "version": "https://jsonfeed.org/version/1",
    "title": "Taoidle • All posts by \"折腾记录\" category",
    "description": "秋深し、情けは人の、為ならず",
    "home_page_url": "https://www.taoidle.com",
    "items": [
        {
            "id": "https://www.taoidle.com/2022/05/24/%E4%BD%BF%E7%94%A8cloudflare%E5%92%8Cjsdelivr%E5%81%9A%E4%B8%80%E4%B8%AA%E9%9A%8F%E6%9C%BA%E5%9B%BEapi/",
            "url": "https://www.taoidle.com/2022/05/24/%E4%BD%BF%E7%94%A8cloudflare%E5%92%8Cjsdelivr%E5%81%9A%E4%B8%80%E4%B8%AA%E9%9A%8F%E6%9C%BA%E5%9B%BEapi/",
            "title": "使用cloudflare和jsdelivr做一个随机图api",
            "date_published": "2022-05-24T08:34:24.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>博客最近进行迁移，原本使用 wordpress，现迁移至 hexo。从原来的腾讯云轻量应用服务器迁移到 cloudflare page。既然如此，那原本部署在腾讯云上使用 python 搭建的随即图 api 也没必要存在了。做随机图 api 的初衷只是因为想要自己喜欢的图。</p>\n<p>注：博主的图片只有不到 30 张，小样本使用，数量较少。</p>\n<h2 id=\"正文\"><a class=\"anchor\" href=\"#正文\">#</a> 正文</h2>\n<h3 id=\"思路\"><a class=\"anchor\" href=\"#思路\">#</a> 思路</h3>\n<p><s>比较简单，cloudflare kv 有 1G 空间，把 hash 和图片对应的路径存进 kv 里，然后 worker 从 kv 里随机取一个出来跳转到 jsdelivr 就行了</s></p>\n<h4 id=\"随机图接口\"><a class=\"anchor\" href=\"#随机图接口\">#</a> 随机图接口</h4>\n<p>由于 cloudflare kv 的免费额度限制，write、delete、list 每天只有 1000 次，而 read 有 10 万次， 所以尽可能将 kv 操作使用 read 来实现。</p>\n<p>kv 中存储了一个 index 数据，用来查找数据，如下：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"KV_INDEX\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"total_num\"</span><span class=\"token operator\">:</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"map_total\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"map_num\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token string\">\"MAP_1_NUM\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token string\">\"MAP_2_NUM\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token string\">\"MAP_3_NUM\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token property\">\"map_list\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token string\">\"MAP_KEY_1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token string\">\"MAP_KEY_2\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token string\">\"MAP_KEY_3\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>存储了若干个表，表如下</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"MAP_KEY_1\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"pic_1_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_1_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"pic_2_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_2_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"pic_3_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_3_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"pic_99_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_99_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">\"pic_100_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_100_path\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"MAP_KEY_2\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"pic_101_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_101_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"pic_102_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_102_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"pic_103_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_103_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"pic_199_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_199_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">\"pic_200_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_200_path\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"MAP_KEY_3\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"pic_201_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_201_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"pic_202_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_202_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"pic_203_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_203_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"pic_299_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_299_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">\"pic_300_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_300_path\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>于是每次随机一张图会产生两次 read 操作，一次从索引中拿到 map_key, 一次从 map 中取数据</p>\n<h4 id=\"数据更新接口\"><a class=\"anchor\" href=\"#数据更新接口\">#</a> 数据更新接口</h4>\n<p>接受数据如下</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"pic_1_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_1_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"pic_2_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_2_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"pic_3_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_3_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"pic_99_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_99_path\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"pic_100_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pic_100_path\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>更新数据时步骤如下</p>\n<ol>\n<li>\n<p>从 kv 中取索引，在从索引中获取到表中的 key</p>\n</li>\n<li>\n<p>判断更新数据的 key 在表中时候存在，不存在则将该项添加到待更新表</p>\n</li>\n<li>\n<p>全部待更新数据添加到待更新表后，更新索引数据，最后把所有更新的数据写入到 kv 中</p>\n</li>\n</ol>\n<h3 id=\"资源消耗\"><a class=\"anchor\" href=\"#资源消耗\">#</a> 资源消耗</h3>\n<h4 id=\"随机图接口-2\"><a class=\"anchor\" href=\"#随机图接口-2\">#</a> 随机图接口</h4>\n<p>于是每次随机一张图会产生两次 read 操作，一次从索引中拿到 map_key, 一次从 map 中取数据，以每天 cloudflare kv 每天 10 万次免费的 read，一天可以请求随机图接口 5 万次</p>\n<h4 id=\"数据更新接口-2\"><a class=\"anchor\" href=\"#数据更新接口-2\">#</a> 数据更新接口</h4>\n<p>假设 kv 中每个表存储 1000 条数据，kv 中已有一个表存储 100 条数据，更新的数据有 2000 条，更新时会读取索引值一次，读取已存在的所有表（这里为一次），更新的信息为 已经存在的表 1 增加了 900 条数据，创建表 2 及表 2 1000 条数据，创建表 3 及表 3 100 条数据，索引值更新。此时会对 kv 做 4 次写入，总共是 2 次读取，4 次写入。</p>\n<h3 id=\"步骤\"><a class=\"anchor\" href=\"#步骤\">#</a> 步骤</h3>\n<ol>\n<li>\n<p>在 github 上创建一个空仓库用于存放图片，然后将自己喜欢的图片提交到该仓库即可，然后就可以在 jsdelivr 上取到该仓库的文件</p>\n<pre><code class=\"language-console\">https://cdn.assets.taoidle.com/gh/github用户名/仓库名@分支\n</code></pre>\n</li>\n<li>\n<p>克隆 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1Rhb2lkbGUvUmFuZFBpY1dvcmtlcg==\">RandPicWorker</span> 这个项目，在项目根目录下执行 yarn 打好依赖。然后使用以下命令登录 cloudflare</p>\n<pre><code class=\"language-console\">yarn run wrangler login\n</code></pre>\n</li>\n<li>\n<p>在 cloudflare 上创建一个 kv namespace</p>\n</li>\n<li>\n<p>填写项目里 wrangler.toml 文件缺少的信息</p>\n<p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/Snipaste_2022-05-25_22-30-06.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>执行 package.json scripts 里的 publish 命令</p>\n</li>\n<li>\n<p>随便写个脚本把图片信息丢上去完事 <span class=\"spoiler\" title=\"你知道得太多了\">本来这里是有个 rust 写的程序的，用于将图片转为 webp 然后把 hash 值和路径丢到 worker 上，但是由于目前比较忙，有空再写</span></p>\n</li>\n</ol>\n<h2 id=\"结束语\"><a class=\"anchor\" href=\"#结束语\">#</a> 结束语</h2>\n<p>代码过于简单没啥好说的，好久没写博客了上来水一篇</p>\n<hr />\n<p>端午假期稍微更新了一下</p>\n",
            "tags": [
                "nodejs",
                "cloudflare",
                "cloudflare worker",
                "github",
                "cdn",
                "typescript"
            ]
        },
        {
            "id": "https://www.taoidle.com/2020/10/22/windows%E4%B8%8Bclionopencv%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/",
            "url": "https://www.taoidle.com/2020/10/22/windows%E4%B8%8Bclionopencv%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/",
            "title": "Windows下Clion+OpenCV开发环境搭建",
            "date_published": "2020-10-22T04:11:18.000Z",
            "content_html": "<h3 id=\"准备\"><a class=\"anchor\" href=\"#准备\">#</a> 准备</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamV0YnJhaW5zLmNvbS9jbGlvbi8=\">Clion</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zb3VyY2Vmb3JnZS5uZXQvcHJvamVjdHMvbWluZ3ctdzY0L2ZpbGVzLw==\">MinGW</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbWFrZS5vcmcvZG93bmxvYWQv\">Cmake</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vcGVuY3Yub3JnL3JlbGVhc2VzLw==\">OpenCV</span></li>\n</ul>\n<h3 id=\"步骤\"><a class=\"anchor\" href=\"#步骤\">#</a> 步骤</h3>\n<ol>\n<li>安装 Clion</li>\n<li>安装 MinGW 并将 MinGW\\bin 添加到环境变量</li>\n<li>安装 CMake</li>\n<li>解压 OpenCV 源码</li>\n<li>打开 CMake, 在第一个框中打开源码目录，第二个框为编译目录，点击 Configure <img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_645ab42b1af5be15646efb3290064a98.jpg\" alt=\"\" />再次点击 Configure 红色消失 <img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_e4af1ce913054df34ee86ef4408fde7e.jpg\" alt=\"\" /> 点击 Generate <img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_3c90537c4260f5537ea63ea0f55eafc6.jpg\" alt=\"\" /></li>\n<li>打开 CMD 进入到 MinGW-build 目录下，执行 mingw32-make</li>\n<li>上一步执行完成后执行 mingw32-make install，生成 install 文件夹 <img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_a5da3358b4fddbd6fc4dc897bd325052.jpg\" alt=\"\" /></li>\n</ol>\n<h3 id=\"clion中使用opencv\"><a class=\"anchor\" href=\"#clion中使用opencv\">#</a> Clion 中使用 OpenCV</h3>\n<ul>\n<li>Clion 设置 <img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_ed7877bd36d1481e37c61faba10c778b.jpg\" alt=\"\" /></li>\n<li>CMakeLists.txt 文件配置</li>\n</ul>\n<pre><code>cmake_minimum_required(VERSION 3.17)\nproject(test)\nset(CMAKE_CXX_FLAGS &quot;$&#123;CMAKE_CXX_FLAGS&#125; -std=c++11&quot;)\nset(OpenCV_DIR &quot;C:\\\\OpenCV&quot;)\nset(CMAKE_MODULE_PATH $&#123;CMAKE_MODULE_PATH&#125; &quot;$&#123;CMAKE_SOURCE_DIR&#125;/cmake/&quot;)\nfind_package(OpenCV)\ninclude_directories($&#123;OpenCV_INCLUDE_DIRS&#125;)\nadd_executable(test camera_calibration_correct.cpp)\nset(OpenCV_LIBS opencv_core opencv_imgproc opencv_highgui opencv_imgcodecs)\ntarget_link_libraries(test $&#123;OpenCV_LIBS&#125;)\n</code></pre>\n",
            "tags": [
                "opencv",
                "图像处理"
            ]
        },
        {
            "id": "https://www.taoidle.com/2020/07/02/manjaro-npm%E6%8D%A2%E6%BA%90/",
            "url": "https://www.taoidle.com/2020/07/02/manjaro-npm%E6%8D%A2%E6%BA%90/",
            "title": "manjaro npm换源",
            "date_published": "2020-07-02T13:29:20.000Z",
            "content_html": "<h2 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> pacman -S nodejs <span class=\"token function\">npm</span></pre></td></tr></table></figure><h2 id=\"换源\"><a class=\"anchor\" href=\"#换源\">#</a> 换源</h2>\n<ol>\n<li>\n<p>方法一：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> config <span class=\"token builtin class-name\">set</span> registry https://registry.npm.taobao.org</pre></td></tr></table></figure></li>\n</ol>\n<hr />\n<ol start=\"2\">\n<li>\n<p>方法二： 安装 cnpm 代替 npm</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g cnpm --registry<span class=\"token operator\">=</span>https://registry.npm.taobao.org</pre></td></tr></table></figure></li>\n</ol>\n",
            "tags": [
                "Linux",
                "manjaro",
                "nodejs",
                "npm"
            ]
        },
        {
            "id": "https://www.taoidle.com/2020/06/12/ubuntu20-04%E6%8D%A2%E6%BA%90/",
            "url": "https://www.taoidle.com/2020/06/12/ubuntu20-04%E6%8D%A2%E6%BA%90/",
            "title": "ubuntu20.04换源",
            "date_published": "2020-06-11T17:52:27.000Z",
            "content_html": "<p>依次执行以下命令</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token function\">vim</span>        安装vim编辑器</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span>  <span class=\"token function\">cp</span>   /etc/apt/sources.list   /etc/apt/sources.list.bak        备份源文件</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">sudo</span>  <span class=\"token function\">chmod</span>  <span class=\"token number\">777</span>  /etc/apt/sources.list         修改权限</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">sudo</span>  <span class=\"token function\">vim</span>   /etc/apt/sources.list       编辑源文件</pre></td></tr></table></figure><p>在 vim 编辑器中将原来内容替换为</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal universe</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates universe</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal multiverse</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates multiverse</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security universe</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security multiverse</pre></td></tr></table></figure><p>这里为清华源，可将链接替换为你喜欢的软件源 然后执行</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> list --upgradable </pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> upgrade</pre></td></tr></table></figure><p>结束语：啊，又水了一篇博文，快乐（不是</p>\n",
            "tags": [
                "Linux",
                "ubuntu",
                "ubuntu20.04"
            ]
        },
        {
            "id": "https://www.taoidle.com/2020/06/12/%E5%85%B3%E4%BA%8Eubuntu20-04%E5%AE%89%E8%A3%85arm-linux-gcc%E5%8F%91%E7%94%9F%E7%9A%84%E9%94%99%E8%AF%AF/",
            "url": "https://www.taoidle.com/2020/06/12/%E5%85%B3%E4%BA%8Eubuntu20-04%E5%AE%89%E8%A3%85arm-linux-gcc%E5%8F%91%E7%94%9F%E7%9A%84%E9%94%99%E8%AF%AF/",
            "title": "关于Ubuntu20.04安装arm-linux-gcc发生的错误",
            "date_published": "2020-06-11T17:30:58.000Z",
            "content_html": "<p>ubuntu20.04 安装 arm-linux-gcc 发生错误:libpng3 : Depends: libpng12-0 (&gt;= 1.2.5.0-2) but it is not installed <img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_ffc711dadcd44f60ffc78cf327cc4886.jpg\" alt=\"\" /> 解决方法：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> add-apt-repository ppa:linuxuprising/libpng12</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> list --upgradable</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> --fix-broken <span class=\"token function\">install</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> gcc-arm-linux-gnueabi</pre></td></tr></table></figure>",
            "tags": [
                "ubuntu",
                "ARM",
                "arm-linux-gcc",
                "gcc"
            ]
        },
        {
            "id": "https://www.taoidle.com/2020/05/10/android-studio%E8%8E%B7%E5%8F%96sha1/",
            "url": "https://www.taoidle.com/2020/05/10/android-studio%E8%8E%B7%E5%8F%96sha1/",
            "title": "Android Studio获取SHA1",
            "date_published": "2020-05-10T08:11:21.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>使用高德地图，腾讯地图等地图 api 都需要用到 SHA1 值</p>\n<h2 id=\"步骤\"><a class=\"anchor\" href=\"#步骤\">#</a> 步骤</h2>\n<ol>\n<li>检查 Android Studio 工程下时候存在 keystore 类型文件，如果不存在则执行命令</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool -v -list -keystore keystore文件路径</pre></td></tr></table></figure><p>会出现错误</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool 错误: java.lang.Exception: 密钥库文件不存在</pre></td></tr></table></figure><ol start=\"2\">\n<li>创建密钥库文件</li>\n</ol>\n<p>在 Android Studio 中打开 Terminal，这里以创建一个 debug.keystore 为例，输入命令</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool -genkey -v -keystore debug.keystore -alias androiddebugkey -keyalg RSA -validity <span class=\"token number\">10000</span></pre></td></tr></table></figure><p>填写注册信息（可随意填写），设置密码，密码需记住后续获取 SHA1 需要用到密码 <img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_dda6a1e249ae12028b5cb20d65b16d4c.jpg\" alt=\"\" /> 查看 debug.keystore 是否生成，得到 SHA1 值（红框部分）</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool -list -v -keystore debug.keystore</pre></td></tr></table></figure><p><img data-src=\"https://cdn.assets.taoidle.com/gh/taoidle/taoidle.github.io@master/assets/images/wp_editor_md_523dfce26e74a850d2cd1eda3171290a.jpg\" alt=\"\" /></p>\n",
            "tags": [
                "android",
                "android studio"
            ]
        }
    ]
}